-- MySQL dump 10.14  Distrib 5.5.60-MariaDB, for Linux (x86_64)
--
-- Host: localhost    Database: blog
-- ------------------------------------------------------
-- Server version	5.5.60-MariaDB

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `wp_commentmeta`
--

DROP TABLE IF EXISTS `wp_commentmeta`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_commentmeta` (
  `meta_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `comment_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  `meta_key` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `meta_value` longtext COLLATE utf8mb4_unicode_ci,
  PRIMARY KEY (`meta_id`),
  KEY `comment_id` (`comment_id`),
  KEY `meta_key` (`meta_key`(191))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_commentmeta`
--

LOCK TABLES `wp_commentmeta` WRITE;
/*!40000 ALTER TABLE `wp_commentmeta` DISABLE KEYS */;
/*!40000 ALTER TABLE `wp_commentmeta` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_comments`
--

DROP TABLE IF EXISTS `wp_comments`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_comments` (
  `comment_ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `comment_post_ID` bigint(20) unsigned NOT NULL DEFAULT '0',
  `comment_author` tinytext COLLATE utf8mb4_unicode_ci NOT NULL,
  `comment_author_email` varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `comment_author_url` varchar(200) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `comment_author_IP` varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `comment_date` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `comment_date_gmt` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `comment_content` text COLLATE utf8mb4_unicode_ci NOT NULL,
  `comment_karma` int(11) NOT NULL DEFAULT '0',
  `comment_approved` varchar(20) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '1',
  `comment_agent` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `comment_type` varchar(20) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `comment_parent` bigint(20) unsigned NOT NULL DEFAULT '0',
  `user_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  PRIMARY KEY (`comment_ID`),
  KEY `comment_post_ID` (`comment_post_ID`),
  KEY `comment_approved_date_gmt` (`comment_approved`,`comment_date_gmt`),
  KEY `comment_date_gmt` (`comment_date_gmt`),
  KEY `comment_parent` (`comment_parent`),
  KEY `comment_author_email` (`comment_author_email`(10))
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_comments`
--

LOCK TABLES `wp_comments` WRITE;
/*!40000 ALTER TABLE `wp_comments` DISABLE KEYS */;
INSERT INTO `wp_comments` VALUES (2,70,'我是天才','czsyzbxp@163.com','','131.228.2.20','2018-10-09 09:16:20','2018-10-09 09:16:20','不错',0,'1','Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36','',0,0),(3,86,'鲍晓辉','kissbaofish@gmail.com','','183.131.240.165','2018-10-10 01:09:28','2018-10-10 01:09:28','到此一游~',0,'1','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36','',0,0),(4,82,'鲍晓辉','kissbaofish@gmail.com','http://kissbaofish.cn','183.131.240.165','2018-10-10 01:17:06','2018-10-10 01:17:06','可以用Enlighter 插件，使代码展示更美观。',0,'1','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36','',0,0);
/*!40000 ALTER TABLE `wp_comments` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_links`
--

DROP TABLE IF EXISTS `wp_links`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_links` (
  `link_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `link_url` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `link_name` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `link_image` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `link_target` varchar(25) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `link_description` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `link_visible` varchar(20) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT 'Y',
  `link_owner` bigint(20) unsigned NOT NULL DEFAULT '1',
  `link_rating` int(11) NOT NULL DEFAULT '0',
  `link_updated` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `link_rel` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `link_notes` mediumtext COLLATE utf8mb4_unicode_ci NOT NULL,
  `link_rss` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  PRIMARY KEY (`link_id`),
  KEY `link_visible` (`link_visible`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_links`
--

LOCK TABLES `wp_links` WRITE;
/*!40000 ALTER TABLE `wp_links` DISABLE KEYS */;
/*!40000 ALTER TABLE `wp_links` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_options`
--

DROP TABLE IF EXISTS `wp_options`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_options` (
  `option_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `option_name` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `option_value` longtext COLLATE utf8mb4_unicode_ci NOT NULL,
  `autoload` varchar(20) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT 'yes',
  PRIMARY KEY (`option_id`),
  UNIQUE KEY `option_name` (`option_name`)
) ENGINE=InnoDB AUTO_INCREMENT=1210 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_options`
--

LOCK TABLES `wp_options` WRITE;
/*!40000 ALTER TABLE `wp_options` DISABLE KEYS */;
INSERT INTO `wp_options` VALUES (1,'siteurl','http://45.77.202.181','yes'),(2,'home','http://45.77.202.181','yes'),(3,'blogname','浮生一片草','yes'),(4,'blogdescription','keep life easier','yes'),(5,'users_can_register','0','yes'),(6,'admin_email','bxp0805@163.com','yes'),(7,'start_of_week','1','yes'),(8,'use_balanceTags','0','yes'),(9,'use_smilies','1','yes'),(10,'require_name_email','1','yes'),(11,'comments_notify','1','yes'),(12,'posts_per_rss','10','yes'),(13,'rss_use_excerpt','0','yes'),(14,'mailserver_url','mail.example.com','yes'),(15,'mailserver_login','login@example.com','yes'),(16,'mailserver_pass','password','yes'),(17,'mailserver_port','110','yes'),(18,'default_category','1','yes'),(19,'default_comment_status','open','yes'),(20,'default_ping_status','open','yes'),(21,'default_pingback_flag','1','yes'),(22,'posts_per_page','10','yes'),(23,'date_format','F j, Y','yes'),(24,'time_format','g:i a','yes'),(25,'links_updated_date_format','F j, Y g:i a','yes'),(26,'comment_moderation','0','yes'),(27,'moderation_notify','1','yes'),(28,'permalink_structure','','yes'),(29,'rewrite_rules','','yes'),(30,'hack_file','0','yes'),(31,'blog_charset','UTF-8','yes'),(32,'moderation_keys','','no'),(33,'active_plugins','a:2:{i:1;s:23:\"enlighter/Enlighter.php\";i:4;s:31:\"wp-statistics/wp-statistics.php\";}','yes'),(34,'category_base','','yes'),(35,'ping_sites','http://rpc.pingomatic.com/','yes'),(36,'comment_max_links','2','yes'),(37,'gmt_offset','0','yes'),(38,'default_email_category','1','yes'),(39,'recently_edited','a:5:{i:0;s:57:\"/var/www/html/wp-content/themes/twentyseventeen/style.css\";i:2;s:59:\"/var/www/html/wp-content/themes/twentyseventeen/archive.php\";i:3;s:57:\"/var/www/html/wp-content/themes/twentyseventeen/index.php\";i:4;s:59:\"/var/www/html/wp-content/themes/twentyseventeen/sidebar.php\";i:5;s:58:\"/var/www/html/wp-content/themes/twentyseventeen/README.txt\";}','no'),(40,'template','twentyseventeen','yes'),(41,'stylesheet','twentyseventeen','yes'),(42,'comment_whitelist','1','yes'),(43,'blacklist_keys','','no'),(44,'comment_registration','0','yes'),(45,'html_type','text/html','yes'),(46,'use_trackback','0','yes'),(47,'default_role','subscriber','yes'),(48,'db_version','38590','yes'),(49,'uploads_use_yearmonth_folders','1','yes'),(50,'upload_path','','yes'),(51,'blog_public','1','yes'),(52,'default_link_category','2','yes'),(53,'show_on_front','posts','yes'),(54,'tag_base','','yes'),(55,'show_avatars','1','yes'),(56,'avatar_rating','G','yes'),(57,'upload_url_path','','yes'),(58,'thumbnail_size_w','150','yes'),(59,'thumbnail_size_h','150','yes'),(60,'thumbnail_crop','1','yes'),(61,'medium_size_w','300','yes'),(62,'medium_size_h','300','yes'),(63,'avatar_default','mystery','yes'),(64,'large_size_w','1024','yes'),(65,'large_size_h','1024','yes'),(66,'image_default_link_type','none','yes'),(67,'image_default_size','','yes'),(68,'image_default_align','','yes'),(69,'close_comments_for_old_posts','0','yes'),(70,'close_comments_days_old','14','yes'),(71,'thread_comments','1','yes'),(72,'thread_comments_depth','5','yes'),(73,'page_comments','0','yes'),(74,'comments_per_page','50','yes'),(75,'default_comments_page','newest','yes'),(76,'comment_order','asc','yes'),(77,'sticky_posts','a:0:{}','yes'),(78,'widget_categories','a:3:{i:2;a:4:{s:5:\"title\";s:0:\"\";s:5:\"count\";i:0;s:12:\"hierarchical\";i:0;s:8:\"dropdown\";i:0;}s:12:\"_multiwidget\";i:1;i:4;a:4:{s:5:\"title\";s:0:\"\";s:5:\"count\";i:1;s:12:\"hierarchical\";i:1;s:8:\"dropdown\";i:0;}}','yes'),(79,'widget_text','a:7:{i:2;a:4:{s:5:\"title\";s:7:\"Find Us\";s:4:\"text\";s:168:\"<strong>Address</strong>\n123 Main Street\nNew York, NY 10001\n\n<strong>Hours</strong>\nMonday&mdash;Friday: 9:00AM&ndash;5:00PM\nSaturday &amp; Sunday: 11:00AM&ndash;3:00PM\";s:6:\"filter\";b:1;s:6:\"visual\";b:1;}i:3;a:4:{s:5:\"title\";s:15:\"About This Site\";s:4:\"text\";s:85:\"This may be a good place to introduce yourself and your site or include some credits.\";s:6:\"filter\";b:1;s:6:\"visual\";b:1;}i:4;a:4:{s:5:\"title\";s:7:\"Find Us\";s:4:\"text\";s:120:\"<strong>Address</strong>\r\nBinjiang District, Hangzhou, China\r\n\r\n<strong>Hours</strong>\r\nMonday—Friday: 9:00AM–6:00PM\";s:6:\"filter\";b:1;s:6:\"visual\";b:1;}i:5;a:4:{s:5:\"title\";s:15:\"About This Site\";s:4:\"text\";s:36:\"This is Bao Xiaopeng\'s personal blog\";s:6:\"filter\";b:1;s:6:\"visual\";b:1;}s:12:\"_multiwidget\";i:1;i:7;a:0:{}i:8;a:4:{s:5:\"title\";s:3:\"yes\";s:4:\"text\";s:0:\"\";s:6:\"filter\";b:1;s:6:\"visual\";b:1;}}','yes'),(80,'widget_rss','a:2:{i:1;a:0:{}s:12:\"_multiwidget\";i:1;}','yes'),(81,'uninstall_plugins','a:0:{}','no'),(82,'timezone_string','','yes'),(84,'page_on_front','7','yes'),(85,'default_post_format','0','yes'),(86,'link_manager_enabled','0','yes'),(87,'finished_splitting_shared_terms','1','yes'),(88,'site_icon','0','yes'),(89,'medium_large_size_w','768','yes'),(90,'medium_large_size_h','0','yes'),(91,'wp_page_for_privacy_policy','3','yes'),(92,'show_comments_cookies_opt_in','0','yes'),(93,'initial_db_version','38590','yes'),(94,'wp_user_roles','a:5:{s:13:\"administrator\";a:2:{s:4:\"name\";s:13:\"Administrator\";s:12:\"capabilities\";a:61:{s:13:\"switch_themes\";b:1;s:11:\"edit_themes\";b:1;s:16:\"activate_plugins\";b:1;s:12:\"edit_plugins\";b:1;s:10:\"edit_users\";b:1;s:10:\"edit_files\";b:1;s:14:\"manage_options\";b:1;s:17:\"moderate_comments\";b:1;s:17:\"manage_categories\";b:1;s:12:\"manage_links\";b:1;s:12:\"upload_files\";b:1;s:6:\"import\";b:1;s:15:\"unfiltered_html\";b:1;s:10:\"edit_posts\";b:1;s:17:\"edit_others_posts\";b:1;s:20:\"edit_published_posts\";b:1;s:13:\"publish_posts\";b:1;s:10:\"edit_pages\";b:1;s:4:\"read\";b:1;s:8:\"level_10\";b:1;s:7:\"level_9\";b:1;s:7:\"level_8\";b:1;s:7:\"level_7\";b:1;s:7:\"level_6\";b:1;s:7:\"level_5\";b:1;s:7:\"level_4\";b:1;s:7:\"level_3\";b:1;s:7:\"level_2\";b:1;s:7:\"level_1\";b:1;s:7:\"level_0\";b:1;s:17:\"edit_others_pages\";b:1;s:20:\"edit_published_pages\";b:1;s:13:\"publish_pages\";b:1;s:12:\"delete_pages\";b:1;s:19:\"delete_others_pages\";b:1;s:22:\"delete_published_pages\";b:1;s:12:\"delete_posts\";b:1;s:19:\"delete_others_posts\";b:1;s:22:\"delete_published_posts\";b:1;s:20:\"delete_private_posts\";b:1;s:18:\"edit_private_posts\";b:1;s:18:\"read_private_posts\";b:1;s:20:\"delete_private_pages\";b:1;s:18:\"edit_private_pages\";b:1;s:18:\"read_private_pages\";b:1;s:12:\"delete_users\";b:1;s:12:\"create_users\";b:1;s:17:\"unfiltered_upload\";b:1;s:14:\"edit_dashboard\";b:1;s:14:\"update_plugins\";b:1;s:14:\"delete_plugins\";b:1;s:15:\"install_plugins\";b:1;s:13:\"update_themes\";b:1;s:14:\"install_themes\";b:1;s:11:\"update_core\";b:1;s:10:\"list_users\";b:1;s:12:\"remove_users\";b:1;s:13:\"promote_users\";b:1;s:18:\"edit_theme_options\";b:1;s:13:\"delete_themes\";b:1;s:6:\"export\";b:1;}}s:6:\"editor\";a:2:{s:4:\"name\";s:6:\"Editor\";s:12:\"capabilities\";a:34:{s:17:\"moderate_comments\";b:1;s:17:\"manage_categories\";b:1;s:12:\"manage_links\";b:1;s:12:\"upload_files\";b:1;s:15:\"unfiltered_html\";b:1;s:10:\"edit_posts\";b:1;s:17:\"edit_others_posts\";b:1;s:20:\"edit_published_posts\";b:1;s:13:\"publish_posts\";b:1;s:10:\"edit_pages\";b:1;s:4:\"read\";b:1;s:7:\"level_7\";b:1;s:7:\"level_6\";b:1;s:7:\"level_5\";b:1;s:7:\"level_4\";b:1;s:7:\"level_3\";b:1;s:7:\"level_2\";b:1;s:7:\"level_1\";b:1;s:7:\"level_0\";b:1;s:17:\"edit_others_pages\";b:1;s:20:\"edit_published_pages\";b:1;s:13:\"publish_pages\";b:1;s:12:\"delete_pages\";b:1;s:19:\"delete_others_pages\";b:1;s:22:\"delete_published_pages\";b:1;s:12:\"delete_posts\";b:1;s:19:\"delete_others_posts\";b:1;s:22:\"delete_published_posts\";b:1;s:20:\"delete_private_posts\";b:1;s:18:\"edit_private_posts\";b:1;s:18:\"read_private_posts\";b:1;s:20:\"delete_private_pages\";b:1;s:18:\"edit_private_pages\";b:1;s:18:\"read_private_pages\";b:1;}}s:6:\"author\";a:2:{s:4:\"name\";s:6:\"Author\";s:12:\"capabilities\";a:10:{s:12:\"upload_files\";b:1;s:10:\"edit_posts\";b:1;s:20:\"edit_published_posts\";b:1;s:13:\"publish_posts\";b:1;s:4:\"read\";b:1;s:7:\"level_2\";b:1;s:7:\"level_1\";b:1;s:7:\"level_0\";b:1;s:12:\"delete_posts\";b:1;s:22:\"delete_published_posts\";b:1;}}s:11:\"contributor\";a:2:{s:4:\"name\";s:11:\"Contributor\";s:12:\"capabilities\";a:5:{s:10:\"edit_posts\";b:1;s:4:\"read\";b:1;s:7:\"level_1\";b:1;s:7:\"level_0\";b:1;s:12:\"delete_posts\";b:1;}}s:10:\"subscriber\";a:2:{s:4:\"name\";s:10:\"Subscriber\";s:12:\"capabilities\";a:2:{s:4:\"read\";b:1;s:7:\"level_0\";b:1;}}}','yes'),(95,'fresh_site','0','yes'),(96,'widget_search','a:4:{i:2;a:1:{s:5:\"title\";s:0:\"\";}s:12:\"_multiwidget\";i:1;i:3;a:1:{s:5:\"title\";s:6:\"Search\";}i:4;a:1:{s:5:\"title\";s:6:\"Search\";}}','yes'),(97,'widget_recent-posts','a:2:{i:2;a:2:{s:5:\"title\";s:0:\"\";s:6:\"number\";i:5;}s:12:\"_multiwidget\";i:1;}','yes'),(98,'widget_recent-comments','a:2:{i:2;a:2:{s:5:\"title\";s:0:\"\";s:6:\"number\";i:5;}s:12:\"_multiwidget\";i:1;}','yes'),(99,'widget_archives','a:2:{i:2;a:3:{s:5:\"title\";s:0:\"\";s:5:\"count\";i:0;s:8:\"dropdown\";i:0;}s:12:\"_multiwidget\";i:1;}','yes'),(100,'widget_meta','a:2:{i:2;a:1:{s:5:\"title\";s:0:\"\";}s:12:\"_multiwidget\";i:1;}','yes'),(101,'sidebars_widgets','a:5:{s:19:\"wp_inactive_widgets\";a:13:{i:0;s:7:\"pages-3\";i:1;s:6:\"text-7\";i:2;s:6:\"text-8\";i:3;s:10:\"nav_menu-3\";i:4;s:10:\"archives-2\";i:5;s:6:\"meta-2\";i:6;s:8:\"search-2\";i:7;s:12:\"categories-2\";i:8;s:14:\"recent-posts-2\";i:9;s:17:\"recent-comments-2\";i:10;s:6:\"text-2\";i:11;s:6:\"text-3\";i:12;s:6:\"text-4\";}s:9:\"sidebar-1\";a:4:{i:0;s:8:\"search-3\";i:1;s:12:\"categories-4\";i:2;s:10:\"nav_menu-4\";i:3;s:6:\"text-5\";}s:9:\"sidebar-2\";a:0:{}s:9:\"sidebar-3\";a:0:{}s:13:\"array_version\";i:3;}','yes'),(102,'widget_pages','a:2:{s:12:\"_multiwidget\";i:1;i:3;a:0:{}}','yes'),(103,'widget_calendar','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),(104,'widget_media_audio','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),(105,'widget_media_image','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),(106,'widget_media_gallery','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),(107,'widget_media_video','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),(108,'nonce_key','><|3?G1+~Fj 4`@ySJm_O0rWM .HP(YPhWCF~F`~PY>x 9#}pZPeUS:1lG=.$ AX','no'),(109,'nonce_salt','w^cv^1]QCDk166Q#-76o1eyg.mIPN6v1M_Et`~f |Npxm^Y0fI!]Mg_@@i2d1y<d','no'),(110,'widget_tag_cloud','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),(111,'widget_nav_menu','a:3:{s:12:\"_multiwidget\";i:1;i:3;a:0:{}i:4;a:0:{}}','yes'),(112,'widget_custom_html','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),(113,'cron','a:6:{i:1539161838;a:1:{s:34:\"wp_privacy_delete_old_export_files\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:6:\"hourly\";s:4:\"args\";a:0:{}s:8:\"interval\";i:3600;}}}i:1539164483;a:1:{s:28:\"wp_statistics_add_visit_hook\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:5:\"daily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:86400;}}}i:1539197838;a:3:{s:16:\"wp_version_check\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:10:\"twicedaily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:43200;}}s:17:\"wp_update_plugins\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:10:\"twicedaily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:43200;}}s:16:\"wp_update_themes\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:10:\"twicedaily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:43200;}}}i:1539241837;a:2:{s:19:\"wp_scheduled_delete\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:5:\"daily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:86400;}}s:25:\"delete_expired_transients\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:5:\"daily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:86400;}}}i:1539243685;a:1:{s:30:\"wp_scheduled_auto_draft_delete\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:5:\"daily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:86400;}}}s:7:\"version\";i:2;}','yes'),(114,'theme_mods_twentyseventeen','a:10:{s:18:\"custom_css_post_id\";i:-1;s:18:\"nav_menu_locations\";a:2:{s:3:\"top\";i:2;s:6:\"social\";i:3;}s:7:\"panel_1\";i:11;s:7:\"panel_2\";i:8;s:7:\"panel_3\";i:10;s:7:\"panel_4\";i:9;s:12:\"header_image\";s:20:\"random-default-image\";s:11:\"colorscheme\";s:5:\"light\";s:15:\"colorscheme_hue\";i:251;s:16:\"sidebars_widgets\";a:2:{s:4:\"time\";i:1539072502;s:4:\"data\";a:4:{s:19:\"wp_inactive_widgets\";a:8:{i:0;s:10:\"archives-2\";i:1;s:6:\"meta-2\";i:2;s:8:\"search-2\";i:3;s:12:\"categories-2\";i:4;s:14:\"recent-posts-2\";i:5;s:17:\"recent-comments-2\";i:6;s:6:\"text-2\";i:7;s:6:\"text-3\";}s:9:\"sidebar-1\";a:3:{i:0;s:8:\"search-3\";i:1;s:12:\"categories-4\";i:2;s:10:\"nav_menu-4\";}s:9:\"sidebar-2\";a:1:{i:0;s:6:\"text-4\";}s:9:\"sidebar-3\";a:2:{i:0;s:6:\"text-5\";i:1;s:8:\"search-4\";}}}}','yes'),(117,'logged_in_key','@ k6BIAV{P+SOi2PlJkZ(wWQV.3m&7+;xv-PEUQ;XyP{i;v/ja4C;Or3#Cw`ITY2','no'),(118,'logged_in_salt','^oFy*{b B}$,-S(J|;q0-lF52P^]TvE<,3b?i*3z`w)J&sAeC>-Kj(uU~o(,~pk8','no'),(126,'auth_key','=xNs/ |NFQ.0s$5kp#d2UnrT9>R!1KPQ1y-bqa^C!#LhqyZp_*zEY/d`?=b)Jxnj','no'),(127,'auth_salt','p;||h]@mF5sr`5K?Ay`:xgs+II#mLJii|X@q;HVr?c)4aC4vsF:EF_`/HrA=}d`Z','no'),(128,'_site_transient_timeout_browser_26a83cf185c4cbbc281de99ff84690e6','1539587437','no'),(129,'_site_transient_browser_26a83cf185c4cbbc281de99ff84690e6','a:10:{s:4:\"name\";s:6:\"Chrome\";s:7:\"version\";s:13:\"69.0.3497.100\";s:8:\"platform\";s:7:\"Windows\";s:10:\"update_url\";s:29:\"https://www.google.com/chrome\";s:7:\"img_src\";s:43:\"http://s.w.org/images/browsers/chrome.png?1\";s:11:\"img_src_ssl\";s:44:\"https://s.w.org/images/browsers/chrome.png?1\";s:15:\"current_version\";s:2:\"18\";s:7:\"upgrade\";b:0;s:8:\"insecure\";b:0;s:6:\"mobile\";b:0;}','no'),(143,'can_compress_scripts','1','no'),(153,'nav_menu_options','a:1:{s:8:\"auto_add\";a:1:{i:0;i:2;}}','yes'),(184,'_transient_timeout_plugin_slugs','1539227009','no'),(185,'_transient_plugin_slugs','a:4:{i:0;s:19:\"akismet/akismet.php\";i:1;s:23:\"enlighter/Enlighter.php\";i:2;s:21:\"spicebox/spicebox.php\";i:3;s:31:\"wp-statistics/wp-statistics.php\";}','no'),(186,'recently_activated','a:4:{s:21:\"spicebox/spicebox.php\";i:1539140609;s:9:\"hello.php\";i:1539140587;s:23:\"wp-syntax/wp-syntax.php\";i:1539140575;s:31:\"code-snippets/code-snippets.php\";i:1539140456;}','yes'),(215,'_site_transient_timeout_browser_6d44eab61dcf5b1f0e6fa8f6595ee1bc','1539655377','no'),(216,'_site_transient_browser_6d44eab61dcf5b1f0e6fa8f6595ee1bc','a:10:{s:4:\"name\";s:17:\"Internet Explorer\";s:7:\"version\";s:4:\"11.0\";s:8:\"platform\";s:7:\"Windows\";s:10:\"update_url\";s:74:\"https://support.microsoft.com/en-us/help/17621/internet-explorer-downloads\";s:7:\"img_src\";s:39:\"http://s.w.org/images/browsers/ie.png?1\";s:11:\"img_src_ssl\";s:40:\"https://s.w.org/images/browsers/ie.png?1\";s:15:\"current_version\";s:2:\"11\";s:7:\"upgrade\";b:0;s:8:\"insecure\";b:0;s:6:\"mobile\";b:0;}','no'),(295,'theme_mods_chilly','a:3:{s:18:\"custom_css_post_id\";i:-1;s:18:\"nav_menu_locations\";a:1:{s:7:\"primary\";i:2;}s:16:\"sidebars_widgets\";a:2:{s:4:\"time\";i:1539066051;s:4:\"data\";a:4:{s:19:\"wp_inactive_widgets\";a:0:{}s:9:\"sidebar-1\";a:3:{i:0;s:6:\"text-2\";i:1;s:8:\"search-3\";i:2;s:6:\"text-3\";}s:9:\"sidebar-2\";a:1:{i:0;s:6:\"text-4\";}s:9:\"sidebar-3\";a:2:{i:0;s:6:\"text-5\";i:1;s:8:\"search-4\";}}}}','yes'),(300,'current_theme','Twenty Seventeen','yes'),(301,'theme_switched','','yes'),(302,'theme_switched_via_customizer','','yes'),(303,'customize_stashed_theme_mods','a:0:{}','no'),(326,'_site_transient_timeout_popular_importers_f90c463bddb7a5709d8796bd69a060af','1539242189','no'),(327,'_site_transient_popular_importers_f90c463bddb7a5709d8796bd69a060af','a:2:{s:9:\"importers\";a:8:{s:7:\"blogger\";a:4:{s:4:\"name\";s:7:\"Blogger\";s:11:\"description\";s:54:\"Import posts, comments, and users from a Blogger blog.\";s:11:\"plugin-slug\";s:16:\"blogger-importer\";s:11:\"importer-id\";s:7:\"blogger\";}s:9:\"wpcat2tag\";a:4:{s:4:\"name\";s:29:\"Categories and Tags Converter\";s:11:\"description\";s:71:\"Convert existing categories to tags or tags to categories, selectively.\";s:11:\"plugin-slug\";s:18:\"wpcat2tag-importer\";s:11:\"importer-id\";s:10:\"wp-cat2tag\";}s:11:\"livejournal\";a:4:{s:4:\"name\";s:11:\"LiveJournal\";s:11:\"description\";s:46:\"Import posts from LiveJournal using their API.\";s:11:\"plugin-slug\";s:20:\"livejournal-importer\";s:11:\"importer-id\";s:11:\"livejournal\";}s:11:\"movabletype\";a:4:{s:4:\"name\";s:24:\"Movable Type and TypePad\";s:11:\"description\";s:62:\"Import posts and comments from a Movable Type or TypePad blog.\";s:11:\"plugin-slug\";s:20:\"movabletype-importer\";s:11:\"importer-id\";s:2:\"mt\";}s:4:\"opml\";a:4:{s:4:\"name\";s:8:\"Blogroll\";s:11:\"description\";s:28:\"Import links in OPML format.\";s:11:\"plugin-slug\";s:13:\"opml-importer\";s:11:\"importer-id\";s:4:\"opml\";}s:3:\"rss\";a:4:{s:4:\"name\";s:3:\"RSS\";s:11:\"description\";s:30:\"Import posts from an RSS feed.\";s:11:\"plugin-slug\";s:12:\"rss-importer\";s:11:\"importer-id\";s:3:\"rss\";}s:6:\"tumblr\";a:4:{s:4:\"name\";s:6:\"Tumblr\";s:11:\"description\";s:53:\"Import posts &amp; media from Tumblr using their API.\";s:11:\"plugin-slug\";s:15:\"tumblr-importer\";s:11:\"importer-id\";s:6:\"tumblr\";}s:9:\"wordpress\";a:4:{s:4:\"name\";s:9:\"WordPress\";s:11:\"description\";s:96:\"Import posts, pages, comments, custom fields, categories, and tags from a WordPress export file.\";s:11:\"plugin-slug\";s:18:\"wordpress-importer\";s:11:\"importer-id\";s:9:\"wordpress\";}}s:10:\"translated\";b:0;}','no'),(338,'theme_mods_spicepress','a:4:{i:0;b:0;s:18:\"nav_menu_locations\";a:1:{s:7:\"primary\";i:2;}s:18:\"custom_css_post_id\";i:-1;s:16:\"sidebars_widgets\";a:2:{s:4:\"time\";i:1539072620;s:4:\"data\";a:7:{s:19:\"wp_inactive_widgets\";a:12:{i:0;s:7:\"pages-3\";i:1;s:6:\"text-7\";i:2;s:6:\"text-8\";i:3;s:10:\"nav_menu-3\";i:4;s:10:\"archives-2\";i:5;s:6:\"meta-2\";i:6;s:8:\"search-2\";i:7;s:12:\"categories-2\";i:8;s:14:\"recent-posts-2\";i:9;s:17:\"recent-comments-2\";i:10;s:6:\"text-2\";i:11;s:6:\"text-3\";}s:15:\"sidebar_primary\";a:5:{i:0;s:8:\"search-3\";i:1;s:12:\"categories-4\";i:2;s:10:\"nav_menu-4\";i:3;s:6:\"text-5\";i:4;s:8:\"search-4\";}s:23:\"footer_widget_area_left\";a:0:{}s:25:\"footer_widget_area_center\";a:0:{}s:24:\"footer_widget_area_right\";a:0:{}s:11:\"woocommerce\";a:0:{}s:24:\"wdl_contact_page_sidebar\";a:1:{i:0;s:6:\"text-4\";}}}}','yes'),(380,'_site_transient_update_core','O:8:\"stdClass\":4:{s:7:\"updates\";a:3:{i:0;O:8:\"stdClass\":10:{s:8:\"response\";s:7:\"upgrade\";s:8:\"download\";s:59:\"https://downloads.wordpress.org/release/wordpress-4.9.8.zip\";s:6:\"locale\";s:5:\"en_US\";s:8:\"packages\";O:8:\"stdClass\":5:{s:4:\"full\";s:59:\"https://downloads.wordpress.org/release/wordpress-4.9.8.zip\";s:10:\"no_content\";s:70:\"https://downloads.wordpress.org/release/wordpress-4.9.8-no-content.zip\";s:11:\"new_bundled\";s:71:\"https://downloads.wordpress.org/release/wordpress-4.9.8-new-bundled.zip\";s:7:\"partial\";s:69:\"https://downloads.wordpress.org/release/wordpress-4.9.8-partial-4.zip\";s:8:\"rollback\";b:0;}s:7:\"current\";s:5:\"4.9.8\";s:7:\"version\";s:5:\"4.9.8\";s:11:\"php_version\";s:5:\"5.2.4\";s:13:\"mysql_version\";s:3:\"5.0\";s:11:\"new_bundled\";s:3:\"4.7\";s:15:\"partial_version\";s:5:\"4.9.4\";}i:1;O:8:\"stdClass\":11:{s:8:\"response\";s:10:\"autoupdate\";s:8:\"download\";s:59:\"https://downloads.wordpress.org/release/wordpress-4.9.8.zip\";s:6:\"locale\";s:5:\"en_US\";s:8:\"packages\";O:8:\"stdClass\":5:{s:4:\"full\";s:59:\"https://downloads.wordpress.org/release/wordpress-4.9.8.zip\";s:10:\"no_content\";s:70:\"https://downloads.wordpress.org/release/wordpress-4.9.8-no-content.zip\";s:11:\"new_bundled\";s:71:\"https://downloads.wordpress.org/release/wordpress-4.9.8-new-bundled.zip\";s:7:\"partial\";s:69:\"https://downloads.wordpress.org/release/wordpress-4.9.8-partial-4.zip\";s:8:\"rollback\";s:70:\"https://downloads.wordpress.org/release/wordpress-4.9.8-rollback-4.zip\";}s:7:\"current\";s:5:\"4.9.8\";s:7:\"version\";s:5:\"4.9.8\";s:11:\"php_version\";s:5:\"5.2.4\";s:13:\"mysql_version\";s:3:\"5.0\";s:11:\"new_bundled\";s:3:\"4.7\";s:15:\"partial_version\";s:5:\"4.9.4\";s:9:\"new_files\";s:0:\"\";}i:2;O:8:\"stdClass\":11:{s:8:\"response\";s:10:\"autoupdate\";s:8:\"download\";s:59:\"https://downloads.wordpress.org/release/wordpress-4.9.7.zip\";s:6:\"locale\";s:5:\"en_US\";s:8:\"packages\";O:8:\"stdClass\":5:{s:4:\"full\";s:59:\"https://downloads.wordpress.org/release/wordpress-4.9.7.zip\";s:10:\"no_content\";s:70:\"https://downloads.wordpress.org/release/wordpress-4.9.7-no-content.zip\";s:11:\"new_bundled\";s:71:\"https://downloads.wordpress.org/release/wordpress-4.9.7-new-bundled.zip\";s:7:\"partial\";s:69:\"https://downloads.wordpress.org/release/wordpress-4.9.7-partial-4.zip\";s:8:\"rollback\";s:70:\"https://downloads.wordpress.org/release/wordpress-4.9.7-rollback-4.zip\";}s:7:\"current\";s:5:\"4.9.7\";s:7:\"version\";s:5:\"4.9.7\";s:11:\"php_version\";s:5:\"5.2.4\";s:13:\"mysql_version\";s:3:\"5.0\";s:11:\"new_bundled\";s:3:\"4.7\";s:15:\"partial_version\";s:5:\"4.9.4\";s:9:\"new_files\";s:0:\"\";}}s:12:\"last_checked\";i:1539154660;s:15:\"version_checked\";s:5:\"4.9.4\";s:12:\"translations\";a:0:{}}','no'),(383,'wp_statistics_plugin_version','12.4.3','yes'),(384,'wp_statistics_db_version','12.4.3','yes'),(385,'wp_statistics','a:27:{s:18:\"pending_db_updates\";a:2:{s:13:\"date_ip_agent\";b:0;s:11:\"unique_date\";b:0;}s:16:\"search_converted\";i:1;s:9:\"robotlist\";s:1715:\"007ac9\n5bot\nA6-Indexer\nAbachoBOT\naccoona\nAcoiRobot\nAddThis.com\nADmantX\nAdsBot-Google\nadvbot\nAhrefsBot\naiHitBot\nalexa\nalphabot\nAltaVista\nAntivirusPro\nanyevent\nappie\nApplebot\narchive.org_bot\nAsk Jeeves\nASPSeek\nBaiduspider\nBenjojo\nBeetleBot\nbingbot\nBlekkobot\nblexbot\nBOT for JCE\nbubing\nButterfly\ncbot\nclamantivirus\ncliqzbot\nclumboot\ncoccoc\ncrawler\nCrocCrawler\ncrowsnest.tv\ndbot\ndl2bot\ndotbot\ndownloadbot\nduckduckgo\nDumbot\nEasouSpider\neStyle\nEveryoneSocialBot\nExabot\nezooms\nfacebook.com\nfacebookexternalhit\nFAST\nFeedfetcher-Google\nfeedzirra\nfindxbot\nFirfly\nFriendFeedBot\nfroogle\nGeonaBot\nGigabot\ngirafabot\ngimme60bot\nglbot\nGooglebot\nGroupHigh\nia_archiver\nIDBot\nInfoSeek\ninktomi\nIstellaBot\njetmon\nKraken\nLeikibot\nlinkapediabot\nlinkdexbot\nLinkpadBot\nLoadTimeBot\nlooksmart\nltx71\nLycos\nMail.RU_Bot\nMe.dium\nmeanpathbot\nmediabot\nmedialbot\nMediapartners-Google\nMJ12bot\nmsnbot\nMojeekBot\nmonobot\nmoreover\nMRBOT\nNationalDirectory\nNerdyBot\nNetcraftSurveyAgent\nniki-bot\nnutch\nOpenbot\nOrangeBot\nowler\np4Bot\nPaperLiBot\npageanalyzer\nPagesInventory\nPimonster\nporkbun\npr-cy\nproximic\npwbot\nr4bot\nrabaz\nRambler\nRankivabot\nrevip\nriddler\nrogerbot\nScooter\nScrubby\nscrapy.org\nSearchmetricsBot\nsees.co\nSemanticBot\nSemrushBot\nSeznamBot\nsfFeedReader\nshareaholic-bot\nsistrix\nSiteExplorer\nSlurp\nSocialradarbot\nSocialSearch\nSogou web spider\nSpade\nspbot\nSpiderLing\nSputnikBot\nSuperfeedr\nSurveyBot\nTechnoratiSnoop\nTECNOSEEK\nTeoma\ntrendictionbot\nTweetmemeBot\nTwiceler\nTwitterbot\nTwitturls\nu2bot\nuMBot-LN\nuni5download\nunrulymedia\nUptimeRobot\nURL_Spider_SQL\nVagabondo\nvBSEO\nWASALive-Bot\nWebAlta Crawler\nWebBug\nWebFindBot\nWebMasterAid\nWeSEE\nWotbox\nwsowner\nwsr-agent\nwww.galaxy.com\nx100bot\nXoviBot\nxzybot\nyandex\nYahoo\nYammybot\nYoudaoBot\nZyBorg\nZemlyaCrawl\";s:13:\"anonymize_ips\";b:0;s:5:\"geoip\";b:0;s:8:\"browscap\";b:0;s:10:\"useronline\";b:1;s:6:\"visits\";b:1;s:8:\"visitors\";b:1;s:5:\"pages\";b:1;s:12:\"check_online\";s:2:\"30\";s:8:\"menu_bar\";b:0;s:11:\"coefficient\";s:1:\"1\";s:12:\"stats_report\";b:0;s:11:\"time_report\";s:5:\"daily\";s:11:\"send_report\";s:4:\"mail\";s:14:\"content_report\";s:0:\"\";s:12:\"update_geoip\";b:1;s:8:\"store_ua\";b:0;s:21:\"exclude_administrator\";b:1;s:18:\"disable_se_clearch\";b:1;s:14:\"disable_se_ask\";b:1;s:8:\"map_type\";s:6:\"jqvmap\";s:18:\"force_robot_update\";b:1;s:17:\"show_welcome_page\";b:0;s:23:\"first_show_welcome_page\";b:1;s:15:\"update_browscap\";b:1;}','yes'),(386,'widget_wp_statistics_widget','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),(387,'_transient_timeout_wps_top_referring','1539164083','no'),(388,'_transient_wps_top_referring','a:0:{}','no'),(409,'_site_transient_timeout_browser_65da5e1de92f432833ac80e30d68fa89','1539691880','no'),(410,'_site_transient_browser_65da5e1de92f432833ac80e30d68fa89','a:10:{s:4:\"name\";s:6:\"Safari\";s:7:\"version\";s:4:\"10.0\";s:8:\"platform\";s:4:\"iPad\";s:10:\"update_url\";s:0:\"\";s:7:\"img_src\";s:0:\"\";s:11:\"img_src_ssl\";s:0:\"\";s:15:\"current_version\";s:0:\"\";s:7:\"upgrade\";b:0;s:8:\"insecure\";b:0;s:6:\"mobile\";b:1;}','no'),(474,'_site_transient_timeout_community-events-d3d49c0144a1a2697d2281cf8dd299cf','1539178327','no'),(475,'_site_transient_community-events-d3d49c0144a1a2697d2281cf8dd299cf','a:2:{s:8:\"location\";a:1:{s:2:\"ip\";s:10:\"221.12.3.0\";}s:6:\"events\";a:0:{}}','no'),(476,'_transient_timeout_feed_7d1d7866a17d17cf5f79e1f075b87a31','1539178328','no'),(477,'_transient_feed_7d1d7866a17d17cf5f79e1f075b87a31','a:4:{s:5:\"child\";a:1:{s:0:\"\";a:1:{s:3:\"rss\";a:1:{i:0;a:6:{s:4:\"data\";s:3:\"\n\n\n\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:7:\"version\";s:3:\"2.0\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:1:{s:0:\"\";a:1:{s:7:\"channel\";a:1:{i:0;a:6:{s:4:\"data\";s:49:\"\n	\n	\n	\n	\n	\n	\n	\n	\n	\n	\n		\n		\n		\n		\n		\n		\n		\n		\n		\n	\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:3:{s:0:\"\";a:7:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:18:\"China 简体中文\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:24:\"https://cn.wordpress.org\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:41:\"官方 WordPress China 简体中文站点\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:13:\"lastBuildDate\";a:1:{i:0;a:5:{s:4:\"data\";s:34:\"\n	Wed, 11 Jul 2018 15:05:42 +0000	\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"language\";a:1:{i:0;a:5:{s:4:\"data\";s:5:\"zh-CN\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:9:\"generator\";a:1:{i:0;a:5:{s:4:\"data\";s:40:\"https://wordpress.org/?v=5.1-alpha-43678\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"item\";a:10:{i:0;a:6:{s:4:\"data\";s:61:\"\n		\n		\n				\n				\n		\n				\n\n		\n				\n								\n							\n		\n							\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:5:{s:0:\"\";a:7:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:27:\"WordPress 4.9.4维护更新\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:52:\"https://cn.wordpress.org/2018/02/08/wordpress-4-9-4/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:60:\"https://cn.wordpress.org/2018/02/08/wordpress-4-9-4/#respond\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 08 Feb 2018 05:02:58 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:1:{i:0;a:5:{s:4:\"data\";s:8:\"Releases\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:32:\"https://cn.wordpress.org/?p=1092\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:30:\"WordPress 4.9.4现已发布。\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:8:\"Jimmy Xu\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:1395:\"<p>WordPress 4.9.4现已发布。</p>\n<p>此维护性更新修正了4.9.3版中的一个严重问题。该问题会导致站点不能进行自动更新，并需要您（或您的主机提供商）进行操作来升级到4.9.4。</p>\n<p>在四年前，我们在<a href=\"//cn.wordpress.org/2013/10/25/basie/&quot;\">WordPress 3.7“Basie”</a>中加入了WordPress的自动更新功能，来让您不用费力也能有一个安全且无漏洞的站点。在这四年中，该功能已经为数百万计的WordPress实例提供了自动更新，并极少出现问题。不幸的是，我们在<a href=\"https://wordpress.org/news/2018/02/wordpress-4-9-3-maintenance-release/\">昨天发布4.9.3版</a>后，找出了其中存在的一个严重问题。该问题会导致WordPress在试图更新到4.9.4时遇到错误，并需要您通过WordPress仪表盘或主机更新工具来进行更新。</p>\n<p>要获得关于此问题的技术详情，请查阅<a href=\"https://make.wordpress.org/core/2018/02/06/wordpress-4-9-4-release-the-technical-details/\">我们的核心开发博客</a>。要查阅完整更新列表，请参见<a href=\"https://core.trac.wordpress.org/query?status=closed&amp;milestone=4.9.4&amp;group=component\">工单列表</a>。</p>\n<p><a href=\"https://cn.wordpress.org/releases/\">下载WordPress 4.9.4简体中文版</a>或在仪表盘→更新中点击“现在更新”。</p>\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:36:\"http://wellformedweb.org/CommentAPI/\";a:1:{s:10:\"commentRss\";a:1:{i:0;a:5:{s:4:\"data\";s:57:\"https://cn.wordpress.org/2018/02/08/wordpress-4-9-4/feed/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:38:\"http://purl.org/rss/1.0/modules/slash/\";a:1:{s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:1:\"0\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:1;a:6:{s:4:\"data\";s:61:\"\n		\n		\n				\n				\n		\n				\n\n		\n				\n								\n							\n		\n							\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:5:{s:0:\"\";a:7:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:25:\"WordPress 4.9“Tipton”\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:43:\"https://cn.wordpress.org/2017/11/16/tipton/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:52:\"https://cn.wordpress.org/2017/11/16/tipton/#comments\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 16 Nov 2017 01:33:44 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:1:{i:0;a:5:{s:4:\"data\";s:8:\"Releases\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:32:\"https://cn.wordpress.org/?p=1075\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:49:\"WordPress 4.9简体中文版现已开放下载。\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:8:\"Jimmy Xu\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:42176:\"<h2 style=\"text-align: center\">大规模的定制器改善、代码错误检查和更多！<img src=\"https://s.w.org/images/core/emoji/11/72x72/1f389.png\" alt=\"?\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\" /></h2>\n<figure class=\"wp-block-image\"><img src=\"https://i1.wp.com/wordpress.org/news/files/2017/11/banner.png?fit=2400%2C1200&amp;ssl=1\" alt=\"\" /></figure>\n<p>WordPress 4.9简体中文版现已<a href=\"https://cn.wordpress.org/releases/\">开放下载</a>，或在您的WordPress仪表盘中升级。我们将此版本命名为“Tipton”，以纪念爵士音乐家和乐队领唱比利·蒂普顿。WordPress 4.9的新功能能让您的设计工作流更顺滑，防止您的代码出现错误。</p>\n<p>包括了设计草稿、锁、计划和预览链接等新功能，全新的定制器工作流为内容创作者提升了协作体验。此外，代码语法高亮和错误检查能让您的站点建设体验更整洁平滑。我们还为您带来了全新画廊小工具并改善了主题浏览和切换的体验。</p>\n<hr class=\"wp-block-separator\" />\n<h2 style=\"text-align: center\">改良的定制器工作流</h2>\n<figure class=\"wp-block-image\"><img src=\"https://i0.wp.com/wordpress.org/news/files/2017/11/customizer-workflow-improved-small.png?w=632&amp;ssl=1\" alt=\"\" width=\"632\" height=\"316\" /></figure>\n<h3>起草并计划发布站点设计修改</h3>\n<p>就像您可以在撰写文章时打草稿并在您希望的日期和时间发布一样，您也可以对站点设计做同样的事。现在可以随您所好地调整并计划设计更新。</p>\n<h3>通过设计共享链接协作</h3>\n<p>想要为您提议的站点设计修改取得反馈？WordPress 4.9向您提供了能发送给您的团队或客户的预览链接，让您能够取得并整合来自他人的反馈，并在计划的日期公开您的修改。我们能说协作++吗？</p>\n<h3>设计锁来保护您的修改</h3>\n<p>遇到过两名设计师同时修改一个项目，设计师A覆盖了设计师B的优美修改的事情吗？WordPress 4.9的设计锁功能与文章锁相似，在您进行设计修改时保护您，防止他人修改或抹除您的工作成果。</p>\n<h3>保护您的工作的提示</h3>\n<p>您在保存您的全新设计草稿前就离开了？别怕，当您回来时，WordPress 4.9会礼貌地问您是否想要保存这些未保存的修改。</p>\n<hr class=\"wp-block-separator\" />\n<h2 style=\"text-align: center\">代码增强</h2>\n<figure class=\"wp-block-image\"><img src=\"https://i2.wp.com/wordpress.org/news/files/2017/11/coding-enhancements-small.png?w=632&amp;ssl=1\" alt=\"\" width=\"632\" height=\"316\" /></figure>\n<h3>语法高亮和错误检查？正如所愿！</h3>\n<p>您遇到了一个显示问题，但不能确定您所写的CSS到底出了什么问题。在CSS编辑和WordPress 4.8.1中引入的自定义HTML小工具有了语法高亮和错误检查后，您将能够快速找出代码错误。我们保证这项功能可以帮助您更轻松地扫描代码，并快速修复代码错误。</p>\n<h3>沙盒为了安全</h3>\n<p>可怕的白色屏幕。现在WordPress 4.9在您要保存的主题或插件代码有错误时会提出警告，让您能够避免损坏整个站点，也让您晚上睡得更安心。</p>\n<h3>警告：前方危险！</h3>\n<p>当您直接编辑主题和插件时，WordPress 4.9会礼貌地警告您这是一种很危险的做法，同时会建议您在保存前备份您的文件，这样您的修改就不会在下次更新时遭到覆盖。请走安全路线：未来的您会感谢您，您的团队和客户也会感谢您。</p>\n<hr class=\"wp-block-separator\" />\n<h2 style=\"text-align: center\">更多的小工具更新</h2>\n<figure class=\"wp-block-image\"><img src=\"https://i1.wp.com/wordpress.org/news/files/2017/11/even-more-widget-updates-small.png?w=632&amp;ssl=1\" alt=\"\" width=\"632\" height=\"316\" /></figure>\n<h3>全新画廊小工具</h3>\n<p>从WordPress 4.8的媒体变更延伸而来的渐进式改进，现在您可以通过小工具添加一个画廊了！</p>\n<h3>按下按钮，加入媒体</h3>\n<p>想要向您的文字小工具加入媒体？通过我们简单而有用的”添加媒体“按钮，在小工具中向您的文字旁边嵌入图像、视频和音频。喔！</p>\n<hr class=\"wp-block-separator\" />\n<h2 style=\"text-align: center\">站点建设改进</h2>\n<figure class=\"wp-block-image\"><img src=\"https://i1.wp.com/wordpress.org/news/files/2017/11/site-building-improvements-small.png?w=632&amp;ssl=1\" alt=\"\" width=\"632\" height=\"316\" /></figure>\n<h3>更可靠的主题切换</h3>\n<p>在您切换主题时，有的时候小工具会自行移动位置。WordPress 4.9的改进在您更换主题时向您带来更可靠的菜单和挂件位置。此外，您可以预览已安装的主题，或正确地下载、安装并预览新主题。在部署之前，没有什么能够像预览一样方便的。</p>\n<h3>寻找并预览完美主题</h3>\n<p>要为您的站点找一个新主题？现在，您可以在定制器中搜索、浏览并预览超过2600个主题，并可以直接应用到您的站点。此外，您也可以通过过滤主题、功能和布局来加速您的搜索。</p>\n<h3>更好的菜单说明 = 更少的迷惑</h3>\n<p>您被创建新菜单的步骤搞糊涂了吗？现在不会了！我们向您带来了更顺滑的菜单创建用户体验。新的说明文字会指导您。</p>\n<hr class=\"wp-block-separator\" />\n<h2 style=\"text-align: center\">帮一帮Gutenberg <img src=\"https://s.w.org/images/core/emoji/11/72x72/1f91d.png\" alt=\"?\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\" /></h2>\n<figure class=\"wp-block-image\"><img src=\"https://i2.wp.com/wordpress.org/news/files/2017/11/gutenberg-1.png?w=632&amp;ssl=1\" alt=\"\" width=\"632\" height=\"316\" /></figure>\n<p>WordPress正致力于一种新的创建并控制您的内容的方式，我们需要您的帮助。想要成为<a href=\"https://wordpress.org/plugins/gutenberg/\">早期测试者</a>或投身于Gutenberg项目？<a href=\"https://github.com/WordPress/gutenberg\">在GitHub贡献</a>。</p>\n<p>（PS：这篇文章就是用Gutenberg写的！）</p>\n<hr class=\"wp-block-separator\" />\n<h2 style=\"text-align: center\">开发者的小确幸<img src=\"https://s.w.org/images/core/emoji/11/72x72/1f60a.png\" alt=\"?\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\" /></h2>\n<h3><a href=\"https://make.wordpress.org/core/2017/11/01/improvements-to-the-customize-js-api-in-4-9/\">定制器JS API改进</a></h3>\n<p>我们在WordPress 4.9中对定制器JS API进行了数项改进，消除了许多痛点，让它和PHP API一样易用。现在也有了新的基本控制模板、日期/时间控件和小节/页面/全局通知。<a href=\"https://make.wordpress.org/core/2017/11/01/improvements-to-the-customize-js-api-in-4-9/\">查看完整列表。</a></p>\n<h3><a href=\"https://make.wordpress.org/core/2017/10/22/code-editing-improvements-in-wordpress-4-9/\">CodeMirror现已在您的主题和插件中可用</a></h3>\n<p>我们向您介绍在核心中使用的全新的代码编辑库，CodeMirror。请用它来改进您插件中编辑代码的体验，如CSS或JavaScript编辑框。</p>\n<h3><a href=\"https://make.wordpress.org/core/2017/10/30/mediaelement-upgrades-in-wordpress-4-9/\">MediaElement.js升级到4.2.6</a></h3>\n<p>WordPress包含了升级版的MediaElement.js，其中移除了对jQuery的依赖、增强了无障碍访问、有了现代化的界面并修正了许多问题。</p>\n<h3><a href=\"https://make.wordpress.org/core/2017/10/15/improvements-for-roles-and-capabilities-in-4-9/\">角色和能力的改进</a></h3>\n<p>新的能力让您能够更细致地管理插件和翻译文件。此外，多站点中的站点切换过程已被调整，让对可用的角色和能力的更新过程更可靠和连贯。</p>\n<hr class=\"wp-block-separator\" />\n<h2>开发团队</h2>\n<p>此次发布由<a href=\"https://choycedesign.com/\">Mel Choyce</a>和<a href=\"https://weston.ruter.net/\">Weston Ruter</a>领头，并得到了以下个人的帮助。这次发布包含了443人的贡献，其中185人更是第一次贡献。在您喜欢的音乐服务中听听比利·蒂普顿，并看看下面这些个人资料吧：</p>\n<p><a href=\"https://profiles.wordpress.org/aaroncampbell\">Aaron D. Campbell</a>、<a href=\"https://profiles.wordpress.org/jorbin\">Aaron Jorbin</a>、<a href=\"https://profiles.wordpress.org/abrightclearweb\">abrightclearweb</a>、<a href=\"https://profiles.wordpress.org/ibachal\">Achal Jain</a>、<a href=\"https://profiles.wordpress.org/achbed\">achbed</a>、<a href=\"https://profiles.wordpress.org/acmethemes\">Acme Themes</a>、<a href=\"https://profiles.wordpress.org/adamsilverstein\">Adam Silverstein</a>、<a href=\"https://profiles.wordpress.org/adammacias\">adammacias</a>、<a href=\"https://profiles.wordpress.org/mrahmadawais\">Ahmad Awais</a>、<a href=\"https://profiles.wordpress.org/ahmadawais\">ahmadawais</a>、<a href=\"https://profiles.wordpress.org/airesvsg\">airesvsg</a>、<a href=\"https://profiles.wordpress.org/ajoah\">ajoah</a>、<a href=\"https://profiles.wordpress.org/akibjorklund\">Aki Björklund</a>、<a href=\"https://profiles.wordpress.org/akshayvinchurkar\">akshayvinchurkar</a>、<a href=\"https://profiles.wordpress.org/schlessera\">Alain Schlesser</a>、<a href=\"https://profiles.wordpress.org/xknown\">Alex Concha</a>、<a href=\"https://profiles.wordpress.org/xavortm\">Alex Dimitrov</a>、<a href=\"https://profiles.wordpress.org/ironpaperweight\">Alex Hon</a>、<a href=\"https://profiles.wordpress.org/alex27\">alex27</a>、<a href=\"https://profiles.wordpress.org/allancole\">allancole</a>、<a href=\"https://profiles.wordpress.org/arush\">Amanda Rush</a>、<a href=\"https://profiles.wordpress.org/afercia\">Andrea Fercia</a>、<a href=\"https://profiles.wordpress.org/andrewp-2\">Andreas Panag</a>、<a href=\"https://profiles.wordpress.org/nacin\">Andrew Nacin</a>、<a href=\"https://profiles.wordpress.org/azaozz\">Andrew Ozz</a>、<a href=\"https://profiles.wordpress.org/rarst\">Andrey &#8220;Rarst&#8221; Savchenko</a>、<a href=\"https://profiles.wordpress.org/andizer\">Andy Meerwaldt</a>、<a href=\"https://profiles.wordpress.org/kelderic\">Andy Mercer</a>、<a href=\"https://profiles.wordpress.org/andy\">Andy Skelton</a>、<a href=\"https://profiles.wordpress.org/aniketpant\">Aniket Pant</a>、<a href=\"https://profiles.wordpress.org/anilbasnet\">Anil Basnet</a>、<a href=\"https://profiles.wordpress.org/ankit-k-gupta\">Ankit K Gupta</a>、<a href=\"https://profiles.wordpress.org/ahortin\">Anthony Hortin</a>、<a href=\"https://profiles.wordpress.org/antisilent\">antisilent</a>、<a href=\"https://profiles.wordpress.org/atimmer\">Anton Timmermans</a>、<a href=\"https://profiles.wordpress.org/apokalyptik\">apokalyptik</a>、<a href=\"https://profiles.wordpress.org/artoliukkonen\">artoliukkonen</a>、<a href=\"https://profiles.wordpress.org/ideag\">Arunas Liuiza</a>、<a href=\"https://profiles.wordpress.org/attitude\">attitude</a>、<a href=\"https://profiles.wordpress.org/backermann\">backermann1978</a>、<a href=\"https://profiles.wordpress.org/b-07\">Bappi</a>、<a href=\"https://profiles.wordpress.org/bcole808\">Ben Cole</a>、<a href=\"https://profiles.wordpress.org/quasel\">Bernhard Gronau</a>、<a href=\"https://profiles.wordpress.org/kau-boy\">Bernhard Kau</a>、<a href=\"https://profiles.wordpress.org/binarymoon\">binarymoon</a>、<a href=\"https://profiles.wordpress.org/birgire\">Birgir Erlendsson (birgire)</a>、<a href=\"https://profiles.wordpress.org/bjornw\">BjornW</a>、<a href=\"https://profiles.wordpress.org/bobbingwide\">bobbingwide</a>、<a href=\"https://profiles.wordpress.org/boblinthorst\">boblinthorst</a>、<a href=\"https://profiles.wordpress.org/boboudreau\">boboudreau</a>、<a href=\"https://profiles.wordpress.org/gitlost\">bonger</a>、<a href=\"https://profiles.wordpress.org/boonebgorges\">Boone B. Gorges</a>、<a href=\"https://profiles.wordpress.org/bradyvercher\">Brady Vercher</a>、<a href=\"https://profiles.wordpress.org/brainstormforce\">Brainstorm Force</a>、<a href=\"https://profiles.wordpress.org/kraftbj\">Brandon Kraft</a>、<a href=\"https://profiles.wordpress.org/brianhogg\">Brian Hogg</a>、<a href=\"https://profiles.wordpress.org/krogsgard\">Brian Krogsgard</a>、<a href=\"https://profiles.wordpress.org/bronsonquick\">Bronson Quick</a>、<a href=\"https://profiles.wordpress.org/sixhours\">Caroline Moore</a>、<a href=\"https://profiles.wordpress.org/caseypatrickdriscoll\">Casey Driscoll</a>、<a href=\"https://profiles.wordpress.org/caspie\">Caspie</a>、<a href=\"https://profiles.wordpress.org/chandrapatel\">Chandra Patel</a>、<a href=\"https://profiles.wordpress.org/chaos-engine\">Chaos Engine</a>、<a href=\"https://profiles.wordpress.org/cheeserolls\">cheeserolls</a>、<a href=\"https://profiles.wordpress.org/chesio\">chesio</a>、<a href=\"https://profiles.wordpress.org/ketuchetan\">chetansatasiya</a>、<a href=\"https://profiles.wordpress.org/choongsavvii\">choong</a>、<a href=\"https://profiles.wordpress.org/chouby\">Chouby</a>、<a href=\"https://profiles.wordpress.org/chredd\">chredd</a>、<a href=\"https://profiles.wordpress.org/chrisjean\">Chris Jean</a>、<a href=\"https://profiles.wordpress.org/cmmarslender\">Chris Marslender</a>、<a href=\"https://profiles.wordpress.org/chris_d2d\">Chris Smith</a>、<a href=\"https://profiles.wordpress.org/chrisvanpatten\">Chris Van Patten</a>、<a href=\"https://profiles.wordpress.org/chriswiegman\">Chris Wiegman</a>、<a href=\"https://profiles.wordpress.org/chriscct7\">chriscct7</a>、<a href=\"https://profiles.wordpress.org/chriseverson\">chriseverson</a>、<a href=\"https://profiles.wordpress.org/christian1012\">Christian Chung</a>、<a href=\"https://profiles.wordpress.org/cwpnolen\">Christian Nolen</a>、<a href=\"https://profiles.wordpress.org/needle\">Christian Wach</a>、<a href=\"https://profiles.wordpress.org/christophherr\">Christoph Herr</a>、<a href=\"https://profiles.wordpress.org/clarionwpdeveloper\">Clarion Technologies</a>、<a href=\"https://profiles.wordpress.org/claudiosmweb\">Claudio Sanches</a>、<a href=\"https://profiles.wordpress.org/claudiosanches\">Claudio Sanches</a>、<a href=\"https://profiles.wordpress.org/claudiolabarbera\">ClaudioLaBarbera</a>、<a href=\"https://profiles.wordpress.org/codemovementpk\">codemovement.pk</a>、<a href=\"https://profiles.wordpress.org/coderkevin\">coderkevin</a>、<a href=\"https://profiles.wordpress.org/codfish\">codfish</a>、<a href=\"https://profiles.wordpress.org/coreymcollins\">coreymcollins</a>、<a href=\"https://profiles.wordpress.org/curdin\">Curdin Krummenacher</a>、<a href=\"https://profiles.wordpress.org/cgrymala\">Curtiss Grymala</a>、<a href=\"https://profiles.wordpress.org/cdog\">Cătălin Dogaru</a>、<a href=\"https://profiles.wordpress.org/danhgilmore\">danhgilmore</a>、<a href=\"https://profiles.wordpress.org/danielbachhuber\">Daniel Bachhuber </a>、<a href=\"https://profiles.wordpress.org/danielkanchev\">Daniel Kanchev</a>、<a href=\"https://profiles.wordpress.org/danielpietrasik\">Daniel Pietrasik</a>、<a href=\"https://profiles.wordpress.org/mte90\">Daniele Scasciafratte</a>、<a href=\"https://profiles.wordpress.org/dllh\">Daryl L. L. Houston (dllh)</a>、<a href=\"https://profiles.wordpress.org/davepullig\">Dave Pullig</a>、<a href=\"https://profiles.wordpress.org/goto10\">Dave Romsey (goto10)</a>、<a href=\"https://profiles.wordpress.org/davidakennedy\">David A. Kennedy</a>、<a href=\"https://profiles.wordpress.org/turtlepod\">David Chandra Purnama</a>、<a href=\"https://profiles.wordpress.org/dlh\">David Herrera</a>、<a href=\"https://profiles.wordpress.org/dglingren\">David Lingren</a>、<a href=\"https://profiles.wordpress.org/davidmosterd\">David Mosterd</a>、<a href=\"https://profiles.wordpress.org/dshanske\">David Shanske</a>、<a href=\"https://profiles.wordpress.org/davidbhayes\">davidbhayes</a>、<a href=\"https://profiles.wordpress.org/folletto\">Davide &#8216;Folletto&#8217; Casali</a>、<a href=\"https://profiles.wordpress.org/deeptiboddapati\">deeptiboddapati</a>、<a href=\"https://profiles.wordpress.org/delphinus\">delphinus</a>、<a href=\"https://profiles.wordpress.org/deltafactory\">deltafactory</a>、<a href=\"https://profiles.wordpress.org/denis-de-bernardy\">Denis de Bernardy</a>、<a href=\"https://profiles.wordpress.org/valendesigns\">Derek Herman</a>、<a href=\"https://profiles.wordpress.org/pcfreak30\">Derrick Hammer</a>、<a href=\"https://profiles.wordpress.org/derrickkoo\">Derrick Koo</a>、<a href=\"https://profiles.wordpress.org/dimchik\">dimchik</a>、<a href=\"https://profiles.wordpress.org/dineshc\">Dinesh Chouhan</a>、<a href=\"https://profiles.wordpress.org/dd32\">Dion Hulse</a>、<a href=\"https://profiles.wordpress.org/dipeshkakadiya\">dipeshkakadiya</a>、<a href=\"https://profiles.wordpress.org/dmsnell\">dmsnell</a>、<a href=\"https://profiles.wordpress.org/ocean90\">Dominik Schilling</a>、<a href=\"https://profiles.wordpress.org/dotancohen\">Dotan Cohen</a>、<a href=\"https://profiles.wordpress.org/dougwollison\">Doug Wollison</a>、<a href=\"https://profiles.wordpress.org/doughamlin\">doughamlin</a>、<a href=\"https://profiles.wordpress.org/dreamon11\">DreamOn11</a>、<a href=\"https://profiles.wordpress.org/drewapicture\">Drew Jaynes</a>、<a href=\"https://profiles.wordpress.org/duncanjbrown\">duncanjbrown</a>、<a href=\"https://profiles.wordpress.org/dungengronovius\">dungengronovius</a>、<a href=\"https://profiles.wordpress.org/dylanauty\">DylanAuty</a>、<a href=\"https://profiles.wordpress.org/hurtige\">Eddie Hurtig</a>、<a href=\"https://profiles.wordpress.org/oso96_2000\">Eduardo Reveles</a>、<a href=\"https://profiles.wordpress.org/chopinbach\">Edwin Cromley</a>、<a href=\"https://profiles.wordpress.org/electricfeet\">ElectricFeet</a>、<a href=\"https://profiles.wordpress.org/eliorivero\">Elio Rivero</a>、<a href=\"https://profiles.wordpress.org/iseulde\">Ella Iseulde Van Dorpe</a>、<a href=\"https://profiles.wordpress.org/elyobo\">elyobo</a>、<a href=\"https://profiles.wordpress.org/enodekciw\">enodekciw</a>、<a href=\"https://profiles.wordpress.org/enshrined\">enshrined</a>、<a href=\"https://profiles.wordpress.org/ericlewis\">Eric Andrew Lewis</a>、<a href=\"https://profiles.wordpress.org/pushred\">Eric Lanehart</a>、<a href=\"https://profiles.wordpress.org/eherman24\">Evan Herman</a>、<a href=\"https://profiles.wordpress.org/flixos90\">Felix Arntz</a>、<a href=\"https://profiles.wordpress.org/fencer04\">Fencer04</a>、<a href=\"https://profiles.wordpress.org/florianbrinkmann\">Florian Brinkmann</a>、<a href=\"https://profiles.wordpress.org/mista-flo\">Florian TIAR</a>、<a href=\"https://profiles.wordpress.org/foliovision\">FolioVision</a>、<a href=\"https://profiles.wordpress.org/fomenkoandrey\">fomenkoandrey</a>、<a href=\"https://profiles.wordpress.org/frankiet\">Francesco Taurino</a>、<a href=\"https://profiles.wordpress.org/frank-klein\">Frank Klein</a>、<a href=\"https://profiles.wordpress.org/fjarrett\">Frankie Jarrett</a>、<a href=\"https://profiles.wordpress.org/akeif\">Fred</a>、<a href=\"https://profiles.wordpress.org/frozzare\">Fredrik Forsmo</a>、<a href=\"https://profiles.wordpress.org/fuscata\">fuscata</a>、<a href=\"https://profiles.wordpress.org/gma992\">Gabriel Maldonado</a>、<a href=\"https://profiles.wordpress.org/voldemortensen\">Garth Mortensen</a>、<a href=\"https://profiles.wordpress.org/garyj\">Gary Jones</a>、<a href=\"https://profiles.wordpress.org/pento\">Gary Pendergast</a>、<a href=\"https://profiles.wordpress.org/geekysoft\">Geeky Software</a>、<a href=\"https://profiles.wordpress.org/georgestephanis\">George Stephanis</a>、<a href=\"https://profiles.wordpress.org/goranseric\">Goran Šerić</a>、<a href=\"https://profiles.wordpress.org/grahamarmfield\">Graham Armfield</a>、<a href=\"https://profiles.wordpress.org/grantderepas\">Grant Derepas</a>、<a href=\"https://profiles.wordpress.org/tivnet\">Gregory Karpinsky (@tivnet)</a>、<a href=\"https://profiles.wordpress.org/hardeepasrani\">Hardeep Asrani</a>、<a href=\"https://profiles.wordpress.org/helen\">Helen Hou-Sandí</a>、<a href=\"https://profiles.wordpress.org/henrywright\">Henry Wright</a>、<a href=\"https://profiles.wordpress.org/hiddenpearls\">hiddenpearls</a>、<a href=\"https://profiles.wordpress.org/hnle\">Hinaloe</a>、<a href=\"https://profiles.wordpress.org/hristo-sg\">Hristo Pandjarov</a>、<a href=\"https://profiles.wordpress.org/hugobaeta\">Hugo Baeta</a>、<a href=\"https://profiles.wordpress.org/polevaultweb\">Iain Poulson</a>、<a href=\"https://profiles.wordpress.org/iandunn\">Ian Dunn</a>、<a href=\"https://profiles.wordpress.org/ianedington\">Ian Edington</a>、<a href=\"https://profiles.wordpress.org/idealien\">idealien</a>、<a href=\"https://profiles.wordpress.org/igmoweb\">Ignacio Cruz Moreno</a>、<a href=\"https://profiles.wordpress.org/imath\">imath</a>、<a href=\"https://profiles.wordpress.org/implenton\">implenton</a>、<a href=\"https://profiles.wordpress.org/ionutst\">Ionut Stanciu</a>、<a href=\"https://profiles.wordpress.org/ipstenu\">Ipstenu (Mika Epstein)</a>、<a href=\"https://profiles.wordpress.org/ivdimova\">ivdimova</a>、<a href=\"https://profiles.wordpress.org/jdgrimes\">J.D. Grimes</a>、<a href=\"https://profiles.wordpress.org/jakept\">Jacob Peattie</a>、<a href=\"https://profiles.wordpress.org/whyisjake\">Jake Spurlock</a>、<a href=\"https://profiles.wordpress.org/jnylen0\">James Nylen</a>、<a href=\"https://profiles.wordpress.org/jamesacero\">jamesacero</a>、<a href=\"https://profiles.wordpress.org/japh\">Japh</a>、<a href=\"https://profiles.wordpress.org/jaredcobb\">Jared Cobb</a>、<a href=\"https://profiles.wordpress.org/jayarjo\">jayarjo</a>、<a href=\"https://profiles.wordpress.org/jdolan\">jdolan</a>、<a href=\"https://profiles.wordpress.org/jdoubleu\">jdoubleu</a>、<a href=\"https://profiles.wordpress.org/jblz\">Jeff Bowen</a>、<a href=\"https://profiles.wordpress.org/jbpaul17\">Jeff Paul</a>、<a href=\"https://profiles.wordpress.org/cheffheid\">Jeffrey de Wit</a>、<a href=\"https://profiles.wordpress.org/jeremyfelt\">Jeremy Felt</a>、<a href=\"https://profiles.wordpress.org/jpry\">Jeremy Pry</a>、<a href=\"https://profiles.wordpress.org/jimt\">jimt</a>、<a href=\"https://profiles.wordpress.org/jipmoors\">Jip Moors</a>、<a href=\"https://profiles.wordpress.org/jmusal\">jmusal</a>、<a href=\"https://profiles.wordpress.org/joedolson\">Joe Dolson</a>、<a href=\"https://profiles.wordpress.org/joehoyle\">Joe Hoyle</a>、<a href=\"https://profiles.wordpress.org/joemcgill\">Joe McGill</a>、<a href=\"https://profiles.wordpress.org/joelcj91\">Joel James</a>、<a href=\"https://profiles.wordpress.org/johanmynhardt\">johanmynhardt</a>、<a href=\"https://profiles.wordpress.org/johnbillion\">John Blackbourn</a>、<a href=\"https://profiles.wordpress.org/zyphonic\">John Dittmar</a>、<a href=\"https://profiles.wordpress.org/johnjamesjacoby\">John James Jacoby</a>、<a href=\"https://profiles.wordpress.org/johnpbloch\">John P. Bloch</a>、<a href=\"https://profiles.wordpress.org/johnregan3\">John Regan</a>、<a href=\"https://profiles.wordpress.org/johnpgreen\">johnpgreen</a>、<a href=\"https://profiles.wordpress.org/kenshino\">Jon (Kenshino)</a>、<a href=\"https://profiles.wordpress.org/jonathanbardo\">Jonathan Bardo</a>、<a href=\"https://profiles.wordpress.org/jbrinley\">Jonathan Brinley</a>、<a href=\"https://profiles.wordpress.org/daggerhart\">Jonathan Daggerhart</a>、<a href=\"https://profiles.wordpress.org/desrosj\">Jonathan Desrosiers</a>、<a href=\"https://profiles.wordpress.org/spacedmonkey\">Jonny Harris</a>、<a href=\"https://profiles.wordpress.org/jonnyauk\">jonnyauk</a>、<a href=\"https://profiles.wordpress.org/jordesign\">jordesign</a>、<a href=\"https://profiles.wordpress.org/jorritschippers\">JorritSchippers</a>、<a href=\"https://profiles.wordpress.org/joefusco\">Joseph Fusco</a>、<a href=\"https://profiles.wordpress.org/jjeaton\">Josh Eaton</a>、<a href=\"https://profiles.wordpress.org/shelob9\">Josh Pollock</a>、<a href=\"https://profiles.wordpress.org/joshcummingsdesign\">joshcummingsdesign</a>、<a href=\"https://profiles.wordpress.org/joshkadis\">joshkadis</a>、<a href=\"https://profiles.wordpress.org/joyously\">Joy</a>、<a href=\"https://profiles.wordpress.org/jrf\">jrf</a>、<a href=\"https://profiles.wordpress.org/jrgould\">JRGould</a>、<a href=\"https://profiles.wordpress.org/juanfra\">Juanfra Aldasoro</a>、<a href=\"https://profiles.wordpress.org/juhise\">Juhi Saxena</a>、<a href=\"https://profiles.wordpress.org/nukaga\">Junko Nukaga</a>、<a href=\"https://profiles.wordpress.org/justinbusa\">Justin Busa</a>、<a href=\"https://profiles.wordpress.org/justinsainton\">Justin Sainton</a>、<a href=\"https://profiles.wordpress.org/jshreve\">Justin Shreve</a>、<a href=\"https://profiles.wordpress.org/jtsternberg\">Justin Sternberg</a>、<a href=\"https://profiles.wordpress.org/kadamwhite\">K.Adam White</a>、<a href=\"https://profiles.wordpress.org/kacperszurek\">kacperszurek</a>、<a href=\"https://profiles.wordpress.org/trepmal\">Kailey (trepmal)</a>、<a href=\"https://profiles.wordpress.org/kalenjohnson\">KalenJohnson</a>、<a href=\"https://profiles.wordpress.org/codebykat\">Kat Hagan</a>、<a href=\"https://profiles.wordpress.org/kkoppenhaver\">Keanan Koppenhaver</a>、<a href=\"https://profiles.wordpress.org/keesiemeijer\">keesiemeijer</a>、<a href=\"https://profiles.wordpress.org/kellbot\">kellbot</a>、<a href=\"https://profiles.wordpress.org/ryelle\">Kelly Dwan</a>、<a href=\"https://profiles.wordpress.org/khag7\">Kevin Hagerty</a>、<a href=\"https://profiles.wordpress.org/kwight\">Kirk Wight</a>、<a href=\"https://profiles.wordpress.org/kitchin\">kitchin</a>、<a href=\"https://profiles.wordpress.org/ixkaito\">Kite</a>、<a href=\"https://profiles.wordpress.org/kjbenk\">kjbenk</a>、<a href=\"https://profiles.wordpress.org/knutsp\">Knut Sparhell</a>、<a href=\"https://profiles.wordpress.org/koenschipper\">koenschipper</a>、<a href=\"https://profiles.wordpress.org/kokarn\">kokarn</a>、<a href=\"https://profiles.wordpress.org/kovshenin\">Konstantin Kovshenin</a>、<a href=\"https://profiles.wordpress.org/obenland\">Konstantin Obenland</a>、<a href=\"https://profiles.wordpress.org/kouratoras\">Konstantinos Kouratoras</a>、<a href=\"https://profiles.wordpress.org/kuchenundkakao\">kuchenundkakao</a>、<a href=\"https://profiles.wordpress.org/kuldipem\">kuldipem</a>、<a href=\"https://profiles.wordpress.org/laurelfulford\">Laurel Fulford</a>、<a href=\"https://profiles.wordpress.org/leewillis77\">Lee Willis</a>、<a href=\"https://profiles.wordpress.org/leobaiano\">Leo Baiano</a>、<a href=\"https://profiles.wordpress.org/littlebigthing\">LittleBigThings (Csaba)</a>、<a href=\"https://profiles.wordpress.org/lucasstark\">Lucas Stark</a>、<a href=\"https://profiles.wordpress.org/lukecavanagh\">Luke Cavanagh</a>、<a href=\"https://profiles.wordpress.org/lgedeon\">Luke Gedeon</a>、<a href=\"https://profiles.wordpress.org/lukepettway\">Luke Pettway</a>、<a href=\"https://profiles.wordpress.org/lyubomir_popov\">lyubomir_popov</a>、<a href=\"https://profiles.wordpress.org/mariovalney\">Mário Valney</a>、<a href=\"https://profiles.wordpress.org/mageshp\">mageshp</a>、<a href=\"https://profiles.wordpress.org/mahesh901122\">Mahesh Waghmare</a>、<a href=\"https://profiles.wordpress.org/mangeshp\">Mangesh Parte</a>、<a href=\"https://profiles.wordpress.org/manishsongirkar36\">Manish Songirkar</a>、<a href=\"https://profiles.wordpress.org/mantismamita\">mantismamita</a>、<a href=\"https://profiles.wordpress.org/mbootsman\">Marcel Bootsman</a>、<a href=\"https://profiles.wordpress.org/tyxla\">Marin Atanasov</a>、<a href=\"https://profiles.wordpress.org/clorith\">Marius L. J.</a>、<a href=\"https://profiles.wordpress.org/mbelchev\">Mariyan Belchev</a>、<a href=\"https://profiles.wordpress.org/markjaquith\">Mark Jaquith</a>、<a href=\"https://profiles.wordpress.org/mrwweb\">Mark Root-Wiley</a>、<a href=\"https://profiles.wordpress.org/mapk\">Mark Uraine</a>、<a href=\"https://profiles.wordpress.org/markoheijnen\">Marko Heijnen</a>、<a href=\"https://profiles.wordpress.org/markshep\">markshep</a>、<a href=\"https://profiles.wordpress.org/matrixik\">matrixik</a>、<a href=\"https://profiles.wordpress.org/mjbanks\">Matt Banks</a>、<a href=\"https://profiles.wordpress.org/mattking5000\">Matt King</a>、<a href=\"https://profiles.wordpress.org/matt\">Matt Mullenweg</a>、<a href=\"https://profiles.wordpress.org/jaworskimatt\">Matt PeepSo</a>、<a href=\"https://profiles.wordpress.org/veraxus\">Matt van Andel</a>、<a href=\"https://profiles.wordpress.org/mattwiebe\">Matt Wiebe</a>、<a href=\"https://profiles.wordpress.org/mattheu\">Matthew Haines-Young</a>、<a href=\"https://profiles.wordpress.org/mattyrob\">mattyrob</a>、<a href=\"https://profiles.wordpress.org/maxcutler\">Max Cutler</a>、<a href=\"https://profiles.wordpress.org/maximeculea\">Maxime Culea</a>、<a href=\"https://profiles.wordpress.org/mayukojpn\">Mayo Moriyama</a>、<a href=\"https://profiles.wordpress.org/mckernanin\">mckernanin</a>、<a href=\"https://profiles.wordpress.org/mhowell\">mhowell</a>、<a href=\"https://profiles.wordpress.org/michaelarestad\">Michael Arestad</a>、<a href=\"https://profiles.wordpress.org/michael-arestad\">Michael Arestad</a>、<a href=\"https://profiles.wordpress.org/michalzuber\">michalzuber</a>、<a href=\"https://profiles.wordpress.org/stubgo\">Miina Sikk</a>、<a href=\"https://profiles.wordpress.org/mauteri\">Mike Auteri</a>、<a href=\"https://profiles.wordpress.org/mihai2u\">Mike Crantea</a>、<a href=\"https://profiles.wordpress.org/mdgl\">Mike Glendinning</a>、<a href=\"https://profiles.wordpress.org/mikehansenme\">Mike Hansen</a>、<a href=\"https://profiles.wordpress.org/mikelittle\">Mike Little</a>、<a href=\"https://profiles.wordpress.org/mikeschroder\">Mike Schroder</a>、<a href=\"https://profiles.wordpress.org/mikeviele\">Mike Viele</a>、<a href=\"https://profiles.wordpress.org/dimadin\">Milan Dinić</a>、<a href=\"https://profiles.wordpress.org/modemlooper\">modemlooper</a>、<a href=\"https://profiles.wordpress.org/batmoo\">Mohammad Jangda</a>、<a href=\"https://profiles.wordpress.org/deremohan\">Mohan Dere</a>、<a href=\"https://profiles.wordpress.org/monikarao\">monikarao</a>、<a href=\"https://profiles.wordpress.org/morettigeorgiev\">morettigeorgiev</a>、<a href=\"https://profiles.wordpress.org/morganestes\">Morgan Estes</a>、<a href=\"https://profiles.wordpress.org/mor10\">Morten Rand-Hendriksen</a>、<a href=\"https://profiles.wordpress.org/mt8biz\">moto hachi ( mt8.biz )</a>、<a href=\"https://profiles.wordpress.org/mrbobbybryant\">mrbobbybryant</a>、<a href=\"https://profiles.wordpress.org/nnaimov\">Naim Naimov</a>、<a href=\"https://profiles.wordpress.org/natereist\">Nate Reist</a>、<a href=\"https://profiles.wordpress.org/natewr\">NateWr</a>、<a href=\"https://profiles.wordpress.org/nathanrice\">nathanrice</a>、<a href=\"https://profiles.wordpress.org/nazgul\">Nazgul</a>、<a href=\"https://profiles.wordpress.org/greatislander\">Ned Zimmerman</a>、<a href=\"https://profiles.wordpress.org/krstarica\">net</a>、<a href=\"https://profiles.wordpress.org/celloexpressions\">Nick Halsey </a>、<a href=\"https://profiles.wordpress.org/nikeo\">Nicolas GUILLAUME</a>、<a href=\"https://profiles.wordpress.org/nikschavan\">Nikhil Chavan</a>、<a href=\"https://profiles.wordpress.org/nikv\">Nikhil Vimal</a>、<a href=\"https://profiles.wordpress.org/nbachiyski\">Nikolay Bachiyski</a>、<a href=\"https://profiles.wordpress.org/rabmalin\">Nilambar Sharma</a>、<a href=\"https://profiles.wordpress.org/noplanman\">noplanman</a>、<a href=\"https://profiles.wordpress.org/nullvariable\">nullvariable</a>、<a href=\"https://profiles.wordpress.org/odie2\">odie2</a>、<a href=\"https://profiles.wordpress.org/odysseygate\">odyssey</a>、<a href=\"https://profiles.wordpress.org/hideokamoto\">Okamoto Hidetaka</a>、<a href=\"https://profiles.wordpress.org/orvils\">orvils</a>、<a href=\"https://profiles.wordpress.org/oskosk\">oskosk</a>、<a href=\"https://profiles.wordpress.org/ottok\">Otto Kekäläinen</a>、<a href=\"https://profiles.wordpress.org/ovann86\">ovann86</a>、<a href=\"https://profiles.wordpress.org/imnok\">Pantip Treerattanapitak (Nok)</a>、<a href=\"https://profiles.wordpress.org/swissspidy\">Pascal Birchler</a>、<a href=\"https://profiles.wordpress.org/patilvikasj\">patilvikasj</a>、<a href=\"https://profiles.wordpress.org/pbearne\">Paul Bearne</a>、<a href=\"https://profiles.wordpress.org/paulwilde\">Paul Wilde</a>、<a href=\"https://profiles.wordpress.org/sirbrillig\">Payton Swick</a>、<a href=\"https://profiles.wordpress.org/pdufour\">pdufour</a>、<a href=\"https://profiles.wordpress.org/piewp\">Perdaan</a>、<a href=\"https://profiles.wordpress.org/peterwilsoncc\">Peter Wilson</a>、<a href=\"https://profiles.wordpress.org/phh\">phh</a>、<a href=\"https://profiles.wordpress.org/php\">php</a>、<a href=\"https://profiles.wordpress.org/delawski\">Piotr Delawski</a>、<a href=\"https://profiles.wordpress.org/pippinsplugins\">pippinsplugins</a>、<a href=\"https://profiles.wordpress.org/pjgalbraith\">pjgalbraith</a>、<a href=\"https://profiles.wordpress.org/pkevan\">pkevan</a>、<a href=\"https://profiles.wordpress.org/pratikchaskar\">Pratik</a>、<a href=\"https://profiles.wordpress.org/pressionate\">Pressionate</a>、<a href=\"https://profiles.wordpress.org/presskopp\">Presskopp</a>、<a href=\"https://profiles.wordpress.org/procodewp\">procodewp</a>、<a href=\"https://profiles.wordpress.org/rachelbaker\">Rachel Baker</a>、<a href=\"https://profiles.wordpress.org/rahulsprajapati\">Rahul Prajapati</a>、<a href=\"https://profiles.wordpress.org/superpoincare\">Ramanan</a>、<a href=\"https://profiles.wordpress.org/ramiy\">Rami Yushuvaev</a>、<a href=\"https://profiles.wordpress.org/ramiabraham\">ramiabraham</a>、<a href=\"https://profiles.wordpress.org/ranh\">ranh</a>、<a href=\"https://profiles.wordpress.org/redsand\">Red Sand Media Group</a>、<a href=\"https://profiles.wordpress.org/youknowriad\">Riad Benguella</a>、<a href=\"https://profiles.wordpress.org/rianrietveld\">Rian Rietveld</a>、<a href=\"https://profiles.wordpress.org/iamfriendly\">Richard Tape</a>、<a href=\"https://profiles.wordpress.org/rpayne7264\">Robert D Payne</a>、<a href=\"https://profiles.wordpress.org/iamjolly\">Robert Jolly</a>、<a href=\"https://profiles.wordpress.org/rnoakes3rd\">Robert Noakes</a>、<a href=\"https://profiles.wordpress.org/d4z_c0nf\">Rocco Aliberti</a>、<a href=\"https://profiles.wordpress.org/rodrigosprimo\">Rodrigo Primo</a>、<a href=\"https://profiles.wordpress.org/rommelxcastro\">Rommel Castro</a>、<a href=\"https://profiles.wordpress.org/fronaldaraujo\">Ronald Araújo</a>、<a href=\"https://profiles.wordpress.org/magicroundabout\">Ross Wintle</a>、<a href=\"https://profiles.wordpress.org/guavaworks\">Roy Sivan</a>、<a href=\"https://profiles.wordpress.org/ryankienstra\">Ryan Kienstra</a>、<a href=\"https://profiles.wordpress.org/rmccue\">Ryan McCue</a>、<a href=\"https://profiles.wordpress.org/ryanplas\">Ryan Plas</a>、<a href=\"https://profiles.wordpress.org/welcher\">Ryan Welcher</a>、<a href=\"https://profiles.wordpress.org/salcode\">Sal Ferrarello</a>、<a href=\"https://profiles.wordpress.org/samikeijonen\">Sami Keijonen</a>、<a href=\"https://profiles.wordpress.org/solarissmoke\">Samir Shah</a>、<a href=\"https://profiles.wordpress.org/samuelsidler\">Samuel Sidler</a>、<a href=\"https://profiles.wordpress.org/sandesh055\">Sandesh</a>、<a href=\"https://profiles.wordpress.org/smyoon315\">Sang-Min Yoon</a>、<a href=\"https://profiles.wordpress.org/sanketparmar\">Sanket Parmar</a>、<a href=\"https://profiles.wordpress.org/pollyplummer\">Sarah Gooding</a>、<a href=\"https://profiles.wordpress.org/sayedwp\">Sayed Taqui</a>、<a href=\"https://profiles.wordpress.org/schrapel\">schrapel</a>、<a href=\"https://profiles.wordpress.org/coffee2code\">Scott Reilly</a>、<a href=\"https://profiles.wordpress.org/wonderboymusic\">Scott Taylor</a>、<a href=\"https://profiles.wordpress.org/scrappyhuborg\">scrappy@hub.org</a>、<a href=\"https://profiles.wordpress.org/scribu\">scribu</a>、<a href=\"https://profiles.wordpress.org/seancjones\">seancjones</a>、<a href=\"https://profiles.wordpress.org/sebastianpisula\">Sebastian Pisula</a>、<a href=\"https://profiles.wordpress.org/sergeybiryukov\">Sergey Biryukov</a>、<a href=\"https://profiles.wordpress.org/sgr33n\">Sergio De Falco</a>、<a href=\"https://profiles.wordpress.org/sfpt\">sfpt</a>、<a href=\"https://profiles.wordpress.org/shayanys\">shayanys</a>、<a href=\"https://profiles.wordpress.org/shazahm1hotmailcom\">shazahm1</a>、<a href=\"https://profiles.wordpress.org/shprink\">shprink</a>、<a href=\"https://profiles.wordpress.org/simonlampen\">simonlampen</a>、<a href=\"https://profiles.wordpress.org/skippy\">skippy</a>、<a href=\"https://profiles.wordpress.org/smerriman\">smerriman</a>、<a href=\"https://profiles.wordpress.org/snacking\">snacking</a>、<a href=\"https://profiles.wordpress.org/solal\">solal</a>、<a href=\"https://profiles.wordpress.org/soean\">Soren Wrede</a>、<a href=\"https://profiles.wordpress.org/sstoqnov\">Stanimir Stoyanov</a>、<a href=\"https://profiles.wordpress.org/metodiew\">Stanko Metodiev</a>、<a href=\"https://profiles.wordpress.org/sharkomatic\">Steph</a>、<a href=\"https://profiles.wordpress.org/sswells\">Steph Wells</a>、<a href=\"https://profiles.wordpress.org/sillybean\">Stephanie Leary</a>、<a href=\"https://profiles.wordpress.org/netweb\">Stephen Edgar</a>、<a href=\"https://profiles.wordpress.org/stephenharris\">Stephen Harris</a>、<a href=\"https://profiles.wordpress.org/stevenkword\">Steven Word</a>、<a href=\"https://profiles.wordpress.org/stevenlinx\">stevenlinx</a>、<a href=\"https://profiles.wordpress.org/sudar\">Sudar Muthu</a>、<a href=\"https://profiles.wordpress.org/patilswapnilv\">Swapnil V. Patil</a>、<a href=\"https://profiles.wordpress.org/swapnild\">swapnild</a>、<a href=\"https://profiles.wordpress.org/szaqal21\">szaqal21</a>、<a href=\"https://profiles.wordpress.org/takahashi_fumiki\">Takahashi Fumiki</a>、<a href=\"https://profiles.wordpress.org/miyauchi\">Takayuki Miyauchi</a>、<a href=\"https://profiles.wordpress.org/karmatosed\">Tammie Lister</a>、<a href=\"https://profiles.wordpress.org/tapsboy\">tapsboy</a>、<a href=\"https://profiles.wordpress.org/tlovett1\">Taylor Lovett</a>、<a href=\"https://profiles.wordpress.org/team\">team</a>、<a href=\"https://profiles.wordpress.org/tg29359\">tg29359</a>、<a href=\"https://profiles.wordpress.org/tharsheblows\">tharsheblows</a>、<a href=\"https://profiles.wordpress.org/the\">the</a>、<a href=\"https://profiles.wordpress.org/themeshaper\">themeshaper</a>、<a href=\"https://profiles.wordpress.org/thenbrent\">thenbrent</a>、<a href=\"https://profiles.wordpress.org/thomaswm\">thomaswm</a>、<a href=\"https://profiles.wordpress.org/tfrommen\">Thorsten Frommen</a>、<a href=\"https://profiles.wordpress.org/tierra\">tierra</a>、<a href=\"https://profiles.wordpress.org/tnash\">Tim Nash</a>、<a href=\"https://profiles.wordpress.org/timmydcrawford\">Timmy Crawford</a>、<a href=\"https://profiles.wordpress.org/timothyblynjacobs\">Timothy Jacobs</a>、<a href=\"https://profiles.wordpress.org/timph\">timph</a>、<a href=\"https://profiles.wordpress.org/tkama\">Tkama</a>、<a href=\"https://profiles.wordpress.org/tnegri\">tnegri</a>、<a href=\"https://profiles.wordpress.org/tomauger\">Tom Auger</a>、<a href=\"https://profiles.wordpress.org/tjnowell\">Tom J Nowell</a>、<a href=\"https://profiles.wordpress.org/tomdxw\">tomdxw</a>、<a href=\"https://profiles.wordpress.org/toro_unit\">Toro_Unit (Hiroshi Urabe)</a>、<a href=\"https://profiles.wordpress.org/zodiac1978\">Torsten Landsiedel</a>、<a href=\"https://profiles.wordpress.org/transl8or\">transl8or</a>、<a href=\"https://profiles.wordpress.org/traversal\">traversal</a>、<a href=\"https://profiles.wordpress.org/wpsmith\">Travis Smith</a>、<a href=\"https://profiles.wordpress.org/nmt90\">Triet Minh</a>、<a href=\"https://profiles.wordpress.org/trishasalas\">Trisha Salas</a>、<a href=\"https://profiles.wordpress.org/tristangemus\">tristangemus</a>、<a href=\"https://profiles.wordpress.org/truongwp\">truongwp</a>、<a href=\"https://profiles.wordpress.org/tsl143\">tsl143</a>、<a href=\"https://profiles.wordpress.org/tywayne\">Ty Carlson</a>、<a href=\"https://profiles.wordpress.org/grapplerulrich\">Ulrich</a>、<a href=\"https://profiles.wordpress.org/utkarshpatel\">Utkarsh</a>、<a href=\"https://profiles.wordpress.org/valeriutihai\">Valeriu Tihai</a>、<a href=\"https://profiles.wordpress.org/zuige\">Viljami Kuosmanen</a>、<a href=\"https://profiles.wordpress.org/vishalkakadiya\">Vishal Kakadiya</a>、<a href=\"https://profiles.wordpress.org/vortfu\">vortfu</a>、<a href=\"https://profiles.wordpress.org/vrundakansara-1\">Vrunda Kansara</a>、<a href=\"https://profiles.wordpress.org/webbgaraget\">webbgaraget</a>、<a href=\"https://profiles.wordpress.org/webmandesign\">WebMan Design | Oliver Juhas</a>、<a href=\"https://profiles.wordpress.org/websupporter\">websupporter</a>、<a href=\"https://profiles.wordpress.org/westonruter\">Weston Ruter</a>、<a href=\"https://profiles.wordpress.org/earnjam\">William Earnhardt</a>、<a href=\"https://profiles.wordpress.org/williampatton\">williampatton</a>、<a href=\"https://profiles.wordpress.org/wolly\">Wolly aka Paolo Valenti</a>、<a href=\"https://profiles.wordpress.org/wraithkenny\">WraithKenny</a>、<a href=\"https://profiles.wordpress.org/yale01\">yale01</a>、<a href=\"https://profiles.wordpress.org/yoavf\">Yoav Farhi</a>、<a href=\"https://profiles.wordpress.org/yogasukma\">Yoga Sukma</a>、<a href=\"https://profiles.wordpress.org/oxymoron\">Zach Wills</a>、<a href=\"https://profiles.wordpress.org/tollmanz\">Zack Tollman</a>、<a href=\"https://profiles.wordpress.org/vanillalounge\">Ze Fontainhas</a>、<a href=\"https://profiles.wordpress.org/zhildzik\">zhildzik</a>和<a href=\"https://profiles.wordpress.org/zsusag\">zsusag</a>。</p>\n<p>最后，让我们感谢为本次发布提供了翻译的贡献者。WordPress 4.9被翻译成了43种语言，还有更多在路上。</p>\n<p>您想发表关于WordPress 4.9的新闻吗？<a href=\"https://s.w.org/images/core/4.9/wp-4-9_press-kit.zip\">我们为您准备了媒体包，来告知您关于此次更新的新功能，我们也为您准备了一些媒体资源</a>。</p>\n<p>如果您想帮忙，请查阅<a href=\"https://make.wordpress.org/\">Make WordPress</a>和我们的<a href=\"https://make.wordpress.org/core/\">核心开发博客</a>。</p>\n<p>感谢您选择WordPress，我们希望您喜欢！</p>\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:36:\"http://wellformedweb.org/CommentAPI/\";a:1:{s:10:\"commentRss\";a:1:{i:0;a:5:{s:4:\"data\";s:48:\"https://cn.wordpress.org/2017/11/16/tipton/feed/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:38:\"http://purl.org/rss/1.0/modules/slash/\";a:1:{s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:1:\"1\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:2;a:6:{s:4:\"data\";s:61:\"\n		\n		\n				\n				\n		\n				\n\n		\n				\n								\n							\n		\n							\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:5:{s:0:\"\";a:7:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:53:\"未来的 WordPress 4.8.1 和 cn.wordpress.org 计划\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:71:\"https://cn.wordpress.org/2017/07/23/4-8-1-plans-and-the-future-of-wpcn/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:80:\"https://cn.wordpress.org/2017/07/23/4-8-1-plans-and-the-future-of-wpcn/#comments\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Sun, 23 Jul 2017 10:10:33 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Uncategorized\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:32:\"https://cn.wordpress.org/?p=1060\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:147:\"各位，抱歉！最近 Jimmy 看起来很忙，我们很久没能给大家带来新版本，请见谅。 4.8.1 的官方（英文）版 [&#8230;]\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:12:\"Jiehan Zheng\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:1455:\"<p>各位，抱歉！最近 Jimmy 看起来很忙，我们很久没能给大家带来新版本，请见谅。</p>\n<p>4.8.1 的官方（英文）版本预计 8 月 1 日发布，我的目标是在英文版本发布的同一天发布中文版本。因为<a href=\"https://make.wordpress.org/polyglots/2017/07/20/new-strings-for-wordpress-4-8-1/\">官方的技术原因</a>，在 4.8.1 发布前的准备期内，中文版无法再发布 4.8 的更新。4.8.1 版本的核心字串已经 100% 审核或重新翻译完毕。一些默认主题和插件还有少数字串没有完成，我会在周二发布之前审核或翻译完毕。</p>\n<p>对未来的版本，我的目标也是在每个官方版本发布的同一天发布中文版本。今后的翻译会更加开放，将在 <a href=\"https://translate.wordpress.org/locale/zh-cn/\">translate.wordpress.org</a> 上进行。中文管理员可以在<a href=\"https://make.wordpress.org/chat/\">官方 Slack</a> 上找到（@jiehan 或 #polyglots 频道）。</p>\n<p><ins><strong>更新：</strong>刚刚发布了一个临时版本，只包含了 <a href=\"https://translate.wordpress.org/locale/zh-cn/\">translate.wordpress.org</a> 最新的翻译，但因为 SVN 权限和个人时间原因，暂时没有本地化的代码更新（比如，没有在最新的主题中添加工信部备案号的功能），本地化的代码目前使用的还是 4.7 的，请见谅。这些将在 4.8.1 中加入。</ins></p>\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:36:\"http://wellformedweb.org/CommentAPI/\";a:1:{s:10:\"commentRss\";a:1:{i:0;a:5:{s:4:\"data\";s:76:\"https://cn.wordpress.org/2017/07/23/4-8-1-plans-and-the-future-of-wpcn/feed/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:38:\"http://purl.org/rss/1.0/modules/slash/\";a:1:{s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:2:\"15\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:3;a:6:{s:4:\"data\";s:64:\"\n		\n		\n				\n				\n		\n				\n\n		\n				\n								\n							\n		\n				\n\n\n			\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:5:{s:0:\"\";a:8:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:26:\"WordPress 4.7“Vaughan”\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:44:\"https://cn.wordpress.org/2016/12/08/vaughan/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:53:\"https://cn.wordpress.org/2016/12/08/vaughan/#comments\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 08 Dec 2016 05:09:23 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:1:{i:0;a:5:{s:4:\"data\";s:8:\"Releases\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:32:\"https://cn.wordpress.org/?p=1040\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:49:\"WordPress 4.7简体中文版现已开放下载。\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:9:\"enclosure\";a:3:{i:0;a:5:{s:4:\"data\";s:0:\"\";s:7:\"attribs\";a:1:{s:0:\"\";a:3:{s:3:\"url\";s:64:\"https://wordpress.org/news/files/2016/12/starter-content.mp4?_=1\";s:6:\"length\";s:7:\"3736020\";s:4:\"type\";s:9:\"video/mp4\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}i:1;a:5:{s:4:\"data\";s:0:\"\";s:7:\"attribs\";a:1:{s:0:\"\";a:3:{s:3:\"url\";s:63:\"https://wordpress.org/news/files/2016/12/edit-shortcuts.mp4?_=2\";s:6:\"length\";s:7:\"1127483\";s:4:\"type\";s:9:\"video/mp4\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}i:2;a:5:{s:4:\"data\";s:0:\"\";s:7:\"attribs\";a:1:{s:0:\"\";a:3:{s:3:\"url\";s:62:\"https://wordpress.org/news/files/2016/12/video-headers.mp4?_=3\";s:6:\"length\";s:7:\"1549803\";s:4:\"type\";s:9:\"video/mp4\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:8:\"Jimmy Xu\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:41937:\"<div style=\"width: 692px\">\n<p>WordPress 4.7简体中文版现已<a href=\"https://cn.wordpress.org/releases/\">开放下载</a>，或在您的WordPress仪表盘中升级。我们将此版本命名为“Vaughan”，以纪念爵士歌手莎拉·沃恩。4.7的全新功能让您以您的想法来建立您的网站。</p>\n<div id=\"v-AHz0Ca46-1\" class=\"video-player\"><video id=\"v-AHz0Ca46-1-video\" width=\"612\" height=\"344\" poster=\"https://videos.files.wordpress.com/AHz0Ca46/wp4-7-vaughan-r8-mastered_scruberthumbnail_0.jpg\" controls=\"true\" preload=\"metadata\" dir=\"ltr\" lang=\"en\"><source src=\"https://videos.files.wordpress.com/AHz0Ca46/wp4-7-vaughan-r8-mastered_dvd.mp4\" type=\"video/mp4; codecs=&quot;avc1.64001E, mp4a.40.2&quot;\" /><source src=\"https://videos.files.wordpress.com/AHz0Ca46/wp4-7-vaughan-r8-mastered_fmt1.ogv\" type=\"video/ogg; codecs=&quot;theora, vorbis&quot;\" /><div><img alt=\"Introducing WordPress 4.7\" src=\"https://videos.files.wordpress.com/AHz0Ca46/wp4-7-vaughan-r8-mastered_scruberthumbnail_0.jpg\" width=\"612\" height=\"344\" /></div><p>Introducing WordPress 4.7</p></video></div>\n<hr />\n<h2 style=\"text-align: center\">“二〇一七”介绍</h2>\n<p>一个全新默认主题可让您的网站通过引人入胜的特色图片和影音页头生动呈现。</p>\n<p><img class=\"alignnone wp-image-4618 size-large\" src=\"https://i2.wp.com/wordpress.org/news/files/2016/12/4.7-%E2%80%94-Twenty-Seventeen-1.jpg?resize=632%2C356&amp;ssl=1\" width=\"632\" height=\"356\" /></p>\n<p>“二〇一七”专注于商业网站，提供了一个可自定义各部分的首页。使用挂件、导航、社交菜单、标志、自定颜色等来个性化。我们的2017年默认主题能支持更多语言、任何设备及广泛的用户群。</p>\n<hr />\n<h2 style=\"text-align: center\">您的网站，您说了算</h2>\n<p>WordPress 4.7为外观编辑加入新功能，帮助您完成主题的初始设置，在一个不间断的工作流程中对所有修改进行非破坏性的实时预览。</p>\n<h3>主题起始内容</h3>\n<p><div style=\"width: 612px;\" class=\"wp-video\"><!--[if lt IE 9]><script>document.createElement(\'video\');</script><![endif]-->\n<video class=\"wp-video-shortcode\" id=\"video-1040-1\" width=\"612\" height=\"334\" preload=\"metadata\" controls=\"controls\"><source type=\"video/mp4\" src=\"https://cn.wordpress.org/files/2016/12/starter-content.mp4?_=1\" /><source type=\"\" src=\"https://wordpress.org/news/files/2016/12/starter-content.mp4?_=1\" /><a href=\"https://cn.wordpress.org/files/2016/12/starter-content.mp4\">https://cn.wordpress.org/files/2016/12/starter-content.mp4</a></video></div>为了帮助您建立一个坚实的基础，当您自定新网站时，个别主题将显示起始内容。这可以将商业信息放置在最佳位置，以提供带有社交网络链接的示例菜单、美丽图案的静态首页。</p>\n<div style=\"float:left;width:48%;margin:0\">\n<h3>编辑快捷方式</h3>\n<p><div style=\"width: 612px;\" class=\"wp-video\"><video class=\"wp-video-shortcode\" id=\"video-1040-2\" width=\"612\" height=\"334\" preload=\"metadata\" controls=\"controls\"><source type=\"video/mp4\" src=\"https://cn.wordpress.org/files/2016/12/starter-content.mp4?_=2\" /><source type=\"\" src=\"https://wordpress.org/news/files/2016/12/edit-shortcuts.mp4?_=2\" /><a href=\"https://cn.wordpress.org/files/2016/12/starter-content.mp4\">https://cn.wordpress.org/files/2016/12/starter-content.mp4</a></video></div>当实时预览时，可视化图标会显示在您网站能够自定义的部分。点击快捷方式直接进行编辑，与起始内容相互配合，自定义您的网站将会比以往来得更快。\n</p></div>\n<div style=\"float:right;width:48%;margin:0\">\n<h3>视频页头</h3>\n<p><div style=\"width: 612px;\" class=\"wp-video\"><video class=\"wp-video-shortcode\" id=\"video-1040-3\" width=\"612\" height=\"334\" preload=\"metadata\" controls=\"controls\"><source type=\"video/mp4\" src=\"https://cn.wordpress.org/files/2016/12/starter-content.mp4?_=3\" /><source type=\"\" src=\"https://wordpress.org/news/files/2016/12/video-headers.mp4?_=3\" /><a href=\"https://cn.wordpress.org/files/2016/12/starter-content.mp4\">https://cn.wordpress.org/files/2016/12/starter-content.mp4</a></video></div>有时候您想使用视频作为移动题图来展示您的作品，试试看“二〇一七”。需要一些视频灵感吗？试试看搜索提供下载、使用视频的网站。\n</p></div>\n<div style=\"clear: both\"></div>\n<div style=\"float:left;width:48%;margin:0\">\n<h3>更平滑的菜单建立</h3>\n<p><img class=\"wp-image-4606 size-medium alignright\" src=\"https://i1.wp.com/wordpress.org/news/files/2016/12/4.7-%E2%80%94-Nav.jpg?resize=300%2C158&amp;ssl=1\" width=\"300\" height=\"158\" /></p>\n<p>网站的许多菜单包含链接指向您的网站其他页面，但当您还没有任何页面时该怎么办？现在，您可以在建立菜单时新增页面，而不必离开定制器并放弃修改。一旦您发布了自定选项，您就可以准备好在新的页面加入内容。\n</p></div>\n<div style=\"float:right;width:48%;margin:0\">\n<h3>自定义CSS</h3>\n<p><img class=\"wp-image-4607 size-medium alignright\" src=\"https://i1.wp.com/wordpress.org/news/files/2016/12/4.7-%E2%80%94-CSS.jpg?resize=300%2C158&amp;ssl=1\" width=\"300\" height=\"158\" /></p>\n<p>有时候您只需要一些视觉上的微调就能使您的网站更臻完美。WordPress 4.7允许您加入自定义CSS并能立即在网站看到变化。实时预览加快您的工作速度，且无须反复刷新网页。\n</p></div>\n<div style=\"clear: both\"></div>\n<hr />\n<div style=\"float:left;width:48%;margin:0\">\n<h3>PDF缩略图预览</h3>\n<p><img class=\"wp-image-4609 size-medium alignright\" src=\"https://i1.wp.com/wordpress.org/news/files/2016/12/4.7-%E2%80%94-PDF.jpg?resize=300%2C158&amp;ssl=1\" width=\"300\" height=\"158\" /></p>\n<p>在WordPress 4.7管理您的文件集变得更容易。上传PDF文件将会产生缩略图，因此您可以在所有文件中更轻易区分他们。\n</p></div>\n<div style=\"float:right;width:48%;margin:0\">\n<h3>让仪表盘使用您的语言</h3>\n<p><img class=\"wp-image-4608 size-medium alignright\" src=\"https://i2.wp.com/wordpress.org/news/files/2016/12/4.7-%E2%80%94-Language.jpg?resize=300%2C158&amp;ssl=1\" width=\"300\" height=\"158\" /></p>\n<p>只是因为您的网站在单一语言设定下，但这不代表每一位协助管理网站的伙伴都使用该语言。新增更多语言至您的网站，让用户可以在他的个人资料页面选择不同语言。\n</p></div>\n<div style=\"clear: both\"></div>\n<hr />\n<h2>向您介绍REST API内容节点</h2>\n<p>WordPress 4.7为文章、评论、自定义字段、用户、元数据和设置带来了REST API节点。</p>\n<p><img class=\"size-large wp-image-4600 alignnone\" src=\"https://i2.wp.com/wordpress.org/news/files/2016/12/4.7-%E2%80%94-API.jpg?resize=632%2C205&amp;ssl=1\" alt=\"\" width=\"632\" height=\"205\" /></p>\n<p>内容节点让您的WordPress拥有机器可读的额外访问资源，具备清晰、标准导向接口，为网站与插件、主题和App开创一条平稳的前进之路。准备好开始开发了吗？<a href=\"https://developer.wordpress.org/rest-api/reference/\">查看REST API参考。</a></p>\n<hr />\n<h2>更多开发者的快乐<img src=\"https://s.w.org/images/core/emoji/11/72x72/1f60a.png\" alt=\"?\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\" /></h2>\n<h3><a href=\"https://make.wordpress.org/core/2016/11/03/post-type-templates-in-4-7/\">文章类型模板</a></h3>\n<p>通过开启所有文章类型的页面模板功能，主题开发者可以有更弹性的WordPress模板结构。</p>\n<h3>更多主题API功能</h3>\n<p>WordPress 4.7为主题开发者带来<a href=\"https://make.wordpress.org/core/2016/09/09/new-functions-hooks-and-behaviour-for-theme-developers-in-wordpress-4-7/\">新函数、钩子和行为</a>。</p>\n<h3><a href=\"https://make.wordpress.org/core/2016/10/04/custom-bulk-actions/\">自定义批处理</a></h3>\n<p>批处理现在除了编辑和删除外加入更多功能。</p>\n<h3><a href=\"https://make.wordpress.org/core/2016/09/08/wp_hook-next-generation-actions-and-filters/\"><code>WP_Hook</code></a></h3>\n<p>依靠动作和过滤器的代码已被大幅调整与改写，同时修正了一些错误。</p>\n<h3>设置注册API</h3>\n<p>register_setting()<a href=\"https://make.wordpress.org/core/2016/10/26/registering-your-settings-in-wordpress-4-7/\">已经强化</a>，加入包含类型、描述及REST API能见度管理。</p>\n<h3><a href=\"https://make.wordpress.org/core/2016/10/12/customize-changesets-technical-design-decisions/\">自定义变更集</a></h3>\n<p>自定义变更集让定制器中的修改持久化，就像自动保存草稿一样。他们也让像起始内容一样的新功能成为可能。</p>\n<hr />\n<h2>开发团队</h2>\n<p>此次发布由<a href=\"https://helen.blog/\">Helen Hou-Sandí</a>领头，由<a href=\"https://profiles.wordpress.org/jbpaul17\">Jeff Paul</a>和<a href=\"http://aaron.jorb.in/\">Aaron Jorbin</a>担任发布代表，并得到了以下个人的帮助。这次发布包含了482人的贡献，创下新高，其中205人更是第一次贡献。在您喜欢的音乐服务中听听莎拉·沃恩，并看看下面这些个人资料吧：</p>\n<p><a href=\"https://profiles.wordpress.org/aaroncampbell\">Aaron D. Campbell</a>、<a href=\"https://profiles.wordpress.org/abrightclearweb\">abrightclearweb</a>、<a href=\"https://profiles.wordpress.org/ibachal\">Achal Jain</a>、<a href=\"https://profiles.wordpress.org/achbed\">achbed</a>、<a href=\"https://profiles.wordpress.org/acmethemes\">Acme Themes</a>、<a href=\"https://profiles.wordpress.org/adamsilverstein\">Adam Silverstein</a>、<a href=\"https://profiles.wordpress.org/adammacias\">adammacias</a>、<a href=\"https://profiles.wordpress.org/mrahmadawais\">Ahmad Awais</a>、<a href=\"https://profiles.wordpress.org/ahmadawais\">ahmadawais</a>、<a href=\"https://profiles.wordpress.org/airesvsg\">airesvsg</a>、<a href=\"https://profiles.wordpress.org/ajoah\">ajoah</a>、<a href=\"https://profiles.wordpress.org/akibjorklund\">Aki Björklund</a>、<a href=\"https://profiles.wordpress.org/akshayvinchurkar\">AkshayVinchurkar</a>、<a href=\"https://profiles.wordpress.org/xknown\">Alex Concha</a>、<a href=\"https://profiles.wordpress.org/xavortm\">Alex Dimitrov</a>、<a href=\"https://profiles.wordpress.org/ironpaperweight\">Alex Hon</a>、<a href=\"https://profiles.wordpress.org/alex27\">alex27</a>、<a href=\"https://profiles.wordpress.org/allancole\">allancole</a>、<a href=\"https://profiles.wordpress.org/arush\">Amanda Rush</a>、<a href=\"https://profiles.wordpress.org/afercia\">Andrea Fercia</a>、<a href=\"https://profiles.wordpress.org/andrewp-2\">Andreas Panag</a>、<a href=\"https://profiles.wordpress.org/nacin\">Andrew Nacin</a>、<a href=\"https://profiles.wordpress.org/azaozz\">Andrew Ozz</a>、<a href=\"https://profiles.wordpress.org/rarst\">Andrey &#8220;Rarst&#8221; Savchenko</a>、<a href=\"https://profiles.wordpress.org/andizer\">Andy Meerwaldt</a>、<a href=\"https://profiles.wordpress.org/kelderic\">Andy Mercer</a>、<a href=\"https://profiles.wordpress.org/andy\">Andy Skelton</a>、<a href=\"https://profiles.wordpress.org/aniketpant\">Aniket Pant</a>、<a href=\"https://profiles.wordpress.org/anilbasnet\">Anil Basnet</a>、<a href=\"https://profiles.wordpress.org/ankit-k-gupta\">Ankit K Gupta</a>、<a href=\"https://profiles.wordpress.org/ahortin\">Anthony Hortin</a>、<a href=\"https://profiles.wordpress.org/antisilent\">antisilent</a>、<a href=\"https://profiles.wordpress.org/atimmer\">Anton Timmermans</a>、<a href=\"https://profiles.wordpress.org/zuige\">Antti Kuosmanen</a>、<a href=\"https://profiles.wordpress.org/apokalyptik\">apokalyptik</a>、<a href=\"https://profiles.wordpress.org/artoliukkonen\">artoliukkonen</a>、<a href=\"https://profiles.wordpress.org/ideag\">Arunas Liuiza</a>、<a href=\"https://profiles.wordpress.org/attitude\">attitude</a>、<a href=\"https://profiles.wordpress.org/backermann\">backermann</a>、<a href=\"https://profiles.wordpress.org/b-07\">Bappi</a>、<a href=\"https://profiles.wordpress.org/bcole808\">Ben Cole</a>、<a href=\"https://profiles.wordpress.org/kau-boy\">Bernhard Kau</a>、<a href=\"https://profiles.wordpress.org/binarymoon\">BinaryMoon</a>、<a href=\"https://profiles.wordpress.org/birgire\">Birgir Erlendsson (birgire)</a>、<a href=\"https://profiles.wordpress.org/bjornw\">BjornW</a>、<a href=\"https://profiles.wordpress.org/bobbingwide\">bobbingwide</a>、<a href=\"https://profiles.wordpress.org/boblinthorst\">boblinthorst</a>、<a href=\"https://profiles.wordpress.org/boboudreau\">boboudreau</a>、<a href=\"https://profiles.wordpress.org/gitlost\">bonger</a>、<a href=\"https://profiles.wordpress.org/boonebgorges\">Boone B. Gorges</a>、<a href=\"https://profiles.wordpress.org/bradyvercher\">Brady Vercher</a>、<a href=\"https://profiles.wordpress.org/brainstormforce\">Brainstorm Force</a>、<a href=\"https://profiles.wordpress.org/kraftbj\">Brandon Kraft</a>、<a href=\"https://profiles.wordpress.org/brianhogg\">Brian Hogg</a>、<a href=\"https://profiles.wordpress.org/krogsgard\">Brian Krogsgard</a>、<a href=\"https://profiles.wordpress.org/bronsonquick\">Bronson Quick</a>、<a href=\"https://profiles.wordpress.org/sixhours\">Caroline Moore</a>、<a href=\"https://profiles.wordpress.org/caseypatrickdriscoll\">Casey Driscoll</a>、<a href=\"https://profiles.wordpress.org/caspie\">Caspie</a>、<a href=\"https://profiles.wordpress.org/chaos-engine\">Chaos Engine</a>、<a href=\"https://profiles.wordpress.org/cheeserolls\">cheeserolls</a>、<a href=\"https://profiles.wordpress.org/chesio\">chesio</a>、<a href=\"https://profiles.wordpress.org/ketuchetan\">chetansatasiya</a>、<a href=\"https://profiles.wordpress.org/choongsavvii\">choong</a>、<a href=\"https://profiles.wordpress.org/chouby\">Chouby</a>、<a href=\"https://profiles.wordpress.org/chredd\">chredd</a>、<a href=\"https://profiles.wordpress.org/chrisjean\">Chris Jean</a>、<a href=\"https://profiles.wordpress.org/cmmarslender\">Chris Marslender</a>、<a href=\"https://profiles.wordpress.org/chris_d2d\">Chris Smith</a>、<a href=\"https://profiles.wordpress.org/chrisvanpatten\">Chris Van Patten</a>、<a href=\"https://profiles.wordpress.org/chriswiegman\">Chris Wiegman</a>、<a href=\"https://profiles.wordpress.org/chriscct7\">chriscct7</a>、<a href=\"https://profiles.wordpress.org/chriseverson\">chriseverson</a>、<a href=\"https://profiles.wordpress.org/cwpnolen\">Christian Nolen</a>、<a href=\"https://profiles.wordpress.org/needle\">Christian Wach</a>、<a href=\"https://profiles.wordpress.org/christophherr\">Christoph Herr</a>、<a href=\"https://profiles.wordpress.org/clarionwpdeveloper\">Clarion Technologies</a>、<a href=\"https://profiles.wordpress.org/claudiosanches\">Claudio Sanches</a>、<a href=\"https://profiles.wordpress.org/claudiosmweb\">Claudio Sanches</a>、<a href=\"https://profiles.wordpress.org/claudiolabarbera\">ClaudioLaBarbera</a>、<a href=\"https://profiles.wordpress.org/codemovementpk\">codemovement.pk</a>、<a href=\"https://profiles.wordpress.org/coderkevin\">coderkevin</a>、<a href=\"https://profiles.wordpress.org/codfish\">codfish</a>、<a href=\"https://profiles.wordpress.org/coreymcollins\">coreymcollins</a>、<a href=\"https://profiles.wordpress.org/curdin\">Curdin Krummenacher</a>、<a href=\"https://profiles.wordpress.org/cgrymala\">Curtiss Grymala</a>、<a href=\"https://profiles.wordpress.org/cdog\">Cătălin Dogaru</a>、<a href=\"https://profiles.wordpress.org/danhgilmore\">danhgilmore</a>、<a href=\"https://profiles.wordpress.org/danielbachhuber\">Daniel Bachhuber </a>、<a href=\"https://profiles.wordpress.org/danielkanchev\">Daniel Kanchev</a>、<a href=\"https://profiles.wordpress.org/mte90\">Daniele Scasciafratte</a>、<a href=\"https://profiles.wordpress.org/danielpietrasik\">danielpietrasik</a>、<a href=\"https://profiles.wordpress.org/dllh\">Daryl L. L. Houston (dllh)</a>、<a href=\"https://profiles.wordpress.org/davepullig\">Dave Pullig</a>、<a href=\"https://profiles.wordpress.org/goto10\">Dave Romsey (goto10)</a>、<a href=\"https://profiles.wordpress.org/davidakennedy\">David A. Kennedy</a>、<a href=\"https://profiles.wordpress.org/turtlepod\">David Chandra Purnama</a>、<a href=\"https://profiles.wordpress.org/dlh\">David Herrera</a>、<a href=\"https://profiles.wordpress.org/dglingren\">David Lingren</a>、<a href=\"https://profiles.wordpress.org/davidmosterd\">David Mosterd</a>、<a href=\"https://profiles.wordpress.org/dshanske\">David Shanske</a>、<a href=\"https://profiles.wordpress.org/davidbhayes\">davidbhayes</a>、<a href=\"https://profiles.wordpress.org/folletto\">Davide &#8216;Folletto&#8217; Casali</a>、<a href=\"https://profiles.wordpress.org/deeptiboddapati\">deeptiboddapati</a>、<a href=\"https://profiles.wordpress.org/delphinus\">delphinus</a>、<a href=\"https://profiles.wordpress.org/deltafactory\">deltafactory</a>、<a href=\"https://profiles.wordpress.org/denis-de-bernardy\">Denis de Bernardy</a>、<a href=\"https://profiles.wordpress.org/valendesigns\">Derek Herman</a>、<a href=\"https://profiles.wordpress.org/pcfreak30\">Derrick Hammer</a>、<a href=\"https://profiles.wordpress.org/derrickkoo\">Derrick Koo</a>、<a href=\"https://profiles.wordpress.org/dimchik\">dimchik</a>、<a href=\"https://profiles.wordpress.org/dineshc\">dineshc</a>、<a href=\"https://profiles.wordpress.org/dd32\">Dion Hulse</a>、<a href=\"https://profiles.wordpress.org/dipeshkakadiya\">dipeshkakadiya</a>、<a href=\"https://profiles.wordpress.org/dmsnell\">dmsnell</a>、<a href=\"https://profiles.wordpress.org/ocean90\">Dominik Schilling</a>、<a href=\"https://profiles.wordpress.org/dotancohen\">Dotan Cohen</a>、<a href=\"https://profiles.wordpress.org/dougwollison\">Doug Wollison</a>、<a href=\"https://profiles.wordpress.org/doughamlin\">doughamlin</a>、<a href=\"https://profiles.wordpress.org/drewapicture\">Drew Jaynes</a>、<a href=\"https://profiles.wordpress.org/duncanjbrown\">duncanjbrown</a>、<a href=\"https://profiles.wordpress.org/dungengronovius\">dungengronovius</a>、<a href=\"https://profiles.wordpress.org/dylanauty\">DylanAuty</a>、<a href=\"https://profiles.wordpress.org/hurtige\">Eddie Hurtig</a>、<a href=\"https://profiles.wordpress.org/oso96_2000\">Eduardo Reveles</a>、<a href=\"https://profiles.wordpress.org/chopinbach\">Edwin Cromley</a>、<a href=\"https://profiles.wordpress.org/electricfeet\">ElectricFeet</a>、<a href=\"https://profiles.wordpress.org/eliorivero\">Elio Rivero</a>、<a href=\"https://profiles.wordpress.org/iseulde\">Ella Iseulde Van Dorpe</a>、<a href=\"https://profiles.wordpress.org/elyobo\">elyobo</a>、<a href=\"https://profiles.wordpress.org/enodekciw\">enodekciw</a>、<a href=\"https://profiles.wordpress.org/enshrined\">enshrined</a>、<a href=\"https://profiles.wordpress.org/ericlewis\">Eric Andrew Lewis</a>、<a href=\"https://profiles.wordpress.org/pushred\">Eric Lanehart</a>、<a href=\"https://profiles.wordpress.org/eherman24\">Evan Herman</a>、<a href=\"https://profiles.wordpress.org/flixos90\">Felix Arntz</a>、<a href=\"https://profiles.wordpress.org/fencer04\">Fencer04</a>、<a href=\"https://profiles.wordpress.org/florianbrinkmann\">Florian Brinkmann</a>、<a href=\"https://profiles.wordpress.org/mista-flo\">Florian TIAR</a>、<a href=\"https://profiles.wordpress.org/foliovision\">FolioVision</a>、<a href=\"https://profiles.wordpress.org/fomenkoandrey\">fomenkoandrey</a>、<a href=\"https://profiles.wordpress.org/frank-klein\">Frank Klein</a>、<a href=\"https://profiles.wordpress.org/fjarrett\">Frankie Jarrett</a>、<a href=\"https://profiles.wordpress.org/frankiet\">frankiet</a>、<a href=\"https://profiles.wordpress.org/akeif\">Fred</a>、<a href=\"https://profiles.wordpress.org/frozzare\">Fredrik Forsmo</a>、<a href=\"https://profiles.wordpress.org/fuscata\">fuscata</a>、<a href=\"https://profiles.wordpress.org/gma992\">Gabriel Maldonado</a>、<a href=\"https://profiles.wordpress.org/garyj\">Gary Jones</a>、<a href=\"https://profiles.wordpress.org/pento\">Gary Pendergast</a>、<a href=\"https://profiles.wordpress.org/geekysoft\">Geeky Software</a>、<a href=\"https://profiles.wordpress.org/georgestephanis\">George Stephanis</a>、<a href=\"https://profiles.wordpress.org/goranseric\">Goran Šerić</a>、<a href=\"https://profiles.wordpress.org/grahamarmfield\">Graham Armfield</a>、<a href=\"https://profiles.wordpress.org/grantderepas\">Grant Derepas</a>、<a href=\"https://profiles.wordpress.org/greatislander\">greatislander</a>、<a href=\"https://profiles.wordpress.org/tivnet\">Gregory Karpinsky (@tivnet)</a>、<a href=\"https://profiles.wordpress.org/hardeepasrani\">Hardeep Asrani</a>、<a href=\"https://profiles.wordpress.org/henrywright\">Henry Wright</a>、<a href=\"https://profiles.wordpress.org/hiddenpearls\">hiddenpearls</a>、<a href=\"https://profiles.wordpress.org/hnle\">Hinaloe</a>、<a href=\"https://profiles.wordpress.org/hugobaeta\">Hugo Baeta</a>、<a href=\"https://profiles.wordpress.org/polevaultweb\">Iain Poulson</a>、<a href=\"https://profiles.wordpress.org/iamjolly\">iamjolly</a>、<a href=\"https://profiles.wordpress.org/iandunn\">Ian Dunn</a>、<a href=\"https://profiles.wordpress.org/ianedington\">ian.edington</a>、<a href=\"https://profiles.wordpress.org/idealien\">idealien</a>、<a href=\"https://profiles.wordpress.org/igmoweb\">Ignacio Cruz Moreno</a>、<a href=\"https://profiles.wordpress.org/imath\">imath</a>、<a href=\"https://profiles.wordpress.org/imnok\">Imnok</a>、<a href=\"https://profiles.wordpress.org/implenton\">implenton</a>、<a href=\"https://profiles.wordpress.org/ionutst\">Ionut Stanciu</a>、<a href=\"https://profiles.wordpress.org/ipstenu\">Ipstenu (Mika Epstein)</a>、<a href=\"https://profiles.wordpress.org/krstarica\">Ivan</a>、<a href=\"https://profiles.wordpress.org/ivdimova\">ivdimova</a>、<a href=\"https://profiles.wordpress.org/jdgrimes\">J.D. Grimes</a>、<a href=\"https://profiles.wordpress.org/jakept\">Jacob Peattie</a>、<a href=\"https://profiles.wordpress.org/whyisjake\">Jake Spurlock</a>、<a href=\"https://profiles.wordpress.org/jnylen0\">James Nylen</a>、<a href=\"https://profiles.wordpress.org/jamesacero\">jamesacero</a>、<a href=\"https://profiles.wordpress.org/japh\">Japh</a>、<a href=\"https://profiles.wordpress.org/jaredcobb\">Jared Cobb</a>、<a href=\"https://profiles.wordpress.org/jayarjo\">jayarjo</a>、<a href=\"https://profiles.wordpress.org/jdolan\">jdolan</a>、<a href=\"https://profiles.wordpress.org/jdoubleu\">jdoubleu</a>、<a href=\"https://profiles.wordpress.org/cheffheid\">Jeffrey de Wit</a>、<a href=\"https://profiles.wordpress.org/jeremyfelt\">Jeremy Felt</a>、<a href=\"https://profiles.wordpress.org/jpry\">Jeremy Pry</a>、<a href=\"https://profiles.wordpress.org/jimt\">jimt</a>、<a href=\"https://profiles.wordpress.org/jipmoors\">Jip Moors</a>、<a href=\"https://profiles.wordpress.org/jmusal\">jmusal</a>、<a href=\"https://profiles.wordpress.org/joedolson\">Joe Dolson</a>、<a href=\"https://profiles.wordpress.org/joehoyle\">Joe Hoyle</a>、<a href=\"https://profiles.wordpress.org/joemcgill\">Joe McGill</a>、<a href=\"https://profiles.wordpress.org/joelcj91\">Joel James</a>、<a href=\"https://profiles.wordpress.org/johanmynhardt\">johanmynhardt</a>、<a href=\"https://profiles.wordpress.org/johnbillion\">John Blackbourn</a>、<a href=\"https://profiles.wordpress.org/zyphonic\">John Dittmar</a>、<a href=\"https://profiles.wordpress.org/johnjamesjacoby\">John James Jacoby</a>、<a href=\"https://profiles.wordpress.org/johnpbloch\">John P. Bloch</a>、<a href=\"https://profiles.wordpress.org/johnregan3\">John Regan</a>、<a href=\"https://profiles.wordpress.org/johnpgreen\">johnpgreen</a>、<a href=\"https://profiles.wordpress.org/kenshino\">Jon (Kenshino)</a>、<a href=\"https://profiles.wordpress.org/jonathanbardo\">Jonathan Bardo</a>、<a href=\"https://profiles.wordpress.org/jbrinley\">Jonathan Brinley</a>、<a href=\"https://profiles.wordpress.org/daggerhart\">Jonathan Daggerhart</a>、<a href=\"https://profiles.wordpress.org/desrosj\">Jonathan Desrosiers</a>、<a href=\"https://profiles.wordpress.org/spacedmonkey\">Jonny Harris</a>、<a href=\"https://profiles.wordpress.org/jonnyauk\">jonnyauk</a>、<a href=\"https://profiles.wordpress.org/jordesign\">jordesign</a>、<a href=\"https://profiles.wordpress.org/jorritschippers\">JorritSchippers</a>、<a href=\"https://profiles.wordpress.org/joefusco\">Joseph Fusco</a>、<a href=\"https://profiles.wordpress.org/jjeaton\">Josh Eaton</a>、<a href=\"https://profiles.wordpress.org/shelob9\">Josh Pollock</a>、<a href=\"https://profiles.wordpress.org/joshcummingsdesign\">joshcummingsdesign</a>、<a href=\"https://profiles.wordpress.org/joshkadis\">joshkadis</a>、<a href=\"https://profiles.wordpress.org/joyously\">Joy</a>、<a href=\"https://profiles.wordpress.org/jrf\">jrf</a>、<a href=\"https://profiles.wordpress.org/jrgould\">JRGould</a>、<a href=\"https://profiles.wordpress.org/juanfra\">Juanfra Aldasoro</a>、<a href=\"https://profiles.wordpress.org/juhise\">Juhi Saxena</a>、<a href=\"https://profiles.wordpress.org/nukaga\">Junko Nukaga</a>、<a href=\"https://profiles.wordpress.org/justinbusa\">Justin Busa</a>、<a href=\"https://profiles.wordpress.org/justinsainton\">Justin Sainton</a>、<a href=\"https://profiles.wordpress.org/jshreve\">Justin Shreve</a>、<a href=\"https://profiles.wordpress.org/jtsternberg\">Justin Sternberg</a>、<a href=\"https://profiles.wordpress.org/kadamwhite\">K.Adam White</a>、<a href=\"https://profiles.wordpress.org/kacperszurek\">kacperszurek</a>、<a href=\"https://profiles.wordpress.org/trepmal\">Kailey (trepmal)</a>、<a href=\"https://profiles.wordpress.org/kalenjohnson\">KalenJohnson</a>、<a href=\"https://profiles.wordpress.org/codebykat\">Kat Hagan</a>、<a href=\"https://profiles.wordpress.org/kkoppenhaver\">Keanan Koppenhaver</a>、<a href=\"https://profiles.wordpress.org/keesiemeijer\">keesiemeijer</a>、<a href=\"https://profiles.wordpress.org/kellbot\">kellbot</a>、<a href=\"https://profiles.wordpress.org/ryelle\">Kelly Dwan</a>、<a href=\"https://profiles.wordpress.org/wraithkenny\">Ken Newman</a>、<a href=\"https://profiles.wordpress.org/khag7\">Kevin Hagerty</a>、<a href=\"https://profiles.wordpress.org/kwight\">Kirk Wight</a>、<a href=\"https://profiles.wordpress.org/kitchin\">kitchin</a>、<a href=\"https://profiles.wordpress.org/ixkaito\">Kite</a>、<a href=\"https://profiles.wordpress.org/kjbenk\">kjbenk</a>、<a href=\"https://profiles.wordpress.org/knutsp\">Knut Sparhell</a>、<a href=\"https://profiles.wordpress.org/koenschipper\">koenschipper</a>、<a href=\"https://profiles.wordpress.org/kokarn\">kokarn</a>、<a href=\"https://profiles.wordpress.org/kovshenin\">Konstantin Kovshenin</a>、<a href=\"https://profiles.wordpress.org/obenland\">Konstantin Obenland</a>、<a href=\"https://profiles.wordpress.org/kouratoras\">Konstantinos Kouratoras</a>、<a href=\"https://profiles.wordpress.org/kuchenundkakao\">kuchenundkakao</a>、<a href=\"https://profiles.wordpress.org/kuldipem\">kuldipem</a>、<a href=\"https://profiles.wordpress.org/laurelfulford\">Laurel Fulford</a>、<a href=\"https://profiles.wordpress.org/leewillis77\">Lee Willis</a>、<a href=\"https://profiles.wordpress.org/leobaiano\">Leo Baiano</a>、<a href=\"https://profiles.wordpress.org/littlebigthing\">LittleBigThings (Csaba)</a>、<a href=\"https://profiles.wordpress.org/lucasstark\">Lucas Stark</a>、<a href=\"https://profiles.wordpress.org/lukecavanagh\">Luke Cavanagh</a>、<a href=\"https://profiles.wordpress.org/lgedeon\">Luke Gedeon</a>、<a href=\"https://profiles.wordpress.org/lukepettway\">lukepettway</a>、<a href=\"https://profiles.wordpress.org/lyubomir_popov\">lyubomir_popov</a>、<a href=\"https://profiles.wordpress.org/mageshp\">mageshp</a>、<a href=\"https://profiles.wordpress.org/mahesh901122\">Mahesh Waghmare</a>、<a href=\"https://profiles.wordpress.org/mangeshp\">Mangesh Parte</a>、<a href=\"https://profiles.wordpress.org/manishsongirkar36\">Manish Songirkar</a>、<a href=\"https://profiles.wordpress.org/mantismamita\">mantismamita</a>、<a href=\"https://profiles.wordpress.org/mbootsman\">Marcel Bootsman</a>、<a href=\"https://profiles.wordpress.org/tyxla\">Marin Atanasov</a>、<a href=\"https://profiles.wordpress.org/mariovalney\">Mario Valney</a>、<a href=\"https://profiles.wordpress.org/clorith\">Marius L. J. (Clorith)</a>、<a href=\"https://profiles.wordpress.org/markjaquith\">Mark Jaquith</a>、<a href=\"https://profiles.wordpress.org/mrwweb\">Mark Root-Wiley</a>、<a href=\"https://profiles.wordpress.org/mapk\">Mark Uraine</a>、<a href=\"https://profiles.wordpress.org/markoheijnen\">Marko Heijnen</a>、<a href=\"https://profiles.wordpress.org/markshep\">markshep</a>、<a href=\"https://profiles.wordpress.org/matrixik\">matrixik</a>、<a href=\"https://profiles.wordpress.org/mjbanks\">Matt Banks</a>、<a href=\"https://profiles.wordpress.org/jaworskimatt\">Matt Jaworski</a>、<a href=\"https://profiles.wordpress.org/mattking5000\">Matt King</a>、<a href=\"https://profiles.wordpress.org/matt\">Matt Mullenweg</a>、<a href=\"https://profiles.wordpress.org/veraxus\">Matt van Andel</a>、<a href=\"https://profiles.wordpress.org/mattwiebe\">Matt Wiebe</a>、<a href=\"https://profiles.wordpress.org/mattheu\">Matthew Haines-Young</a>、<a href=\"https://profiles.wordpress.org/mattyrob\">mattyrob</a>、<a href=\"https://profiles.wordpress.org/maxcutler\">Max Cutler</a>、<a href=\"https://profiles.wordpress.org/maximeculea\">Maxime Culea</a>、<a href=\"https://profiles.wordpress.org/mayukojpn\">Mayo Moriyama</a>、<a href=\"https://profiles.wordpress.org/mbelchev\">mbelchev</a>、<a href=\"https://profiles.wordpress.org/mckernanin\">mckernanin</a>、<a href=\"https://profiles.wordpress.org/melchoyce\">Mel Choyce</a>、<a href=\"https://profiles.wordpress.org/mhowell\">mhowell</a>、<a href=\"https://profiles.wordpress.org/michaelarestad\">Michael Arestad</a>、<a href=\"https://profiles.wordpress.org/michael-arestad\">Michael Arestad</a>、<a href=\"https://profiles.wordpress.org/michalzuber\">michalzuber</a>、<a href=\"https://profiles.wordpress.org/mauteri\">Mike Auteri</a>、<a href=\"https://profiles.wordpress.org/mihai2u\">Mike Crantea</a>、<a href=\"https://profiles.wordpress.org/mdgl\">Mike Glendinning</a>、<a href=\"https://profiles.wordpress.org/mikehansenme\">Mike Hansen</a>、<a href=\"https://profiles.wordpress.org/mikelittle\">Mike Little</a>、<a href=\"https://profiles.wordpress.org/mikeschroder\">Mike Schroder</a>、<a href=\"https://profiles.wordpress.org/mikeviele\">Mike Viele</a>、<a href=\"https://profiles.wordpress.org/dimadin\">Milan Dinić</a>、<a href=\"https://profiles.wordpress.org/modemlooper\">modemlooper</a>、<a href=\"https://profiles.wordpress.org/batmoo\">Mohammad Jangda</a>、<a href=\"https://profiles.wordpress.org/deremohan\">Mohan Dere</a>、<a href=\"https://profiles.wordpress.org/monikarao\">monikarao</a>、<a href=\"https://profiles.wordpress.org/morettigeorgiev\">morettigeorgiev</a>、<a href=\"https://profiles.wordpress.org/morganestes\">Morgan Estes</a>、<a href=\"https://profiles.wordpress.org/mor10\">Morten Rand-Hendriksen</a>、<a href=\"https://profiles.wordpress.org/mt8biz\">moto hachi ( mt8.biz )</a>、<a href=\"https://profiles.wordpress.org/mrbobbybryant\">mrbobbybryant</a>、<a href=\"https://profiles.wordpress.org/nnaimov\">Naim Naimov</a>、<a href=\"https://profiles.wordpress.org/natewr\">NateWr</a>、<a href=\"https://profiles.wordpress.org/nathanrice\">nathanrice</a>、<a href=\"https://profiles.wordpress.org/nazgul\">Nazgul</a>、<a href=\"https://profiles.wordpress.org/celloexpressions\">Nick Halsey </a>、<a href=\"https://profiles.wordpress.org/nikeo\">Nicolas GUILLAUME</a>、<a href=\"https://profiles.wordpress.org/nikschavan\">Nikhil Chavan</a>、<a href=\"https://profiles.wordpress.org/nikv\">Nikhil Vimal</a>、<a href=\"https://profiles.wordpress.org/nbachiyski\">Nikolay Bachiyski</a>、<a href=\"https://profiles.wordpress.org/rabmalin\">Nilambar Sharma</a>、<a href=\"https://profiles.wordpress.org/noplanman\">noplanman</a>、<a href=\"https://profiles.wordpress.org/nullvariable\">nullvariable</a>、<a href=\"https://profiles.wordpress.org/odie2\">odie2</a>、<a href=\"https://profiles.wordpress.org/odysseygate\">odyssey</a>、<a href=\"https://profiles.wordpress.org/hideokamoto\">Okamoto Hidetaka</a>、<a href=\"https://profiles.wordpress.org/orvils\">orvils</a>、<a href=\"https://profiles.wordpress.org/oskosk\">oskosk</a>、<a href=\"https://profiles.wordpress.org/ottok\">Otto Kekäläinen</a>、<a href=\"https://profiles.wordpress.org/ovann86\">ovann86</a>、<a href=\"https://profiles.wordpress.org/swissspidy\">Pascal Birchler</a>、<a href=\"https://profiles.wordpress.org/patilvikasj\">patilvikasj</a>、<a href=\"https://profiles.wordpress.org/pbearne\">Paul Bearne</a>、<a href=\"https://profiles.wordpress.org/paulwilde\">Paul Wilde</a>、<a href=\"https://profiles.wordpress.org/sirbrillig\">Payton Swick</a>、<a href=\"https://profiles.wordpress.org/pdufour\">pdufour</a>、<a href=\"https://profiles.wordpress.org/piewp\">Perdaan</a>、<a href=\"https://profiles.wordpress.org/peterwilsoncc\">Peter Wilson</a>、<a href=\"https://profiles.wordpress.org/phh\">phh</a>、<a href=\"https://profiles.wordpress.org/php\">php</a>、<a href=\"https://profiles.wordpress.org/delawski\">Piotr Delawski</a>、<a href=\"https://profiles.wordpress.org/pippinsplugins\">pippinsplugins</a>、<a href=\"https://profiles.wordpress.org/pjgalbraith\">pjgalbraith</a>、<a href=\"https://profiles.wordpress.org/pkevan\">pkevan</a>、<a href=\"https://profiles.wordpress.org/pratikchaskar\">Pratik</a>、<a href=\"https://profiles.wordpress.org/pressionate\">Pressionate</a>、<a href=\"https://profiles.wordpress.org/presskopp\">Presskopp</a>、<a href=\"https://profiles.wordpress.org/procodewp\">procodewp</a>、<a href=\"https://profiles.wordpress.org/quasel\">quasel</a>、<a href=\"https://profiles.wordpress.org/rachelbaker\">Rachel Baker</a>、<a href=\"https://profiles.wordpress.org/rahulsprajapati\">Rahul Prajapati</a>、<a href=\"https://profiles.wordpress.org/superpoincare\">Ramanan</a>、<a href=\"https://profiles.wordpress.org/ramiy\">Rami Yushuvaev</a>、<a href=\"https://profiles.wordpress.org/ramiabraham\">ramiabraham</a>、<a href=\"https://profiles.wordpress.org/ranh\">ranh</a>、<a href=\"https://profiles.wordpress.org/redsand\">Red Sand Media Group</a>、<a href=\"https://profiles.wordpress.org/rianrietveld\">Rian Rietveld</a>、<a href=\"https://profiles.wordpress.org/iamfriendly\">Richard Tape</a>、<a href=\"https://profiles.wordpress.org/rpayne7264\">Robert D Payne</a>、<a href=\"https://profiles.wordpress.org/rnoakes3rd\">Robert Noakes</a>、<a href=\"https://profiles.wordpress.org/d4z_c0nf\">Rocco Aliberti</a>、<a href=\"https://profiles.wordpress.org/rodrigosprimo\">Rodrigo Primo</a>、<a href=\"https://profiles.wordpress.org/rommelxcastro\">Rommel Castro</a>、<a href=\"https://profiles.wordpress.org/fronaldaraujo\">Ronald Araújo</a>、<a href=\"https://profiles.wordpress.org/magicroundabout\">Ross Wintle</a>、<a href=\"https://profiles.wordpress.org/guavaworks\">Roy Sivan</a>、<a href=\"https://profiles.wordpress.org/ryankienstra\">Ryan Kienstra</a>、<a href=\"https://profiles.wordpress.org/rmccue\">Ryan McCue</a>、<a href=\"https://profiles.wordpress.org/ryanplas\">Ryan Plas</a>、<a href=\"https://profiles.wordpress.org/welcher\">Ryan Welcher</a>、<a href=\"https://profiles.wordpress.org/salcode\">Sal Ferrarello</a>、<a href=\"https://profiles.wordpress.org/samikeijonen\">Sami Keijonen</a>、<a href=\"https://profiles.wordpress.org/solarissmoke\">Samir Shah</a>、<a href=\"https://profiles.wordpress.org/samuelsidler\">Samuel Sidler</a>、<a href=\"https://profiles.wordpress.org/sandesh055\">Sandesh</a>、<a href=\"https://profiles.wordpress.org/smyoon315\">Sang-Min Yoon</a>、<a href=\"https://profiles.wordpress.org/pollyplummer\">Sarah Gooding</a>、<a href=\"https://profiles.wordpress.org/sayedwp\">Sayed Taqui</a>、<a href=\"https://profiles.wordpress.org/schlessera\">schlessera</a>、<a href=\"https://profiles.wordpress.org/schrapel\">schrapel</a>、<a href=\"https://profiles.wordpress.org/coffee2code\">Scott Reilly</a>、<a href=\"https://profiles.wordpress.org/wonderboymusic\">Scott Taylor</a>、<a href=\"https://profiles.wordpress.org/scrappyhuborg\">scrappy@hub.org</a>、<a href=\"https://profiles.wordpress.org/scribu\">scribu</a>、<a href=\"https://profiles.wordpress.org/seancjones\">seancjones</a>、<a href=\"https://profiles.wordpress.org/sebastianpisula\">Sebastian Pisula</a>、<a href=\"https://profiles.wordpress.org/sergeybiryukov\">Sergey Biryukov</a>、<a href=\"https://profiles.wordpress.org/sgr33n\">Sergio De Falco</a>、<a href=\"https://profiles.wordpress.org/shayanys\">shayanys</a>、<a href=\"https://profiles.wordpress.org/shprink\">shprink</a>、<a href=\"https://profiles.wordpress.org/simonlampen\">simonlampen</a>、<a href=\"https://profiles.wordpress.org/skippy\">skippy</a>、<a href=\"https://profiles.wordpress.org/smerriman\">smerriman</a>、<a href=\"https://profiles.wordpress.org/snacking\">snacking</a>、<a href=\"https://profiles.wordpress.org/soean\">Soeren Wrede</a>、<a href=\"https://profiles.wordpress.org/solal\">solal</a>、<a href=\"https://profiles.wordpress.org/sstoqnov\">Stanimir Stoyanov</a>、<a href=\"https://profiles.wordpress.org/metodiew\">Stanko Metodiev</a>、<a href=\"https://profiles.wordpress.org/sharkomatic\">Steph</a>、<a href=\"https://profiles.wordpress.org/sswells\">Steph Wells</a>、<a href=\"https://profiles.wordpress.org/sillybean\">Stephanie Leary</a>、<a href=\"https://profiles.wordpress.org/netweb\">Stephen Edgar</a>、<a href=\"https://profiles.wordpress.org/stephenharris\">Stephen Harris</a>、<a href=\"https://profiles.wordpress.org/stevenkword\">Steven Word</a>、<a href=\"https://profiles.wordpress.org/stevenlinx\">stevenlinx</a>、<a href=\"https://profiles.wordpress.org/stubgo\">stubgo</a>、<a href=\"https://profiles.wordpress.org/sudar\">Sudar Muthu</a>、<a href=\"https://profiles.wordpress.org/patilswapnilv\">Swapnil V. Patil</a>、<a href=\"https://profiles.wordpress.org/takahashi_fumiki\">Takahashi Fumiki</a>、<a href=\"https://profiles.wordpress.org/miyauchi\">Takayuki Miyauchi</a>、<a href=\"https://profiles.wordpress.org/karmatosed\">Tammie Lister</a>、<a href=\"https://profiles.wordpress.org/tapsboy\">tapsboy</a>、<a href=\"https://profiles.wordpress.org/tlovett1\">Taylor Lovett</a>、<a href=\"https://profiles.wordpress.org/team\">team</a>、<a href=\"https://profiles.wordpress.org/tg29359\">tg29359</a>、<a href=\"https://profiles.wordpress.org/tharsheblows\">tharsheblows</a>、<a href=\"https://profiles.wordpress.org/the\">the</a>、<a href=\"https://profiles.wordpress.org/themeshaper\">themeshaper</a>、<a href=\"https://profiles.wordpress.org/thenbrent\">thenbrent</a>、<a href=\"https://profiles.wordpress.org/thomaswm\">thomaswm</a>、<a href=\"https://profiles.wordpress.org/tfrommen\">Thorsten Frommen</a>、<a href=\"https://profiles.wordpress.org/tierra\">tierra</a>、<a href=\"https://profiles.wordpress.org/tnash\">Tim Nash</a>、<a href=\"https://profiles.wordpress.org/timmydcrawford\">Timmy Crawford</a>、<a href=\"https://profiles.wordpress.org/timothyblynjacobs\">Timothy Jacobs</a>、<a href=\"https://profiles.wordpress.org/tkama\">Tkama</a>、<a href=\"https://profiles.wordpress.org/tnegri\">tnegri</a>、<a href=\"https://profiles.wordpress.org/tomauger\">Tom Auger</a>、<a href=\"https://profiles.wordpress.org/tjnowell\">Tom J Nowell</a>、<a href=\"https://profiles.wordpress.org/tomdxw\">tomdxw</a>、<a href=\"https://profiles.wordpress.org/toro_unit\">Toro_Unit (Hiroshi Urabe)</a>、<a href=\"https://profiles.wordpress.org/zodiac1978\">Torsten Landsiedel</a>、<a href=\"https://profiles.wordpress.org/transl8or\">transl8or</a>、<a href=\"https://profiles.wordpress.org/traversal\">traversal</a>、<a href=\"https://profiles.wordpress.org/wpsmith\">Travis Smith</a>、<a href=\"https://profiles.wordpress.org/nmt90\">Triet Minh</a>、<a href=\"https://profiles.wordpress.org/trishasalas\">Trisha Salas</a>、<a href=\"https://profiles.wordpress.org/tristangemus\">tristangemus</a>、<a href=\"https://profiles.wordpress.org/truongwp\">Truong Giang</a>、<a href=\"https://profiles.wordpress.org/tsl143\">tsl143</a>、<a href=\"https://profiles.wordpress.org/tywayne\">Ty Carlson</a>、<a href=\"https://profiles.wordpress.org/grapplerulrich\">Ulrich</a>、<a href=\"https://profiles.wordpress.org/utkarshpatel\">Utkarsh</a>、<a href=\"https://profiles.wordpress.org/valeriutihai\">Valeriu Tihai</a>、<a href=\"https://profiles.wordpress.org/vishalkakadiya\">Vishal Kakadiya</a>、<a href=\"https://profiles.wordpress.org/voldemortensen\">voldemortensen</a>、<a href=\"https://profiles.wordpress.org/vrundakansara-1\">Vrunda Kansara</a>、<a href=\"https://profiles.wordpress.org/webbgaraget\">webbgaraget</a>、<a href=\"https://profiles.wordpress.org/webmandesign\">WebMan Design | Oliver Juhas</a>、<a href=\"https://profiles.wordpress.org/websupporter\">websupporter</a>、<a href=\"https://profiles.wordpress.org/westonruter\">Weston Ruter</a>、<a href=\"https://profiles.wordpress.org/earnjam\">William Earnhardt</a>、<a href=\"https://profiles.wordpress.org/williampatton\">williampatton</a>、<a href=\"https://profiles.wordpress.org/wolly\">Wolly aka Paolo Valenti</a>、<a href=\"https://profiles.wordpress.org/yale01\">yale01</a>、<a href=\"https://profiles.wordpress.org/yoavf\">Yoav Farhi</a>、<a href=\"https://profiles.wordpress.org/yogasukma\">Yoga Sukma</a>、<a href=\"https://profiles.wordpress.org/youknowriad\">youknowriad</a>、<a href=\"https://profiles.wordpress.org/oxymoron\">Zach Wills</a>、<a href=\"https://profiles.wordpress.org/tollmanz\">Zack Tollman</a>、<a href=\"https://profiles.wordpress.org/vanillalounge\">Ze Fontainhas</a>、<a href=\"https://profiles.wordpress.org/zhildzik\">zhildzik</a>和<a href=\"https://profiles.wordpress.org/zsusag\">zsusag</a>。</p>\n<p>特别感谢<a href=\"https://ramiabraham.com/\">Rami Abraham</a>制作发布视频。</p>\n<p>最后，让我们感谢为本次发布提供了翻译的贡献者。WordPress 4.7被翻译成了52种语言，这次的发布视频也被翻译成了44种语言！</p>\n<p>如果您想帮忙，请查阅<a href=\"https://make.wordpress.org/\">Make WordPress</a>和我们的<a href=\"https://make.wordpress.org/core/\">核心开发博客</a>。感谢您选择WordPress，我们希望您喜欢！</p>\n</div>\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:36:\"http://wellformedweb.org/CommentAPI/\";a:1:{s:10:\"commentRss\";a:1:{i:0;a:5:{s:4:\"data\";s:49:\"https://cn.wordpress.org/2016/12/08/vaughan/feed/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:38:\"http://purl.org/rss/1.0/modules/slash/\";a:1:{s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:1:\"3\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:4;a:6:{s:4:\"data\";s:61:\"\n		\n		\n				\n				\n		\n				\n\n		\n				\n								\n							\n		\n							\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:5:{s:0:\"\";a:7:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:26:\"WordPress 4.5“Coleman”\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:44:\"https://cn.wordpress.org/2016/04/17/coleman/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:53:\"https://cn.wordpress.org/2016/04/17/coleman/#comments\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Sun, 17 Apr 2016 03:18:28 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:1:{i:0;a:5:{s:4:\"data\";s:8:\"Releases\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:32:\"https://cn.wordpress.org/?p=1024\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:49:\"WordPress 4.5简体中文版现已开放下载。\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:8:\"Jimmy Xu\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:26377:\"<div style=\"width: 692px\">\n<p>WordPress 4.5简体中文版现已<a href=\"https://cn.wordpress.org/releases/\">开放下载</a>，或在您的WordPress仪表盘中升级。我们将此版本命名为“Coleman”，以纪念爵士萨克斯手科尔曼·霍金斯。4.5的全新功能协助您精简工作流程，无论您要写作还是建构网站。</p>\n<div id=\"v-scFdjVo6-1\" class=\"video-player\"><video id=\"v-scFdjVo6-1-video\" width=\"612\" height=\"344\" poster=\"https://videos.files.wordpress.com/scFdjVo6/video-604c4abe08_scruberthumbnail_1.jpg\" controls=\"true\" preload=\"metadata\" dir=\"ltr\" lang=\"en\"><source src=\"https://videos.files.wordpress.com/scFdjVo6/video-604c4abe08_dvd.mp4\" type=\"video/mp4; codecs=&quot;avc1.64001E, mp4a.40.2&quot;\" /><source src=\"https://videos.files.wordpress.com/scFdjVo6/video-604c4abe08_fmt1.ogv\" type=\"video/ogg; codecs=&quot;theora, vorbis&quot;\" /><div><img alt=\"Introducing WordPress 4.5 “Coleman”\" src=\"https://videos.files.wordpress.com/scFdjVo6/video-604c4abe08_scruberthumbnail_1.jpg\" width=\"612\" height=\"344\" /></div><p>Introducing WordPress 4.5 “Coleman”</p></video></div>\n<hr />\n<h2 style=\"text-align: center\">编辑功能的改善</h2>\n<p><img class=\"aligncenter size-full wp-image-4220\" src=\"https://wordpress.org/news/files/2016/04/illustration-short-inlinelinks.png\" alt=\"illustration-short-inlinelinks\" width=\"1000\" height=\"400\" /></p>\n<h3>行内链接</h3>\n<p>通过降低分心的编写界面，轻易地链接内容，让您更专注在您的写作上。</p>\n<p><img class=\"aligncenter size-full wp-image-4265\" src=\"https://wordpress.org/news/files/2016/04/editing-shortcuts-big.gif\" alt=\"editing-shortcuts-big\" width=\"960\" height=\"576\" /></p>\n<h3>格式捷径</h3>\n<p>您喜欢在编写列表和标题时使用格式捷径吗？伴随着水平线和<code>&lt;code&gt;</code>现在它们变得更好用了。</p>\n<hr />\n<h2 style=\"text-align: center\">自定义进步</h2>\n<p><img class=\"aligncenter size-full wp-image-4221\" src=\"https://wordpress.org/news/files/2016/04/illustration-short-responsive-preview.png\" alt=\"illustration-short-responsive-preview\" width=\"1000\" height=\"400\" /></p>\n<h3>实时响应式预览</h3>\n<p>确保您的站点在所有设备屏幕上都能完美呈现！在定制器中直接预览手机、平板及桌面的版面。</p>\n<p><img class=\"aligncenter wp-image-4239 size-full\" src=\"https://wordpress.org/news/files/2016/04/illustration-short-customlogo-whitespace.png\" width=\"1000\" height=\"440\" /></p>\n<h3>自定标志</h3>\n<p>“二〇一五”及“二〇一六”主题已经更新，现已支持自定标志，您可以在定制器的“站点识别”一节找到，</p>\n<hr />\n<h2 style=\"text-align: center\">引擎盖下</h2>\n<div class=\"under-the-hood three-col\">\n<div class=\"col\">\n<h3>智能图片缩放</h3>\n<p>生成图片的速度现在提升了50%且无损品质。<a href=\"https://make.wordpress.org/core/2016/03/12/performance-improvements-for-images-in-wordpress-4-5/\">这真的非常酷</a>。</p>\n</div>\n<div class=\"col\">\n<h3>选择性刷新</h3>\n<p>定制器现在支持<a href=\"https://make.wordpress.org/core/2016/02/16/selective-refresh-in-the-customizer/\">全方位框架</a>来渲染各部分的预览，无须使用JavaScript重写您的PHP代码。</p>\n</div>\n<div class=\"col\">\n<h3>改善脚本载入器</h3>\n<p>更好地支持了脚本头/尾的依赖关系。新的<code><a href=\"https://make.wordpress.org/core/2016/03/08/enhanced-script-loader-in-wordpress-4-5/\">wp_add_inline_script()</a></code>可以针对已注册的脚本加入额外的代码。</p>\n<h3>更棒的嵌入模板</h3>\n<p>嵌入模板已分离为不同部分，并且可以通过模板层级<a href=\"https://make.wordpress.org/core/2016/03/11/embeds-changes-in-wordpress-4-5/\">直接由主题进行覆盖</a>。</p>\n<h3>JavaScript库更新</h3>\n<p>jQuery 1.12.3、jQuery Migrate 1.4.0、Backbone 1.2.3和Underscore 1.8.3现已收录。</p>\n</div>\n</div>\n<div class=\"under-the-hood two-col\"></div>\n<hr />\n<h2 style=\"text-align: center\">开发团队</h2>\n<p><a class=\"alignleft\" href=\"https://profiles.wordpress.org/mikeschroder\"><img id=\"grav-76424a001dc6b3ebb4faca0c567800c4-0\" class=\"grav-hashed\" src=\"https://www.gravatar.com/avatar/76424a001dc6b3ebb4faca0c567800c4?d=mm&amp;s=180&amp;r=G\" alt=\"Mike Schroder\" width=\"80\" height=\"80\" /></a>此次发布由<a href=\"https://getsource.net/\">Mike Schroder</a>领头，由<a href=\"https://profiles.wordpress.org/adamsilverstein\">Adam Silverstein</a>担任发布代表，<a href=\"https://choycedesign.com/\">Mel Choyce</a>担任发布设计主管，并得到了以下个人的帮助。这次发布包含了298人的贡献。在您喜欢的音乐服务中听听科尔曼·霍金斯，并看看下面这些个人资料吧：</p>\n<p><a href=\"https://profiles.wordpress.org/mercime\">@mercime</a>、<a href=\"https://profiles.wordpress.org/aaroncampbell\">Aaron D. Campbell</a>、<a href=\"https://profiles.wordpress.org/uglyrobot\">Aaron Edwards</a>、<a href=\"https://profiles.wordpress.org/ahockley\">Aaron Hockley</a>、<a href=\"https://profiles.wordpress.org/jorbin\">Aaron Jorbin</a>、<a href=\"https://profiles.wordpress.org/abiralneupane\">Abiral Neupane</a>、<a href=\"https://profiles.wordpress.org/mrahmadawais\">Ahmad Awais</a>、<a href=\"https://profiles.wordpress.org/aidanlane\">aidanlane</a>、<a href=\"https://profiles.wordpress.org/ambrosey\">Alice Brosey</a>、<a href=\"https://profiles.wordpress.org/arush\">Amanda Rush</a>、<a href=\"https://profiles.wordpress.org/afercia\">Andrea Fercia</a>、<a href=\"https://profiles.wordpress.org/andg\">Andrea Gandino</a>、<a href=\"https://profiles.wordpress.org/nacin\">Andrew Nacin</a>、<a href=\"https://profiles.wordpress.org/azaozz\">Andrew Ozz</a>、<a href=\"https://profiles.wordpress.org/rockwell15\">Andrew Rockwell</a>、<a href=\"https://profiles.wordpress.org/andizer\">Andy</a>、<a href=\"https://profiles.wordpress.org/ankit-k-gupta\">Ankit K Gupta</a>、<a href=\"https://profiles.wordpress.org/atimmer\">Anton Timmermans</a>、<a href=\"https://profiles.wordpress.org/apaliku\">apaliku</a>、<a href=\"https://profiles.wordpress.org/aramzs\">Aram Zucker-Scharff</a>、<a href=\"https://profiles.wordpress.org/ashmatadeen\">ash.matadeen</a>、<a href=\"https://profiles.wordpress.org/bappidgreat\">Ashok Kumar Nath</a>、<a href=\"https://profiles.wordpress.org/bandonrandon\">BandonRandon</a>、<a href=\"https://profiles.wordpress.org/barryceelen\">Barry Ceelen</a>、<a href=\"https://profiles.wordpress.org/empireoflight\">Ben Dunkle</a>、<a href=\"https://profiles.wordpress.org/berengerzyla\">berengerzyla</a>、<a href=\"https://profiles.wordpress.org/neoxx\">Bernhard Riedl</a>、<a href=\"https://profiles.wordpress.org/thisisit\">Bhushan S. Jawle</a>、<a href=\"https://profiles.wordpress.org/birgire\">Birgir Erlendsson (birgire)</a>、<a href=\"https://profiles.wordpress.org/boonebgorges\">Boone B. Gorges</a>、<a href=\"https://profiles.wordpress.org/williamsba1\">Brad Williams</a>、<a href=\"https://profiles.wordpress.org/bradyvercher\">Brady Vercher</a>、<a href=\"https://profiles.wordpress.org/thebrandonallen\">Brandon Allen</a>、<a href=\"https://profiles.wordpress.org/bhubbard\">Brandon Hubbard</a>、<a href=\"https://profiles.wordpress.org/kraftbj\">Brandon Kraft</a>、<a href=\"https://profiles.wordpress.org/krogsgard\">Brian Krogsgard</a>、<a href=\"https://profiles.wordpress.org/borgesbruno\">Bruno Borges</a>、<a href=\"https://profiles.wordpress.org/chmac\">Callum Macdonald</a>、<a href=\"https://profiles.wordpress.org/camikaos\">Cami Kaos</a>、<a href=\"https://profiles.wordpress.org/chandrapatel\">Chandra Patel</a>、<a href=\"https://profiles.wordpress.org/mackensen\">Charles Fulton</a>、<a href=\"https://profiles.wordpress.org/chetanchauhan\">Chetan Chauhan</a>、<a href=\"https://profiles.wordpress.org/chouby\">Chouby</a>、<a href=\"https://profiles.wordpress.org/chrico\">ChriCo</a>、<a href=\"https://profiles.wordpress.org/chriscct7\">Chris Christoff</a>、<a href=\"https://profiles.wordpress.org/chris_dev\">Chris Mok</a>、<a href=\"https://profiles.wordpress.org/christophherr\">Christoph Herr</a>、<a href=\"https://profiles.wordpress.org/ckoerner\">ckoerner</a>、<a href=\"https://profiles.wordpress.org/claudiosanches\">Claudio Sanches</a>、<a href=\"https://profiles.wordpress.org/compute\">Compute</a>、<a href=\"https://profiles.wordpress.org/coreymcollins\">coreymcollins</a>、<a href=\"https://profiles.wordpress.org/d4z_c0nf\">d4z_c0nf</a>、<a href=\"https://profiles.wordpress.org/extendwings\">Daisuke Takahashi</a>、<a href=\"https://profiles.wordpress.org/danhgilmore\">danhgilmore</a>、<a href=\"https://profiles.wordpress.org/danielbachhuber\">Daniel Bachhuber</a>、<a href=\"https://profiles.wordpress.org/scarinessreported\">Daniel Bailey</a>、<a href=\"https://profiles.wordpress.org/redsweater\">Daniel Jalkut (Red Sweater)</a>、<a href=\"https://profiles.wordpress.org/diddledan\">Daniel Llewellyn</a>、<a href=\"https://profiles.wordpress.org/mte90\">Daniele Scasciafratte</a>、<a href=\"https://profiles.wordpress.org/danielpataki\">danielpataki</a>、<a href=\"https://profiles.wordpress.org/dvankooten\">Danny van Kooten</a>、<a href=\"https://profiles.wordpress.org/thewanderingbrit\">Dave Clements</a>、<a href=\"https://profiles.wordpress.org/davidakennedy\">David A. Kennedy</a>、<a href=\"https://profiles.wordpress.org/dbrumbaugh10up\">David Brumbaugh</a>、<a href=\"https://profiles.wordpress.org/dlh\">David Herrera</a>、<a href=\"https://profiles.wordpress.org/dnewton\">David Newton</a>、<a href=\"https://profiles.wordpress.org/dshanske\">David Shanske</a>、<a href=\"https://profiles.wordpress.org/folletto\">Davide &#8216;Folletto&#8217; Casali</a>、<a href=\"https://profiles.wordpress.org/denis-de-bernardy\">Denis de Bernardy</a>、<a href=\"https://profiles.wordpress.org/realloc\">Dennis Ploetner</a>、<a href=\"https://profiles.wordpress.org/valendesigns\">Derek Herman</a>、<a href=\"https://profiles.wordpress.org/dd32\">Dion Hulse</a>、<a href=\"https://profiles.wordpress.org/dmsnell\">dmsnell</a>、<a href=\"https://profiles.wordpress.org/ocean90\">Dominik Schilling</a>、<a href=\"https://profiles.wordpress.org/dossy\">Dossy Shiobara</a>、<a href=\"https://profiles.wordpress.org/dotancohen\">Dotan Cohen</a>、<a href=\"https://profiles.wordpress.org/drebbitsweb\">Dreb Bits</a>、<a href=\"https://profiles.wordpress.org/drewapicture\">Drew Jaynes</a>、<a href=\"https://profiles.wordpress.org/duaneblake\">duaneblake</a>、<a href=\"https://profiles.wordpress.org/kucrut\">Dzikri Aziz</a>、<a href=\"https://profiles.wordpress.org/eliorivero\">Elio Rivero</a>、<a href=\"https://profiles.wordpress.org/iseulde\">Ella Iseulde Van Dorpe</a>、<a href=\"https://profiles.wordpress.org/codex-m\">Emerson Maningo</a>、<a href=\"https://profiles.wordpress.org/enej\">enej</a>、<a href=\"https://profiles.wordpress.org/ericlewis\">Eric Andrew Lewis</a>、<a href=\"https://profiles.wordpress.org/ebinnion\">Eric Binnion</a>、<a href=\"https://profiles.wordpress.org/ericdaams\">Eric Daams</a>、<a href=\"https://profiles.wordpress.org/ethitter\">Erick Hitter</a>、<a href=\"https://profiles.wordpress.org/eherman24\">Evan Herman</a>、<a href=\"https://profiles.wordpress.org/fab1en\">Fabien Quatravaux</a>、<a href=\"https://profiles.wordpress.org/faishal\">faishal</a>、<a href=\"https://profiles.wordpress.org/fantasyworld\">fantasyworld</a>、<a href=\"https://profiles.wordpress.org/flixos90\">Felix Arntz</a>、<a href=\"https://profiles.wordpress.org/finnj\">finnj</a>、<a href=\"https://profiles.wordpress.org/firebird75\">firebird75</a>、<a href=\"https://profiles.wordpress.org/frozzare\">Fredrik Forsmo</a>、<a href=\"https://profiles.wordpress.org/fusillicode\">fusillicode</a>、<a href=\"https://profiles.wordpress.org/garyj\">Gary Jones</a>、<a href=\"https://profiles.wordpress.org/pento\">Gary Pendergast</a>、<a href=\"https://profiles.wordpress.org/gblsm\">gblsm</a>、<a href=\"https://profiles.wordpress.org/georgestephanis\">George Stephanis</a>、<a href=\"https://profiles.wordpress.org/garusky\">Giuseppe Mamone</a>、<a href=\"https://profiles.wordpress.org/jubstuff\">Giustino Borzacchiello</a>、<a href=\"https://profiles.wordpress.org/grantpalin\">Grant Palin</a>、<a href=\"https://profiles.wordpress.org/groovecoder\">groovecoder</a>、<a href=\"https://profiles.wordpress.org/wido\">Guido Scialfa</a>、<a href=\"https://profiles.wordpress.org/bordoni\">Gustavo Bordoni</a>、<a href=\"https://profiles.wordpress.org/hakre\">hakre</a>、<a href=\"https://profiles.wordpress.org/helen\">Helen Hou-Sandí</a>、<a href=\"https://profiles.wordpress.org/henrywright\">Henry Wright</a>、<a href=\"https://profiles.wordpress.org/hnle\">Hinaloe</a>、<a href=\"https://profiles.wordpress.org/hlashbrooke\">Hugh Lashbrooke</a>、<a href=\"https://profiles.wordpress.org/hugobaeta\">Hugo Baeta</a>、<a href=\"https://profiles.wordpress.org/polevaultweb\">Iain Poulson</a>、<a href=\"https://profiles.wordpress.org/igmoweb\">Ignacio Cruz Moreno</a>、<a href=\"https://profiles.wordpress.org/imath\">imath</a>、<a href=\"https://profiles.wordpress.org/iamntz\">Ionut Staicu</a>、<a href=\"https://profiles.wordpress.org/ivankristianto\">Ivan Kristianto</a>、<a href=\"https://profiles.wordpress.org/jdgrimes\">J.D. Grimes</a>、<a href=\"https://profiles.wordpress.org/jadpm\">jadpm</a>、<a href=\"https://profiles.wordpress.org/jamesdigioia\">James DiGioia</a>、<a href=\"https://profiles.wordpress.org/jason_the_adams\">Jason</a>、<a href=\"https://profiles.wordpress.org/jaspermdegroot\">Jasper de Groot</a>、<a href=\"https://profiles.wordpress.org/cheffheid\">Jeffrey de Wit</a>、<a href=\"https://profiles.wordpress.org/jeffpyebrookcom\">Jeffrey Schutzman</a>、<a href=\"https://profiles.wordpress.org/jmdodd\">Jennifer M. Dodd</a>、<a href=\"https://profiles.wordpress.org/jeremyfelt\">Jeremy Felt</a>、<a href=\"https://profiles.wordpress.org/jeherve\">Jeremy Herve</a>、<a href=\"https://profiles.wordpress.org/jpry\">Jeremy Pry</a>、<a href=\"https://profiles.wordpress.org/jesin\">Jesin A</a>、<a href=\"https://profiles.wordpress.org/ardathksheyna\">Jess G.</a>、<a href=\"https://profiles.wordpress.org/boluda\">Joan Boluda</a>、<a href=\"https://profiles.wordpress.org/joehoyle\">Joe Hoyle</a>、<a href=\"https://profiles.wordpress.org/joemcgill\">Joe McGill</a>、<a href=\"https://profiles.wordpress.org/joelerr\">joelerr</a>、<a href=\"https://profiles.wordpress.org/johnbillion\">John Blackbourn</a>、<a href=\"https://profiles.wordpress.org/johnjamesjacoby\">John James Jacoby</a>、<a href=\"https://profiles.wordpress.org/johnnypea\">JohnnyPea</a>、<a href=\"https://profiles.wordpress.org/jbrinley\">Jonathan Brinley</a>、<a href=\"https://profiles.wordpress.org/spacedmonkey\">Jonny Harris</a>、<a href=\"https://profiles.wordpress.org/keraweb\">Jory Hogeveen</a>、<a href=\"https://profiles.wordpress.org/joefusco\">Joseph Fusco</a>、<a href=\"https://profiles.wordpress.org/joshlevinson\">Josh Levinson</a>、<a href=\"https://profiles.wordpress.org/shelob9\">Josh Pollock</a>、<a href=\"https://profiles.wordpress.org/jrchamp\">jrchamp</a>、<a href=\"https://profiles.wordpress.org/jrf\">jrf</a>、<a href=\"https://profiles.wordpress.org/juanfra\">Juanfra Aldasoro</a>、<a href=\"https://profiles.wordpress.org/juhise\">Juhi Saxena</a>、<a href=\"https://profiles.wordpress.org/juliobox\">Julio Potier</a>、<a href=\"https://profiles.wordpress.org/katieburch\">katieburch</a>、<a href=\"https://profiles.wordpress.org/ryelle\">Kelly Dwan</a>、<a href=\"https://profiles.wordpress.org/khag7\">Kevin Hagerty</a>、<a href=\"https://profiles.wordpress.org/kiranpotphode\">Kiran Potphode</a>、<a href=\"https://profiles.wordpress.org/kwight\">Kirk Wight</a>、<a href=\"https://profiles.wordpress.org/ixkaito\">Kite</a>、<a href=\"https://profiles.wordpress.org/kjbenk\">kjbenk</a>、<a href=\"https://profiles.wordpress.org/kovshenin\">Konstantin Kovshenin</a>、<a href=\"https://profiles.wordpress.org/obenland\">Konstantin Obenland</a>、<a href=\"https://profiles.wordpress.org/kouratoras\">Konstantinos Kouratoras</a>、<a href=\"https://profiles.wordpress.org/krissiev\">KrissieV</a>、<a href=\"https://profiles.wordpress.org/lancewillett\">Lance Willett</a>、<a href=\"https://profiles.wordpress.org/leemon\">leemon</a>、<a href=\"https://profiles.wordpress.org/layotte\">Lew Ayotte</a>、<a href=\"https://profiles.wordpress.org/liamdempsey\">Liam Dempsey</a>、<a href=\"https://profiles.wordpress.org/luan-ramos\">Luan Ramos</a>、<a href=\"https://profiles.wordpress.org/luciole135\">luciole135</a>、<a href=\"https://profiles.wordpress.org/lpawlik\">Lukas Pawlik</a>、<a href=\"https://profiles.wordpress.org/latz\">Lutz Schröer</a>、<a href=\"https://profiles.wordpress.org/madvic\">madvic</a>、<a href=\"https://profiles.wordpress.org/marcochiesi\">Marco Chiesi</a>、<a href=\"https://profiles.wordpress.org/tyxla\">Marin Atanasov</a>、<a href=\"https://profiles.wordpress.org/nofearinc\">Mario Peshev</a>、<a href=\"https://profiles.wordpress.org/mark8barnes\">Mark Barnes</a>、<a href=\"https://profiles.wordpress.org/markjaquith\">Mark Jaquith</a>、<a href=\"https://profiles.wordpress.org/mapk\">Mark Uraine</a>、<a href=\"https://profiles.wordpress.org/markoheijnen\">Marko Heijnen</a>、<a href=\"https://profiles.wordpress.org/gitlost\">Martin Burke</a>、<a href=\"https://profiles.wordpress.org/mattfelten\">Matt Felten</a>、<a href=\"https://profiles.wordpress.org/matt\">Matt Mullenweg</a>、<a href=\"https://profiles.wordpress.org/mattwiebe\">Matt Wiebe</a>、<a href=\"https://profiles.wordpress.org/mattgeri\">MattGeri</a>、<a href=\"https://profiles.wordpress.org/wp-architect\">Matthew Ell</a>、<a href=\"https://profiles.wordpress.org/maweder\">maweder</a>、<a href=\"https://profiles.wordpress.org/mayukojpn\">Mayo Moriyama</a>、<a href=\"https://profiles.wordpress.org/mcapybara\">mcapybara</a>、<a href=\"https://profiles.wordpress.org/mehulkaklotar\">Mehul Kaklotar</a>、<a href=\"https://profiles.wordpress.org/meitar\">Meitar</a>、<a href=\"https://profiles.wordpress.org/mensmaximus\">mensmaximus</a>、<a href=\"https://profiles.wordpress.org/michael-arestad\">Michael Arestad</a>、<a href=\"https://profiles.wordpress.org/michalzuber\">michalzuber</a>、<a href=\"https://profiles.wordpress.org/micropat\">micropat</a>、<a href=\"https://profiles.wordpress.org/ipstenu\">Mika Epstein</a>、<a href=\"https://profiles.wordpress.org/mdgl\">Mike Glendinning</a>、<a href=\"https://profiles.wordpress.org/mikehansenme\">Mike Hansen</a>、<a href=\"https://profiles.wordpress.org/mikejolley\">Mike Jolley</a>、<a href=\"https://profiles.wordpress.org/dimadin\">Milan Dinić</a>、<a href=\"https://profiles.wordpress.org/morganestes\">Morgan Estes</a>、<a href=\"https://profiles.wordpress.org/mt8biz\">moto hachi ( mt8.biz )</a>、<a href=\"https://profiles.wordpress.org/usermrpapa\">Mr Papa</a>、<a href=\"https://profiles.wordpress.org/mwidmann\">mwidmann</a>、<a href=\"https://profiles.wordpress.org/nexurium\">nexurium</a>、<a href=\"https://profiles.wordpress.org/niallkennedy\">Niall Kennedy</a>、<a href=\"https://profiles.wordpress.org/nicdford\">Nic Ford</a>、<a href=\"https://profiles.wordpress.org/celloexpressions\">Nick Halsey </a>、<a href=\"https://profiles.wordpress.org/rabmalin\">Nilambar Sharma</a>、<a href=\"https://profiles.wordpress.org/ninos-ego\">Ninos</a>、<a href=\"https://profiles.wordpress.org/oaron\">oaron</a>、<a href=\"https://profiles.wordpress.org/overclokk\">overclokk</a>、<a href=\"https://profiles.wordpress.org/swissspidy\">Pascal Birchler</a>、<a href=\"https://profiles.wordpress.org/obrienlabs\">Pat O&#8217;Brien</a>、<a href=\"https://profiles.wordpress.org/pbearne\">Paul Bearne</a>、<a href=\"https://profiles.wordpress.org/pauldewouters\">Paul de Wouters</a>、<a href=\"https://profiles.wordpress.org/sirbrillig\">Payton Swick</a>、<a href=\"https://profiles.wordpress.org/perezlabs\">Perez Labs</a>、<a href=\"https://profiles.wordpress.org/gungeekatx\">Pete Nelson</a>、<a href=\"https://profiles.wordpress.org/peterwilsoncc\">Peter Wilson</a>、<a href=\"https://profiles.wordpress.org/cadeyrn\">petermolnar</a>、<a href=\"https://profiles.wordpress.org/walbo\">Petter Walbø Johnsgård</a>、<a href=\"https://profiles.wordpress.org/wizzard_\">Pieter</a>、<a href=\"https://profiles.wordpress.org/mordauk\">Pippin Williamson</a>、<a href=\"https://profiles.wordpress.org/ptahdunbar\">Pirate Dunbar</a>、<a href=\"https://profiles.wordpress.org/prettyboymp\">prettyboymp</a>、<a href=\"https://profiles.wordpress.org/profforg\">Profforg</a>、<a href=\"https://profiles.wordpress.org/programmin\">programmin</a>、<a href=\"https://profiles.wordpress.org/rachelbaker\">Rachel Baker</a>、<a href=\"https://profiles.wordpress.org/rahalaboulfeth\">rahal.aboulfeth</a>、<a href=\"https://profiles.wordpress.org/ramiy\">Rami Yushuvaev</a>、<a href=\"https://profiles.wordpress.org/lamosty\">Rastislav Lamos</a>、<a href=\"https://profiles.wordpress.org/rickalee\">Ricky Lee Whittemore</a>、<a href=\"https://profiles.wordpress.org/ritteshpatel\">Ritesh Patel</a>、<a href=\"https://profiles.wordpress.org/rob\">rob</a>、<a href=\"https://profiles.wordpress.org/rogerhub\">Roger Chen</a>、<a href=\"https://profiles.wordpress.org/romsocial\">RomSocial</a>、<a href=\"https://profiles.wordpress.org/ruudjoyo\">Ruud Laan</a>、<a href=\"https://profiles.wordpress.org/ryan\">Ryan Boren</a>、<a href=\"https://profiles.wordpress.org/ryankienstra\">Ryan Kienstra</a>、<a href=\"https://profiles.wordpress.org/rmccue\">Ryan McCue</a>、<a href=\"https://profiles.wordpress.org/welcher\">Ryan Welcher</a>、<a href=\"https://profiles.wordpress.org/sagarjadhav\">Sagar Jadhav</a>、<a href=\"https://profiles.wordpress.org/salcode\">Sal Ferrarello</a>、<a href=\"https://profiles.wordpress.org/salvoaranzulla\">salvoaranzulla</a>、<a href=\"https://profiles.wordpress.org/samhotchkiss\">Sam Hotchkiss</a>、<a href=\"https://profiles.wordpress.org/rosso99\">Sara Rosso</a>、<a href=\"https://profiles.wordpress.org/sarciszewski\">Scott Arciszewski</a>、<a href=\"https://profiles.wordpress.org/sc0ttkclark\">Scott Kingsley Clark</a>、<a href=\"https://profiles.wordpress.org/coffee2code\">Scott Reilly</a>、<a href=\"https://profiles.wordpress.org/wonderboymusic\">Scott Taylor</a>、<a href=\"https://profiles.wordpress.org/scottbrownconsulting\">scottbrownconsulting</a>、<a href=\"https://profiles.wordpress.org/scribu\">scribu</a>、<a href=\"https://profiles.wordpress.org/sebastianpisula\">Sebastian Pisula</a>、<a href=\"https://profiles.wordpress.org/sergejmueller\">Sergej Müller</a>、<a href=\"https://profiles.wordpress.org/sergeybiryukov\">Sergey Biryukov</a>、<a href=\"https://profiles.wordpress.org/shamess\">Shane</a>、<a href=\"https://profiles.wordpress.org/shinichin\">Shinichi Nishikawa</a>、<a href=\"https://profiles.wordpress.org/sidati\">sidati</a>、<a href=\"https://profiles.wordpress.org/siobhan\">Siobhan</a>、<a href=\"https://profiles.wordpress.org/aargh-a-knot\">sky</a>、<a href=\"https://profiles.wordpress.org/slushman\">slushman</a>、<a href=\"https://profiles.wordpress.org/smerriman\">smerriman</a>、<a href=\"https://profiles.wordpress.org/stephanethomas\">stephanethomas</a>、<a href=\"https://profiles.wordpress.org/netweb\">Stephen Edgar</a>、<a href=\"https://profiles.wordpress.org/stephenharris\">Stephen Harris</a>、<a href=\"https://profiles.wordpress.org/stevegrunwell\">Steve Grunwell</a>、<a href=\"https://profiles.wordpress.org/stevenkword\">Steven Word</a>、<a href=\"https://profiles.wordpress.org/charlestonsw\">Store Locator Plus</a>、<a href=\"https://profiles.wordpress.org/subharanjan\">Subharanjan</a>、<a href=\"https://profiles.wordpress.org/sudar\">Sudar Muthu</a>、<a href=\"https://profiles.wordpress.org/5um17\">Sumit Singh</a>、<a href=\"https://profiles.wordpress.org/tacoverdo\">Taco Verdonschot</a>、<a href=\"https://profiles.wordpress.org/tahteche\">tahteche</a>、<a href=\"https://profiles.wordpress.org/iamtakashi\">Takashi Irie</a>、<a href=\"https://profiles.wordpress.org/takayukister\">Takayuki Miyoshi</a>、<a href=\"https://profiles.wordpress.org/karmatosed\">Tammie Lister</a>、<a href=\"https://profiles.wordpress.org/tharsheblows\">tharsheblows</a>、<a href=\"https://profiles.wordpress.org/themiked\">theMikeD</a>、<a href=\"https://profiles.wordpress.org/thomaswm\">thomaswm</a>、<a href=\"https://profiles.wordpress.org/timothyblynjacobs\">Timothy Jacobs</a>、<a href=\"https://profiles.wordpress.org/timplunkett\">timplunkett</a>、<a href=\"https://profiles.wordpress.org/tmuikku\">tmuikku</a>、<a href=\"https://profiles.wordpress.org/skithund\">Toni Viemerö</a>、<a href=\"https://profiles.wordpress.org/toro_unit\">Toro_Unit (Hiroshi Urabe)</a>、<a href=\"https://profiles.wordpress.org/liljimmi\">Tracy Levesque</a>、<a href=\"https://profiles.wordpress.org/rilwis\">Tran Ngoc Tuan Anh</a>、<a href=\"https://profiles.wordpress.org/wpsmith\">Travis Smith</a>、<a href=\"https://profiles.wordpress.org/tywayne\">Ty Carlson</a>、<a href=\"https://profiles.wordpress.org/grapplerulrich\">Ulrich</a>、<a href=\"https://profiles.wordpress.org/utkarshpatel\">Utkarsh</a>、<a href=\"https://profiles.wordpress.org/vhomenko\">vhomenko</a>、<a href=\"https://profiles.wordpress.org/virgodesign\">virgodesign</a>、<a href=\"https://profiles.wordpress.org/vladolaru\">vlad.olaru</a>、<a href=\"https://profiles.wordpress.org/voldemortensen\">voldemortensen</a>、<a href=\"https://profiles.wordpress.org/vtieu\">vtieu</a>、<a href=\"https://profiles.wordpress.org/webaware\">webaware</a>、<a href=\"https://profiles.wordpress.org/wesleye\">Wesley Elfring</a>、<a href=\"https://profiles.wordpress.org/westonruter\">Weston Ruter</a>、<a href=\"https://profiles.wordpress.org/wisdmlabs\">WisdmLabs</a>、<a href=\"https://profiles.wordpress.org/wpdelighter\">WP Delighter</a>、<a href=\"https://profiles.wordpress.org/xavortm\">xavortm</a>、<a href=\"https://profiles.wordpress.org/yetanotherdaniel\">yetAnotherDaniel</a>和<a href=\"https://profiles.wordpress.org/zinigor\">zinigor</a>。</p>\n<p>特别感谢<a href=\"http://siobhanmckeown.com/\">Siobhan McKeown</a>制作发布视频，及<a href=\"https://jacklenox.com/\">Jack Lenox</a>的配音。</p>\n<p>最后，让我们感谢为本次发布提供了翻译的贡献者。WordPress 4.5被翻译成了44种语言，这次的发布视频也被翻译成了32种语言！</p>\n<p>如果您想帮忙，请查阅<a href=\"https://make.wordpress.org/\">Make WordPress</a>和我们的<a href=\"https://make.wordpress.org/core/\">核心开发博客</a>。感谢您选择WordPress，我们4.6见！</p>\n</div>\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:36:\"http://wellformedweb.org/CommentAPI/\";a:1:{s:10:\"commentRss\";a:1:{i:0;a:5:{s:4:\"data\";s:49:\"https://cn.wordpress.org/2016/04/17/coleman/feed/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:38:\"http://purl.org/rss/1.0/modules/slash/\";a:1:{s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:1:\"5\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:5;a:6:{s:4:\"data\";s:61:\"\n		\n		\n				\n				\n		\n				\n\n		\n				\n								\n							\n		\n							\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:5:{s:0:\"\";a:7:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:27:\"WordPress 4.4“Clifford”\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:45:\"https://cn.wordpress.org/2015/12/13/clifford/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:54:\"https://cn.wordpress.org/2015/12/13/clifford/#comments\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Sat, 12 Dec 2015 22:52:22 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:1:{i:0;a:5:{s:4:\"data\";s:8:\"Releases\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:32:\"https://cn.wordpress.org/?p=1011\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:49:\"WordPress 4.4简体中文版现已开放下载。\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:8:\"Jimmy Xu\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:37891:\"<div style=\"width: 692px\">\n<p>WordPress 4.4简体中文版现已<a href=\"https://cn.wordpress.org/releases/\">开放下载</a>，或在您的WordPress仪表盘中升级。我们将此版本命名为“Clifford”，以纪念爵士小号手<a href=\"https://en.wikipedia.org/wiki/Clifford_Brown\">克利福德·布朗</a>。4.4让您的网站更具连接性且反应敏捷。Clifford也带来了全新的默认主题，二〇一六。</p>\n<hr />\n<h2>介绍二〇一六</h2>\n<p><img class=\"aligncenter size-full wp-image-3994\" src=\"https://wordpress.org/news/files/2015/12/ipad-white-desktop-2x.png\" alt=\"A screenshot of Twenty Sixteen set in an iPad frame\" width=\"632\" height=\"428\" /></p>\n<p>我们最新的默认主题，二〇一六，是一个具现代感又不失经典博客设计风格的主题。</p>\n<p>二〇一六在任何设备上都看起来很棒。一个流动式网格设计、灵活页首，搭配各式趣味的配色，让你的内容大放异彩。</p>\n<hr />\n<h2>自适应图片</h2>\n<p><img class=\"aligncenter wp-image-3995 size-full\" src=\"https://wordpress.org/news/files/2015/12/responsive-devices-ipad-2x.png\" alt=\"An image of a laptop, iPad, Android phone, and iPhone containing the same image displayed at multiple sizes to demonstrate responsive image features.\" width=\"632\" height=\"290\" /></p>\n<p>WordPress现在以更聪明的方式显示适合任何设备的图片尺寸，确保每次皆完美呈现。您甚至不需要修改您的主题，</p>\n<hr />\n<h2>嵌入一切</h2>\n<blockquote class=\"wp-embedded-content\" data-secret=\"90z26jVNGy\"><p><a href=\"https://make.wordpress.org/core/2015/10/28/new-embeds-feature-in-wordpress-4-4/\">New Embeds Feature in WordPress 4.4</a></p></blockquote>\n<p><iframe class=\"wp-embedded-content\" sandbox=\"allow-scripts\" security=\"restricted\" src=\"https://make.wordpress.org/core/2015/10/28/new-embeds-feature-in-wordpress-4-4/embed/#?secret=90z26jVNGy\" data-secret=\"90z26jVNGy\" width=\"600\" height=\"338\" title=\"&#8220;New Embeds Feature in WordPress 4.4&#8221; &#8212; Make WordPress Core\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\"></iframe></p>\n<p>现在您可以将文章嵌入到其他WordPress网站。只要将文章URL贴入编辑器，即可看到即时嵌入预览，完整的标题、摘要及特色图片（如果您有设定），甚至会包含您的网站图标以及评论与分享链接。</p>\n<p>除了文章嵌入外，WordPress 4.4还加入五个新的oEmbed提供者：Cloudup、Reddit留言、ReverbNation、Speaker Deck及VideoPress。</p>\n<hr />\n<h2>引擎盖下</h2>\n<p><img class=\"aligncenter size-full wp-image-4003\" src=\"https://wordpress.org/news/files/2015/12/banner-1544x500.jpg\" alt=\"The WordPress REST API logo\" width=\"1544\" height=\"500\" /></p>\n<h3>REST API基础设施</h3>\n<p>REST API基础设施已整合于WordPress的核心中，将开发模式带入一个崭新的纪元。REST API为开发者提供在WordPress之上建设并扩展RESTful API的道路。</p>\n<p>基础设施是REST API多阶段推出的第一部分，而将会在未来的发布中包含核心节点。要了解更多关于核心节点或是扩展REST API的信息，请查阅官方<a href=\"https://wordpress.org/plugins/rest-api/\">WordPress REST API</a>扩展。</p>\n<h3>项目元数据</h3>\n<p>项目现在像文章一样支持元数据。请参阅<a href=\"https://developer.wordpress.org/reference/functions/add_term_meta\"><code>add_term_meta()</code></a>、<a href=\"https://developer.wordpress.org/reference/functions/get_term_meta\"><code>get_term_meta()</code></a>和<a href=\"https://developer.wordpress.org/reference/functions/update_term_meta\"><code>update_term_meta()</code></a>来获得更多信息。</p>\n<h3>评论查询改善</h3>\n<p>评论查询现在有缓存机制来改善性能。全新<code>WP_Comment_Query</code>参数能更轻松地调用、访问评论。</p>\n<h3>项目、评论以及网络对象</h3>\n<p>新的<code>WP_Term</code>、<code>WP_Comment</code>和<code>WP_Network</code>对象让与项目、评论和网络的交互变得更直观、更可预测。</p>\n<hr />\n<h2>开发团队</h2>\n<p>此次发布由<a href=\"http://scotty-t.com/\">Scott Taylor</a>领头，并得到了以下个人的帮助。这次发布包含了471人的贡献（创下新高！）。在您喜欢的音乐服务中听听克利福德·布朗，并看看下面这些个人资料吧：</p>\n<p><a href=\"https://profiles.wordpress.org/mercime\">@mercime</a>、<a href=\"https://profiles.wordpress.org/_smartik_\">_smartik_</a>、<a href=\"https://profiles.wordpress.org/a5hleyrich\">A5hleyRich</a>、<a href=\"https://profiles.wordpress.org/aaroncampbell\">Aaron D. Campbell</a>、<a href=\"https://profiles.wordpress.org/jorbin\">Aaron Jorbin</a>、<a href=\"https://profiles.wordpress.org/aaronrutley\">Aaron Rutley</a>、<a href=\"https://profiles.wordpress.org/kawauso\">Adam Harley (Kawauso)</a>、<a href=\"https://profiles.wordpress.org/adamsilverstein\">Adam Silverstein</a>、<a href=\"https://profiles.wordpress.org/adamholisky\">adamholisky</a>、<a href=\"https://profiles.wordpress.org/aduth\">aduth</a>、<a href=\"https://profiles.wordpress.org/mrahmadawais\">Ahmad Awais</a>、<a href=\"https://profiles.wordpress.org/akibjorklund\">Aki Bjorklund</a>、<a href=\"https://profiles.wordpress.org/albertoct\">AlbertoCT</a>、<a href=\"https://profiles.wordpress.org/akirk\">Alex Kirk</a>、<a href=\"https://profiles.wordpress.org/viper007bond\">Alex Mills (Viper007Bond)</a>、<a href=\"https://profiles.wordpress.org/tellyworth\">Alex Shiels</a>、<a href=\"https://profiles.wordpress.org/gounder\">Alexander Gounder</a>、<a href=\"https://profiles.wordpress.org/alireza1375\">alireza1375</a>、<a href=\"https://profiles.wordpress.org/shedonist\">Amanda Giles</a>、<a href=\"https://profiles.wordpress.org/amereservant\">amereservant</a>、<a href=\"https://profiles.wordpress.org/sabreuse\">Amy Hendrix (sabreuse)</a>、<a href=\"https://profiles.wordpress.org/afercia\">Andrea Fercia</a>、<a href=\"https://profiles.wordpress.org/nacin\">Andrew Nacin</a>、<a href=\"https://profiles.wordpress.org/norcross\">Andrew Norcross</a>、<a href=\"https://profiles.wordpress.org/azaozz\">Andrew Ozz</a>、<a href=\"https://profiles.wordpress.org/afragen\">Andy Fragen</a>、<a href=\"https://profiles.wordpress.org/amandato\">Angelo Mandato</a>、<a href=\"https://profiles.wordpress.org/ankitgadertcampcom\">Ankit Gade</a>、<a href=\"https://profiles.wordpress.org/ankit-k-gupta\">Ankit K Gupta</a>、<a href=\"https://profiles.wordpress.org/antpb\">Anthony Burchell</a>、<a href=\"https://profiles.wordpress.org/apkoponen\">ap.koponen</a>、<a href=\"https://profiles.wordpress.org/apokalyptik\">apokalyptik</a>、<a href=\"https://profiles.wordpress.org/athsear\">Athsear&#8217;J.S.</a>、<a href=\"https://profiles.wordpress.org/atomicjack\">atomicjack</a>、<a href=\"https://profiles.wordpress.org/austinginder\">Austin Ginder</a>、<a href=\"https://profiles.wordpress.org/filosofo\">Austin Matzko</a>、<a href=\"https://profiles.wordpress.org/barryceelen\">Barry Ceelen</a>、<a href=\"https://profiles.wordpress.org/barrykooij\">Barry Kooij</a>、<a href=\"https://profiles.wordpress.org/bcworkz\">bcworkz</a>、<a href=\"https://profiles.wordpress.org/bdn3504\">BdN3504</a>、<a href=\"https://profiles.wordpress.org/pixolin\">Bego Mario Garde</a>、<a href=\"https://profiles.wordpress.org/benjmay\">Ben May</a>、<a href=\"https://profiles.wordpress.org/benjaminpick\">Benjamin Pick</a>、<a href=\"https://profiles.wordpress.org/neoxx\">Bernhard Riedl</a>、<a href=\"https://profiles.wordpress.org/bigdawggi\">bigdawggi</a>、<a href=\"https://profiles.wordpress.org/bilalcoder\">bilalcoder</a>、<a href=\"https://profiles.wordpress.org/binarykitten\">BinaryKitten</a>、<a href=\"https://profiles.wordpress.org/birgire\">Birgir Erlendsson (birgire)</a>、<a href=\"https://profiles.wordpress.org/bjornjohansen\">Bjorn Johansen</a>、<a href=\"https://profiles.wordpress.org/bobbingwide\">bobbingwide</a>、<a href=\"https://profiles.wordpress.org/gitlost\">bonger</a>、<a href=\"https://profiles.wordpress.org/boonebgorges\">Boone B. Gorges</a>、<a href=\"https://profiles.wordpress.org/bradt\">Brad Touesnard</a>、<a href=\"https://profiles.wordpress.org/bradparbs\">bradparbs</a>、<a href=\"https://profiles.wordpress.org/bradyvercher\">Brady Vercher</a>、<a href=\"https://profiles.wordpress.org/kraftbj\">Brandon Kraft</a>、<a href=\"https://profiles.wordpress.org/bravokeyl\">bravokeyl</a>、<a href=\"https://profiles.wordpress.org/brentvr\">brentvr</a>、<a href=\"https://profiles.wordpress.org/brettz95\">brettz95</a>、<a href=\"https://profiles.wordpress.org/mckilem\">Bruno Kos</a>、<a href=\"https://profiles.wordpress.org/crazycoolcam\">Cam</a>、<a href=\"https://profiles.wordpress.org/camikaos\">Cami Kaos</a>、<a href=\"https://profiles.wordpress.org/carolinegeven\">carolinegeven</a>、<a href=\"https://profiles.wordpress.org/misterbisson\">Casey Bisson</a>、<a href=\"https://profiles.wordpress.org/cdog\">Catalin Dogaru</a>、<a href=\"https://profiles.wordpress.org/ch1902\">ch1902</a>、<a href=\"https://profiles.wordpress.org/chacha102\">chacha102</a>、<a href=\"https://profiles.wordpress.org/nhuja\">Chandra M</a>、<a href=\"https://profiles.wordpress.org/chasewiseman\">Chase Wiseman</a>、<a href=\"https://profiles.wordpress.org/chiara_09\">Chiara Dossena</a>、<a href=\"https://profiles.wordpress.org/chipbennett\">Chip Bennett</a>、<a href=\"https://profiles.wordpress.org/chiragswadia\">Chirag Swadia</a>、<a href=\"https://profiles.wordpress.org/chriscct7\">Chris Christoff</a>、<a href=\"https://profiles.wordpress.org/chrismkindred\">Chris Kindred</a>、<a href=\"https://profiles.wordpress.org/cklosows\">Chris Klosowski</a>、<a href=\"https://profiles.wordpress.org/chriscoyier\">chriscoyier</a>、<a href=\"https://profiles.wordpress.org/chrisdc1\">Chrisdc1</a>、<a href=\"https://profiles.wordpress.org/lovememore\">christianoliff</a>、<a href=\"https://profiles.wordpress.org/christophherr\">Christoph Herr</a>、<a href=\"https://profiles.wordpress.org/cfinke\">Christopher Finke</a>、<a href=\"https://profiles.wordpress.org/chrisvendiadvertisingcom\">cjhaas</a>、<a href=\"https://profiles.wordpress.org/codeelite\">codeelite</a>、<a href=\"https://profiles.wordpress.org/coenjacobs\">Coen Jacobs</a>、<a href=\"https://profiles.wordpress.org/compute\">Compute</a>、<a href=\"https://profiles.wordpress.org/couturefreak\">Courtney Ivey</a>、<a href=\"https://profiles.wordpress.org/craig-ralston\">Craig Ralston</a>、<a href=\"https://profiles.wordpress.org/cgrymala\">Curtiss Grymala</a>、<a href=\"https://profiles.wordpress.org/extendwings\">Daisuke Takahashi</a>、<a href=\"https://profiles.wordpress.org/dboulet\">Dan Boulet</a>、<a href=\"https://profiles.wordpress.org/danielbachhuber\">Daniel Bachhuber</a>、<a href=\"https://profiles.wordpress.org/daniel-koskinen\">Daniel Koskinen</a>、<a href=\"https://profiles.wordpress.org/dmenard\">Daniel Menard</a>、<a href=\"https://profiles.wordpress.org/mte90\">Daniele Scasciafratte</a>、<a href=\"https://profiles.wordpress.org/daniellandau\">daniellandau</a>、<a href=\"https://profiles.wordpress.org/daniloercoli\">daniloercoli</a>、<a href=\"https://profiles.wordpress.org/dannydehaan\">Danny de Haan</a>、<a href=\"https://profiles.wordpress.org/nerrad\">Darren Ethier (nerrad)</a>、<a href=\"https://profiles.wordpress.org/dllh\">Daryl L. L. Houston (dllh)</a>、<a href=\"https://profiles.wordpress.org/dattaparad\">Datta Parad</a>、<a href=\"https://profiles.wordpress.org/dmchale\">Dave McHale</a>、<a href=\"https://profiles.wordpress.org/davidakennedy\">David A. Kennedy</a>、<a href=\"https://profiles.wordpress.org/davidanderson\">David Anderson</a>、<a href=\"https://profiles.wordpress.org/dlh\">David Herrera</a>、<a href=\"https://profiles.wordpress.org/dshanske\">David Shanske</a>、<a href=\"https://profiles.wordpress.org/davidbinda\">david.binda</a>、<a href=\"https://profiles.wordpress.org/debaat\">DeBAAT</a>、<a href=\"https://profiles.wordpress.org/denis-de-bernardy\">Denis de Bernardy</a>、<a href=\"https://profiles.wordpress.org/realloc\">Dennis Ploetner</a>、<a href=\"https://profiles.wordpress.org/valendesigns\">Derek Herman</a>、<a href=\"https://profiles.wordpress.org/downstairsdev\">Devin Price</a>、<a href=\"https://profiles.wordpress.org/dezzy\">Dezzy</a>、<a href=\"https://profiles.wordpress.org/dd32\">Dion Hulse</a>、<a href=\"https://profiles.wordpress.org/dipalidhole27gmailcom\">Dipali Dhole</a>、<a href=\"https://profiles.wordpress.org/dipeshkakadiya\">dipesh.kakadiya</a>、<a href=\"https://profiles.wordpress.org/dbru\">Dominik Bruderer</a>、<a href=\"https://profiles.wordpress.org/ocean90\">Dominik Schilling</a>、<a href=\"https://profiles.wordpress.org/drebbitsweb\">Dreb Bits</a>、<a href=\"https://profiles.wordpress.org/drewapicture\">Drew Jaynes</a>、<a href=\"https://profiles.wordpress.org/dustinbolton\">dustinbolton</a>、<a href=\"https://profiles.wordpress.org/kucrut\">Dzikri Aziz</a>、<a href=\"https://profiles.wordpress.org/edirect24\">edirect24</a>、<a href=\"https://profiles.wordpress.org/oso96_2000\">Eduardo Reveles</a>、<a href=\"https://profiles.wordpress.org/eduardozulian\">Eduardo Zulian</a>、<a href=\"https://profiles.wordpress.org/cais\">Edward Caissie</a>、<a href=\"https://profiles.wordpress.org/egill\">Egill R. Erlendsson</a>、<a href=\"https://profiles.wordpress.org/egower\">egower</a>、<a href=\"https://profiles.wordpress.org/iehsanir\">Ehsaan</a>、<a href=\"https://profiles.wordpress.org/ehtis\">ehtis</a>、<a href=\"https://profiles.wordpress.org/iseulde\">Ella Iseulde Van Dorpe</a>、<a href=\"https://profiles.wordpress.org/ellieroepken\">Ellie Strejlau</a>、<a href=\"https://profiles.wordpress.org/elliott-stocks\">Elliott Stocks</a>、<a href=\"https://profiles.wordpress.org/elusiveunit\">elusiveunit</a>、<a href=\"https://profiles.wordpress.org/enshrined\">enshrined</a>、<a href=\"https://profiles.wordpress.org/ericlewis\">Eric Andrew Lewis</a>、<a href=\"https://profiles.wordpress.org/ebinnion\">Eric Binnion</a>、<a href=\"https://profiles.wordpress.org/ericdaams\">Eric Daams</a>、<a href=\"https://profiles.wordpress.org/ericmann\">Eric Mann</a>、<a href=\"https://profiles.wordpress.org/ericjuden\">ericjuden</a>、<a href=\"https://profiles.wordpress.org/eherman24\">Evan Herman</a>、<a href=\"https://profiles.wordpress.org/f4rkie\">F4rkie</a>、<a href=\"https://profiles.wordpress.org/flixos90\">Felix Arntz</a>、<a href=\"https://profiles.wordpress.org/fsylum\">Firdaus Zahari</a>、<a href=\"https://profiles.wordpress.org/fonglh\">fonglh</a>、<a href=\"https://profiles.wordpress.org/francoisb\">francoisb</a>、<a href=\"https://profiles.wordpress.org/frank-klein\">Frank Klein</a>、<a href=\"https://profiles.wordpress.org/fjarrett\">Frankie Jarrett</a>、<a href=\"https://profiles.wordpress.org/frozzare\">Fredrik Forsmo</a>、<a href=\"https://profiles.wordpress.org/gaelan\">Gaelan Lloyd</a>、<a href=\"https://profiles.wordpress.org/gagan0123\">Gagan Deep Singh</a>、<a href=\"https://profiles.wordpress.org/garyc40\">Gary Cao</a>、<a href=\"https://profiles.wordpress.org/garyj\">Gary Jones</a>、<a href=\"https://profiles.wordpress.org/pento\">Gary Pendergast</a>、<a href=\"https://profiles.wordpress.org/garza\">garza</a>、<a href=\"https://profiles.wordpress.org/grvrulz\">Gaurav Pareek</a>、<a href=\"https://profiles.wordpress.org/gautamgupta\">Gautam Gupta</a>、<a href=\"https://profiles.wordpress.org/geminorum\">geminorum</a>、<a href=\"https://profiles.wordpress.org/kloon\">Gerhard Potgieter</a>、<a href=\"https://profiles.wordpress.org/gezamiklo\">geza.miklo</a>、<a href=\"https://profiles.wordpress.org/gizburdt\">Gijs Jorissen</a>、<a href=\"https://profiles.wordpress.org/garusky\">Giuseppe Mamone</a>、<a href=\"https://profiles.wordpress.org/jubstuff\">Giustino Borzacchiello</a>、<a href=\"https://profiles.wordpress.org/gnaka08\">gnaka08</a>、<a href=\"https://profiles.wordpress.org/gradyetc\">gradyetc</a>、<a href=\"https://profiles.wordpress.org/gregrickaby\">Greg Rickaby</a>、<a href=\"https://profiles.wordpress.org/tivnet\">Gregory Karpinsky (@tivnet)</a>、<a href=\"https://profiles.wordpress.org/bordoni\">Gustavo Bordoni</a>、<a href=\"https://profiles.wordpress.org/webord\">Gustavo Bordoni</a>、<a href=\"https://profiles.wordpress.org/gwinhlopez\">gwinh.lopez</a>、<a href=\"https://profiles.wordpress.org/hakre\">hakre</a>、<a href=\"https://profiles.wordpress.org/hauvong\">hauvong</a>、<a href=\"https://profiles.wordpress.org/helen\">Helen Hou-Sandí</a>、<a href=\"https://profiles.wordpress.org/hnle\">Hinaloe</a>、<a href=\"https://profiles.wordpress.org/hrishiv90\">Hrishikesh Vaipurkar</a>、<a href=\"https://profiles.wordpress.org/hlashbrooke\">Hugh Lashbrooke</a>、<a href=\"https://profiles.wordpress.org/hugobaeta\">Hugo Baeta</a>、<a href=\"https://profiles.wordpress.org/polevaultweb\">Iain Poulson</a>、<a href=\"https://profiles.wordpress.org/iandunn\">Ian Dunn</a>、<a href=\"https://profiles.wordpress.org/iandstewart\">Ian Stewart</a>、<a href=\"https://profiles.wordpress.org/icetee\">icetee</a>、<a href=\"https://profiles.wordpress.org/igmoweb\">Ignacio Cruz Moreno</a>、<a href=\"https://profiles.wordpress.org/headonfire\">Ihor Vorotnov</a>、<a href=\"https://profiles.wordpress.org/imath\">imath</a>、<a href=\"https://profiles.wordpress.org/ippetkov\">ippetkov</a>、<a href=\"https://profiles.wordpress.org/jdgrimes\">J.D. Grimes</a>、<a href=\"https://profiles.wordpress.org/jakubtyrcha\">jakub.tyrcha</a>、<a href=\"https://profiles.wordpress.org/macmanx\">James Huff</a>、<a href=\"https://profiles.wordpress.org/janhenckens\">janhenckens</a>、<a href=\"https://profiles.wordpress.org/japh\">Japh</a>、<a href=\"https://profiles.wordpress.org/jaspermdegroot\">Jasper de Groot</a>、<a href=\"https://profiles.wordpress.org/jazbek\">jazbek</a>、<a href=\"https://profiles.wordpress.org/jcroucher\">jcroucher</a>、<a href=\"https://profiles.wordpress.org/jfarthing84\">Jeff Farthing</a>、<a href=\"https://profiles.wordpress.org/jeffstieler\">Jeff Stieler</a>、<a href=\"https://profiles.wordpress.org/jeffmatson\">JeffMatson</a>、<a href=\"https://profiles.wordpress.org/cheffheid\">Jeffrey de Wit</a>、<a href=\"https://profiles.wordpress.org/jeichorn\">jeichorn</a>、<a href=\"https://profiles.wordpress.org/jeremyfelt\">Jeremy Felt</a>、<a href=\"https://profiles.wordpress.org/jpry\">Jeremy Pry</a>、<a href=\"https://profiles.wordpress.org/slimndap\">Jeroen Schmit</a>、<a href=\"https://profiles.wordpress.org/jesin\">Jesin A</a>、<a href=\"https://profiles.wordpress.org/engelen\">Jesper van Engelen</a>、<a href=\"https://profiles.wordpress.org/jim912\">jim912</a>、<a href=\"https://profiles.wordpress.org/jliman\">jliman</a>、<a href=\"https://profiles.wordpress.org/jmayhak\">jmayhak</a>、<a href=\"https://profiles.wordpress.org/jnylen0\">jnylen0</a>、<a href=\"https://profiles.wordpress.org/jobst\">Jobst Schmalenbach</a>、<a href=\"https://profiles.wordpress.org/joedolson\">Joe Dolson</a>、<a href=\"https://profiles.wordpress.org/joehoyle\">Joe Hoyle</a>、<a href=\"https://profiles.wordpress.org/joemcgill\">Joe McGill</a>、<a href=\"https://profiles.wordpress.org/joehills\">joehills</a>、<a href=\"https://profiles.wordpress.org/johnbillion\">John Blackbourn</a>、<a href=\"https://profiles.wordpress.org/johnjamesjacoby\">John James Jacoby</a>、<a href=\"https://profiles.wordpress.org/johnpbloch\">John P. Bloch</a>、<a href=\"https://profiles.wordpress.org/mindctrl\">John Parris</a>、<a href=\"https://profiles.wordpress.org/duck_\">Jon Cave</a>、<a href=\"https://profiles.wordpress.org/jonathanbardo\">Jonathan Bardo</a>、<a href=\"https://profiles.wordpress.org/desrosj\">Jonathan Desrosiers</a>、<a href=\"https://profiles.wordpress.org/joostdevalk\">Joost de Valk</a>、<a href=\"https://profiles.wordpress.org/koke\">Jorge Bernal</a>、<a href=\"https://profiles.wordpress.org/betzster\">Josh Betz</a>、<a href=\"https://profiles.wordpress.org/jjeaton\">Josh Eaton</a>、<a href=\"https://profiles.wordpress.org/shelob9\">Josh Pollock</a>、<a href=\"https://profiles.wordpress.org/jrf\">jrf</a>、<a href=\"https://profiles.wordpress.org/juhise\">Juhi Saxena</a>、<a href=\"https://profiles.wordpress.org/juliobox\">Julio Potier</a>、<a href=\"https://profiles.wordpress.org/justdaiv\">justdaiv</a>、<a href=\"https://profiles.wordpress.org/justinsainton\">Justin Sainton</a>、<a href=\"https://profiles.wordpress.org/jshreve\">Justin Shreve</a>、<a href=\"https://profiles.wordpress.org/jtsternberg\">Justin Sternberg</a>、<a href=\"https://profiles.wordpress.org/greenshady\">Justin Tadlock</a>、<a href=\"https://profiles.wordpress.org/kadamwhite\">K.Adam White</a>、<a href=\"https://profiles.wordpress.org/trepmal\">Kailey (trepmal)</a>、<a href=\"https://profiles.wordpress.org/kalenjohnson\">KalenJohnson</a>、<a href=\"https://profiles.wordpress.org/karinedo\">karinedo</a>、<a href=\"https://profiles.wordpress.org/karpstrucking\">karpstrucking</a>、<a href=\"https://profiles.wordpress.org/ryelle\">Kelly Dwan</a>、<a href=\"https://profiles.wordpress.org/kevinb\">Kevin Behrens</a>、<a href=\"https://profiles.wordpress.org/kevinlangleyjr\">Kevin Langley</a>、<a href=\"https://profiles.wordpress.org/kevinatelement\">kevinatelement</a>、<a href=\"https://profiles.wordpress.org/kitchin\">kitchin</a>、<a href=\"https://profiles.wordpress.org/ixkaito\">Kite</a>、<a href=\"https://profiles.wordpress.org/kovshenin\">Konstantin Kovshenin</a>、<a href=\"https://profiles.wordpress.org/obenland\">Konstantin Obenland</a>、<a href=\"https://profiles.wordpress.org/kraftner\">kraftner</a>、<a href=\"https://profiles.wordpress.org/drozdz\">Krzysiek Drozdz</a>、<a href=\"https://profiles.wordpress.org/kurtpayne\">Kurt Payne</a>、<a href=\"https://profiles.wordpress.org/laceous\">laceous</a>、<a href=\"https://profiles.wordpress.org/lancewillett\">Lance Willett</a>、<a href=\"https://profiles.wordpress.org/offereins\">Laurens Offereins</a>、<a href=\"https://profiles.wordpress.org/lcherpit\">lcherpit</a>、<a href=\"https://profiles.wordpress.org/ldinclaux\">ldinclaux</a>、<a href=\"https://profiles.wordpress.org/leewillis77\">Lee Willis</a>、<a href=\"https://profiles.wordpress.org/leemon\">leemon</a>、<a href=\"https://profiles.wordpress.org/lessbloat\">lessbloat</a>、<a href=\"https://profiles.wordpress.org/linuxologos\">linuxologos</a>、<a href=\"https://profiles.wordpress.org/spmlucas\">Lucas Karpiuk</a>、<a href=\"https://profiles.wordpress.org/lucatume\">lucatume</a>、<a href=\"https://profiles.wordpress.org/luciole135\">luciole135</a>、<a href=\"https://profiles.wordpress.org/lucymtc\">lucymtc</a>、<a href=\"https://profiles.wordpress.org/lukecarbis\">Luke Carbis</a>、<a href=\"https://profiles.wordpress.org/madalinungureanu\">madalin.ungureanu</a>、<a href=\"https://profiles.wordpress.org/mako09\">Mako</a>、<a href=\"https://profiles.wordpress.org/manolis09\">manolis09</a>、<a href=\"https://profiles.wordpress.org/iworks\">Marcin Pietrzak</a>、<a href=\"https://profiles.wordpress.org/tyxla\">Marin Atanasov</a>、<a href=\"https://profiles.wordpress.org/nofearinc\">Mario Peshev</a>、<a href=\"https://profiles.wordpress.org/clorith\">Marius (Clorith)</a>、<a href=\"https://profiles.wordpress.org/markjaquith\">Mark Jaquith</a>、<a href=\"https://profiles.wordpress.org/markoheijnen\">Marko Heijnen</a>、<a href=\"https://profiles.wordpress.org/mechter\">Markus</a>、<a href=\"https://profiles.wordpress.org/wilto\">Mat Marquis</a>、<a href=\"https://profiles.wordpress.org/matheusfd\">Matheus Martins</a>、<a href=\"https://profiles.wordpress.org/mattbagwell\">Matt Bagwell</a>、<a href=\"https://profiles.wordpress.org/mgibbs189\">Matt Gibbs</a>、<a href=\"https://profiles.wordpress.org/sivel\">Matt Martz</a>、<a href=\"https://profiles.wordpress.org/matt\">Matt Mullenweg</a>、<a href=\"https://profiles.wordpress.org/veraxus\">Matt van Andel</a>、<a href=\"https://profiles.wordpress.org/mboynes\">Matthew Boynes</a>、<a href=\"https://profiles.wordpress.org/mattheu\">Matthew Haines-Young</a>、<a href=\"https://profiles.wordpress.org/mazurstas\">mazurstas</a>、<a href=\"https://profiles.wordpress.org/mbrandys\">mbrandys</a>、<a href=\"https://profiles.wordpress.org/mdmcginn\">mdmcginn</a>、<a href=\"https://profiles.wordpress.org/mehulkaklotar\">mehulkaklotar</a>、<a href=\"https://profiles.wordpress.org/melchoyce\">Mel Choyce</a>、<a href=\"https://profiles.wordpress.org/meloniq\">meloniq</a>、<a href=\"https://profiles.wordpress.org/micahmills\">micahmills</a>、<a href=\"https://profiles.wordpress.org/micahwave\">micahwave</a>、<a href=\"https://profiles.wordpress.org/mdawaffe\">Michael Adams (mdawaffe)</a>、<a href=\"https://profiles.wordpress.org/michael-arestad\">Michael Arestad</a>、<a href=\"https://profiles.wordpress.org/cainm\">Michael Cain</a>、<a href=\"https://profiles.wordpress.org/michielhab\">Michiel Habraken</a>、<a href=\"https://profiles.wordpress.org/mcguive7\">Mickey Kay</a>、<a href=\"https://profiles.wordpress.org/mdgl\">Mike Glendinning</a>、<a href=\"https://profiles.wordpress.org/mikehansenme\">Mike Hansen</a>、<a href=\"https://profiles.wordpress.org/mikejolley\">Mike Jolley</a>、<a href=\"https://profiles.wordpress.org/thaicloud\">Mike Jordan</a>、<a href=\"https://profiles.wordpress.org/mikeschinkel\">Mike Schinkel</a>、<a href=\"https://profiles.wordpress.org/mikeschroder\">Mike Schroder</a>、<a href=\"https://profiles.wordpress.org/dimadin\">Milan Dinic</a>、<a href=\"https://profiles.wordpress.org/mismith227\">mismith227</a>、<a href=\"https://profiles.wordpress.org/misterunknown\">misterunknown</a>、<a href=\"https://profiles.wordpress.org/mitchoyoshitaka\">mitcho (Michael Yoshitaka Erlewine)</a>、<a href=\"https://profiles.wordpress.org/monika\">Monika</a>、<a href=\"https://profiles.wordpress.org/morganestes\">Morgan Estes</a>、<a href=\"https://profiles.wordpress.org/mor10\">Morten Rand-Hendriksen</a>、<a href=\"https://profiles.wordpress.org/mt8biz\">moto hachi ( mt8.biz )</a>、<a href=\"https://profiles.wordpress.org/usermrpapa\">Mr Papa</a>、<a href=\"https://profiles.wordpress.org/mrmist\">mrmist</a>、<a href=\"https://profiles.wordpress.org/mulvane\">mulvane</a>、<a href=\"https://profiles.wordpress.org/neoscrib\">neoscrib</a>、<a href=\"https://profiles.wordpress.org/next-season\">NExT-Season</a>、<a href=\"https://profiles.wordpress.org/niallkennedy\">Niall Kennedy</a>、<a href=\"https://profiles.wordpress.org/nicholas_io\">nicholas_io</a>、<a href=\"https://profiles.wordpress.org/nickciske\">Nick Ciske</a>、<a href=\"https://profiles.wordpress.org/celloexpressions\">Nick Halsey</a>、<a href=\"https://profiles.wordpress.org/nickduncan\">NickDuncan</a>、<a href=\"https://profiles.wordpress.org/rahe\">Nicolas Juen</a>、<a href=\"https://profiles.wordpress.org/nikeo\">nikeo</a>、<a href=\"https://profiles.wordpress.org/nikschavan\">Nikhil Chavan</a>、<a href=\"https://profiles.wordpress.org/niklasbr\">Niklas</a>、<a href=\"https://profiles.wordpress.org/nikolovtmw\">Nikola Nikolov</a>、<a href=\"https://profiles.wordpress.org/nbachiyski\">Nikolay Bachiyski</a>、<a href=\"https://profiles.wordpress.org/rabmalin\">Nilambar Sharma</a>、<a href=\"https://profiles.wordpress.org/originalexe\">OriginalEXE</a>、<a href=\"https://profiles.wordpress.org/pareshradadiya-1\">Paresh Radadiya</a>、<a href=\"https://profiles.wordpress.org/swissspidy\">Pascal Birchler</a>、<a href=\"https://profiles.wordpress.org/obrienlabs\">Pat O&#8217;Brien</a>、<a href=\"https://profiles.wordpress.org/pbearne\">Paul Bearne</a>、<a href=\"https://profiles.wordpress.org/pauldewouters\">Paul de Wouters</a>、<a href=\"https://profiles.wordpress.org/figureone\">Paul Ryan</a>、<a href=\"https://profiles.wordpress.org/paulwilde\">Paul Wilde</a>、<a href=\"https://profiles.wordpress.org/pavelevap\">pavelevap</a>、<a href=\"https://profiles.wordpress.org/sirbrillig\">Payton Swick</a>、<a href=\"https://profiles.wordpress.org/peterwilsoncc\">Peter Wilson</a>、<a href=\"https://profiles.wordpress.org/walbo\">Petter Walbo Johnsgard</a>、<a href=\"https://profiles.wordpress.org/petya\">Petya Raykovska</a>、<a href=\"https://profiles.wordpress.org/pfefferle\">pfefferle</a>、<a href=\"https://profiles.wordpress.org/philiparthurmoore\">Philip Arthur Moore</a>、<a href=\"https://profiles.wordpress.org/philiplakin\">PhilipLakin</a>、<a href=\"https://profiles.wordpress.org/corphi\">Philipp Cordes</a>、<a href=\"https://profiles.wordpress.org/delawski\">Piotr Delawski</a>、<a href=\"https://profiles.wordpress.org/psoluch\">Piotr Soluch</a>、<a href=\"https://profiles.wordpress.org/mordauk\">Pippin Williamson</a>、<a href=\"https://profiles.wordpress.org/prasad-nevase\">Prasad Nevase</a>、<a href=\"https://profiles.wordpress.org/nprasath002\">Prasath Nadarajah</a>、<a href=\"https://profiles.wordpress.org/pratikchaskar\">Pratik</a>、<a href=\"https://profiles.wordpress.org/rachelbaker\">Rachel Baker</a>、<a href=\"https://profiles.wordpress.org/rajnikmit\">rajnikmit</a>、<a href=\"https://profiles.wordpress.org/racase\">Rakesh Lawaju (Racase Lawaju)</a>、<a href=\"https://profiles.wordpress.org/ramay\">ramay</a>、<a href=\"https://profiles.wordpress.org/ramiy\">Rami Yushuvaev</a>、<a href=\"https://profiles.wordpress.org/raulillana\">Raul Illana</a>、<a href=\"https://profiles.wordpress.org/renoirb\">renoirb</a>、<a href=\"https://profiles.wordpress.org/rhubbardreverb\">rhubbardreverb</a>、<a href=\"https://profiles.wordpress.org/rhyswynne\">Rhys Wynne</a>、<a href=\"https://profiles.wordpress.org/rianrietveld\">Rian Rietveld</a>、<a href=\"https://profiles.wordpress.org/iamfriendly\">Richard Tape</a>、<a href=\"https://profiles.wordpress.org/miqrogroove\">Robert Chapin</a>、<a href=\"https://profiles.wordpress.org/rodrigosprimo\">Rodrigo Primo</a>、<a href=\"https://profiles.wordpress.org/rommelxcastro\">Rommel Castro</a>、<a href=\"https://profiles.wordpress.org/wpmuguru\">Ron Rennick</a>、<a href=\"https://profiles.wordpress.org/ronalfy\">Ronald Huereca</a>、<a href=\"https://profiles.wordpress.org/kingkool68\">Russell Heimlich</a>、<a href=\"https://profiles.wordpress.org/ruudjoyo\">Ruud Laan</a>、<a href=\"https://profiles.wordpress.org/ryankienstra\">Ryan Kienstra</a>、<a href=\"https://profiles.wordpress.org/markel\">Ryan Markel</a>、<a href=\"https://profiles.wordpress.org/rmccue\">Ryan McCue</a>、<a href=\"https://profiles.wordpress.org/welcher\">Ryan Welcher</a>、<a href=\"https://profiles.wordpress.org/zeo\">Safirul Alredha</a>、<a href=\"https://profiles.wordpress.org/salcode\">Sal Ferrarello</a>、<a href=\"https://profiles.wordpress.org/sammybeats\">Sam Brodie</a>、<a href=\"https://profiles.wordpress.org/sam2kb\">sam2kb</a>、<a href=\"https://profiles.wordpress.org/solarissmoke\">Samir Shah</a>、<a href=\"https://profiles.wordpress.org/samuelsidler\">Samuel Sidler</a>、<a href=\"https://profiles.wordpress.org/otto42\">Samuel Wood (Otto)</a>、<a href=\"https://profiles.wordpress.org/sanketparmar\">Sanket Parmar</a>、<a href=\"https://profiles.wordpress.org/rosso99\">Sara Rosso</a>、<a href=\"https://profiles.wordpress.org/sarciszewski\">sarciszewski</a>、<a href=\"https://profiles.wordpress.org/sgrant\">Scott Grant</a>、<a href=\"https://profiles.wordpress.org/sc0ttkclark\">Scott Kingsley Clark</a>、<a href=\"https://profiles.wordpress.org/coffee2code\">Scott Reilly</a>、<a href=\"https://profiles.wordpress.org/greglone\">ScreenfeedFr</a>、<a href=\"https://profiles.wordpress.org/scribu\">scribu</a>、<a href=\"https://profiles.wordpress.org/sdavis2702\">Sean Davis</a>、<a href=\"https://profiles.wordpress.org/seanchayes\">Sean Hayes</a>、<a href=\"https://profiles.wordpress.org/sebastianpisula\">Sebastian Pisula</a>、<a href=\"https://profiles.wordpress.org/sergeybiryukov\">Sergey Biryukov</a>、<a href=\"https://profiles.wordpress.org/serpent7776\">serpent7776</a>、<a href=\"https://profiles.wordpress.org/several27\">several27</a>、<a href=\"https://profiles.wordpress.org/shimakyohsuke\">shimakyohsuke</a>、<a href=\"https://profiles.wordpress.org/side777\">side777</a>、<a href=\"https://profiles.wordpress.org/pross\">Simon Prosser</a>、<a href=\"https://profiles.wordpress.org/simonwheatley\">Simon Wheatley</a>、<a href=\"https://profiles.wordpress.org/siobhan\">Siobhan</a>、<a href=\"https://profiles.wordpress.org/sirzooro\">sirzooro</a>、<a href=\"https://profiles.wordpress.org/sjmur\">sjmur</a>、<a href=\"https://profiles.wordpress.org/smerriman\">smerriman</a>、<a href=\"https://profiles.wordpress.org/spacedmonkey\">Spacedmonkey</a>、<a href=\"https://profiles.wordpress.org/khromov\">Stanislav Khromov</a>、<a href=\"https://profiles.wordpress.org/metodiew\">Stanko Metodiev</a>、<a href=\"https://profiles.wordpress.org/stebbiv\">stebbiv</a>、<a href=\"https://profiles.wordpress.org/miglosh\">Stefan Froehlich</a>、<a href=\"https://profiles.wordpress.org/sboisvert\">Stephane Boisvert</a>、<a href=\"https://profiles.wordpress.org/sillybean\">Stephanie Leary</a>、<a href=\"https://profiles.wordpress.org/netweb\">Stephen Edgar</a>、<a href=\"https://profiles.wordpress.org/stephenharris\">Stephen Harris</a>、<a href=\"https://profiles.wordpress.org/stevegrunwell\">Steve Grunwell</a>、<a href=\"https://profiles.wordpress.org/stevehenty\">stevehenty</a>、<a href=\"https://profiles.wordpress.org/stevehoneynz\">SteveHoneyNZ</a>、<a href=\"https://profiles.wordpress.org/stevenkword\">Steven Word</a>、<a href=\"https://profiles.wordpress.org/charlestonsw\">Store Locator Plus</a>、<a href=\"https://profiles.wordpress.org/sudar\">Sudar Muthu</a>、<a href=\"https://profiles.wordpress.org/brainstormforce\">Sujay</a>、<a href=\"https://profiles.wordpress.org/5um17\">Sumit Singh</a>、<a href=\"https://profiles.wordpress.org/summerblue\">summerblue</a>、<a href=\"https://profiles.wordpress.org/sunnyratilal\">Sunny Ratilal</a>、<a href=\"https://profiles.wordpress.org/iamtakashi\">Takashi Irie</a>、<a href=\"https://profiles.wordpress.org/miyauchi\">Takayuki Miyauchi</a>、<a href=\"https://profiles.wordpress.org/karmatosed\">Tammie Lister</a>、<a href=\"https://profiles.wordpress.org/tanner-m\">Tanner Moushey</a>、<a href=\"https://profiles.wordpress.org/tbcorr\">tbcorr</a>、<a href=\"https://profiles.wordpress.org/tychay\">Terry Chay</a>、<a href=\"https://profiles.wordpress.org/tharsheblows\">tharsheblows</a>、<a href=\"https://profiles.wordpress.org/themiked\">theMikeD</a>、<a href=\"https://profiles.wordpress.org/thomaswm\">thomaswm</a>、<a href=\"https://profiles.wordpress.org/tfrommen\">Thorsten Frommen</a>、<a href=\"https://profiles.wordpress.org/tott\">Thorsten Ott</a>、<a href=\"https://profiles.wordpress.org/tigertech\">tigertech</a>、<a href=\"https://profiles.wordpress.org/tillkruess\">Till Kruss</a>、<a href=\"https://profiles.wordpress.org/tevko\">Tim Evko</a>、<a href=\"https://profiles.wordpress.org/tmatsuur\">tmatsuur</a>、<a href=\"https://profiles.wordpress.org/tmeister\">tmeister</a>、<a href=\"https://profiles.wordpress.org/tobiasbg\">TobiasBg</a>、<a href=\"https://profiles.wordpress.org/willmot\">Tom Willmot</a>、<a href=\"https://profiles.wordpress.org/tomharrigan\">TomHarrigan</a>、<a href=\"https://profiles.wordpress.org/tommarshall\">tommarshall</a>、<a href=\"https://profiles.wordpress.org/tomsommer\">tomsommer</a>、<a href=\"https://profiles.wordpress.org/skithund\">Toni Viemero</a>、<a href=\"https://profiles.wordpress.org/toro_unit\">Toro_Unit (Hiroshi Urabe)</a>、<a href=\"https://profiles.wordpress.org/liljimmi\">Tracy (LilJimmi) Levesque</a>、<a href=\"https://profiles.wordpress.org/rilwis\">Tran Ngoc Tuan Anh</a>、<a href=\"https://profiles.wordpress.org/wpsmith\">Travis Smith</a>、<a href=\"https://profiles.wordpress.org/trenzterra\">trenzterra</a>、<a href=\"https://profiles.wordpress.org/tryon\">Tryon Eggleston</a>、<a href=\"https://profiles.wordpress.org/tszming\">tszming</a>、<a href=\"https://profiles.wordpress.org/junsuijin\">ty</a>、<a href=\"https://profiles.wordpress.org/tywayne\">Ty Carlson</a>、<a href=\"https://profiles.wordpress.org/grapplerulrich\">Ulrich</a>、<a href=\"https://profiles.wordpress.org/sorich87\">Ulrich Sossou</a>、<a href=\"https://profiles.wordpress.org/umeshsingla\">Umesh Kumar</a>、<a href=\"https://profiles.wordpress.org/umeshnevase\">Umesh Nevase</a>、<a href=\"https://profiles.wordpress.org/utkarshpatel\">Utkarsh</a>、<a href=\"https://profiles.wordpress.org/vilkatis\">vilkatis</a>、<a href=\"https://profiles.wordpress.org/voldemortensen\">voldemortensen</a>、<a href=\"https://profiles.wordpress.org/walterebert\">Walter Ebert</a>、<a href=\"https://profiles.wordpress.org/walterbarcelos\">walterbarcelos</a>、<a href=\"https://profiles.wordpress.org/webdevmattcrom\">webdevmattcrom</a>、<a href=\"https://profiles.wordpress.org/wen-solutions\">WEN Solutions</a>、<a href=\"https://profiles.wordpress.org/wenthemes\">WEN Themes</a>、<a href=\"https://profiles.wordpress.org/westonruter\">Weston Ruter</a>、<a href=\"https://profiles.wordpress.org/wmertens\">wmertens</a>、<a href=\"https://profiles.wordpress.org/wojtekszkutnik\">Wojtek Szkutnik</a>、<a href=\"https://profiles.wordpress.org/theode\">WP Plugin Dev dot com</a>、<a href=\"https://profiles.wordpress.org/wpdev101\">wpdev101</a>、<a href=\"https://profiles.wordpress.org/alphawolf\">wpseek</a>、<a href=\"https://profiles.wordpress.org/wturrell\">wturrell</a>、<a href=\"https://profiles.wordpress.org/yamchhetri\">Yam Chhetri</a>、<a href=\"https://profiles.wordpress.org/yoavf\">Yoav Farhi</a>、<a href=\"https://profiles.wordpress.org/oxymoron\">Zach Wills</a>、<a href=\"https://profiles.wordpress.org/zrothauser\">Zack Rothauser</a>和<a href=\"https://profiles.wordpress.org/tollmanz\">Zack Tollman</a>。</p>\n<p>特别感谢<a href=\"http://siobhanmckeown.com/\">Siobhan McKeown</a>与<a href=\"http://www.sararosso.com/newsletter/\">Sara Rosso</a>制作发布视频，及<a href=\"http://camikaos.com/\">Cami Kaos</a>的配音。</p>\n<p>最后，让我们感谢为发布视频制作了字幕的贡献者，这次的发布视频被翻译成了23种语言！</p>\n<p>如果您想帮忙，请查阅<a href=\"https://make.wordpress.org/\">Make WordPress</a>和我们的<a href=\"https://make.wordpress.org/core/\">核心开发博客</a>。感谢您选择WordPress，我们4.5见！</p>\n</div>\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:36:\"http://wellformedweb.org/CommentAPI/\";a:1:{s:10:\"commentRss\";a:1:{i:0;a:5:{s:4:\"data\";s:50:\"https://cn.wordpress.org/2015/12/13/clifford/feed/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:38:\"http://purl.org/rss/1.0/modules/slash/\";a:1:{s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:2:\"10\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:6;a:6:{s:4:\"data\";s:64:\"\n		\n		\n				\n				\n		\n				\n\n		\n				\n								\n							\n		\n				\n\n\n			\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:5:{s:0:\"\";a:8:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:25:\"WordPress 4.3“Billie”\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:43:\"https://cn.wordpress.org/2015/08/21/billie/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:52:\"https://cn.wordpress.org/2015/08/21/billie/#comments\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 20 Aug 2015 19:04:38 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:1:{i:0;a:5:{s:4:\"data\";s:8:\"Releases\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"https://cn.wordpress.org/?p=995\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:49:\"WordPress 4.3简体中文版现已开放下载。\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:9:\"enclosure\";a:3:{i:0;a:5:{s:4:\"data\";s:0:\"\";s:7:\"attribs\";a:1:{s:0:\"\";a:3:{s:3:\"url\";s:46:\"https://s.w.org/images/core/4.3/formatting.mp4\";s:6:\"length\";s:7:\"1574782\";s:4:\"type\";s:9:\"video/mp4\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}i:1;a:5:{s:4:\"data\";s:0:\"\";s:7:\"attribs\";a:1:{s:0:\"\";a:3:{s:3:\"url\";s:46:\"https://s.w.org/images/core/4.3/formatting.ogv\";s:6:\"length\";s:7:\"1939540\";s:4:\"type\";s:9:\"video/ogg\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}i:2;a:5:{s:4:\"data\";s:0:\"\";s:7:\"attribs\";a:1:{s:0:\"\";a:3:{s:3:\"url\";s:47:\"https://s.w.org/images/core/4.3/formatting.webm\";s:6:\"length\";s:6:\"686435\";s:4:\"type\";s:10:\"video/webm\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:8:\"Jimmy Xu\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:22076:\"<div style=\"width: 692px\">\nWordPress 4.3简体中文版现已<a href=\"https://cn.wordpress.org/releases/\">开放下载</a>，或在您的WordPress仪表盘中升级。我们将此版本命名为“Billie”，以纪念爵士钢琴手<a href=\"https://zh.wikipedia.org/zh-cn/%E6%AF%94%E8%8E%89%C2%B7%E8%8D%B7%E8%8E%89%E6%88%B4\">比莉·荷莉戴</a>。4.3中的新功能会让您更容易自定义网站及内容格式。</p>\n<div id=\"v-T54Iy7Tw-1\" class=\"video-player\"><video id=\"v-T54Iy7Tw-1-video\" width=\"612\" height=\"344\" poster=\"https://videos.files.wordpress.com/T54Iy7Tw/video-7601c95191_scruberthumbnail_1.jpg\" controls=\"true\" preload=\"metadata\" dir=\"ltr\" lang=\"en\"><source src=\"https://videos.files.wordpress.com/T54Iy7Tw/video-7601c95191_dvd.mp4\" type=\"video/mp4; codecs=&quot;avc1.64001E, mp4a.40.2&quot;\" /><source src=\"https://videos.files.wordpress.com/T54Iy7Tw/video-7601c95191_fmt1.ogv\" type=\"video/ogg; codecs=&quot;theora, vorbis&quot;\" /><div><img alt=\"Introducing WordPress 4.3 &quot;Billie&quot;\" src=\"https://videos.files.wordpress.com/T54Iy7Tw/video-7601c95191_scruberthumbnail_1.jpg\" width=\"612\" height=\"344\" /></div><p>Introducing WordPress 4.3 &quot;Billie&quot;</p></video></div>\n<hr />\n<h2>定制器菜单</h2>\n<div><img src=\"https://s.w.org/images/core/4.3/menu-customizer.png\" alt=\"\" /></div>\n<p>建立您的菜单，更新，然后指定至适当位置，同时还能在定制器里即时预览。流线式定制器设计提供对手机友好且更方便的介面。随着每个版本发布，它将变得更快、更好用。</p>\n<hr />\n<h2>格式快捷键</h2>\n<p><div style=\"width: 612px;\" class=\"wp-video\"><video class=\"wp-video-shortcode\" id=\"video-995-4\" width=\"612\" height=\"344\" loop=\"1\" autoplay=\"1\" preload=\"metadata\" controls=\"controls\"><source type=\"video/mp4\" src=\"https://s.w.org/images/core/4.3/formatting.mp4?_=4\" /><source type=\"video/webm\" src=\"https://s.w.org/images/core/4.3/formatting.webm?_=4\" /><source type=\"video/ogg\" src=\"https://s.w.org/images/core/4.3/formatting.ogv?_=4\" /><a href=\"https://s.w.org/images/core/4.3/formatting.mp4\">https://s.w.org/images/core/4.3/formatting.mp4</a></video></div><br />\n您的写作流程伴随着WordPress 4.3全新格式快捷键功能将变得更快。使用星号来建立清单、井号建立一个标题。别再打断您的工作；您的文字搭配<code>*</code>和<code>#</code>看起来更加美好。</p>\n<hr />\n<h2>站点图标</h2>\n<p><img src=\"https://s.w.org/images/core/4.3/site-icon-customizer.png\" alt=\"\" /><br />\n在浏览器标签、收藏夹和移动设备主画面以站点图标作为您的站点代表。在定制器里新增您独一无二的站点图标；当您切换主题时仍保持不变。使您的站点呈现出自己的品牌。</p>\n<hr />\n<h2>更好的密码</h2>\n<p><img src=\"https://s.w.org/images/core/4.3/better-passwords.png\" alt=\"\" /><br />\n借助WordPress改进的密码设定功能使网站更安全。不再使用电子邮件接收密码，而是取得一个密码重设链接。当您在网站新增用户或编辑用户资料时，WordPress将会自动产生一个安全密码。</p>\n<hr />\n<h2>其他改善</h2>\n<ul>\n<li><strong>更顺滑的管理体验</strong> – 经过改进的跨管理界面的列表视图使您的WordPress更方便并且更容易在任何装置上运作。</li>\n<li><strong>关闭页面的评论</strong> – 新建立的页面将关闭评论，将讨论局限在您的博客，只在它们应该出现的地方显示。</li>\n<li><strong>快速自定义您的站点</strong> – 无论您是否在前台，都可以点击工具栏的自定义链接迅速为您的网站做出更改。</li>\n</ul>\n<hr />\n<h2>开发团队</h2>\n<p><a class=\"alignleft\" href=\"https://profiles.wordpress.org/obenland\"><img id=\"grav-2370ea5912750f4cb0f3c51ae1cbca55-0\" class=\"grav-hashed\" src=\"https://www.gravatar.com/avatar/2370ea5912750f4cb0f3c51ae1cbca55?d=mm&amp;s=180&amp;r=G\" alt=\"Konstantin Obenland\" width=\"80\" height=\"80\" /></a><br />\n此次发布由<a href=\"http://konstantin.obenland.it/\">Konstantin Obenland</a>领头，并得到了以下个人的帮助。这次发布包含了246人的贡献。在您喜欢的音乐服务中听听比莉·荷莉戴，并看看下面这些个人资料吧：</p>\n<p><a href=\"https://profiles.wordpress.org/mercime\">@mercime</a>、<a href=\"https://profiles.wordpress.org/aaroncampbell\">Aaron D. Campbell</a>、<a href=\"https://profiles.wordpress.org/jorbin\">Aaron Jorbin</a>、<a href=\"https://profiles.wordpress.org/adamkheckler\">Adam Heckler</a>、<a href=\"https://profiles.wordpress.org/adamsilverstein\">Adam Silverstein</a>、<a href=\"https://profiles.wordpress.org/akibjorklund\">Aki Bjorklund</a>、<a href=\"https://profiles.wordpress.org/akirk\">Alex Kirk</a>、<a href=\"https://profiles.wordpress.org/viper007bond\">Alex Mills (Viper007Bond)</a>、<a href=\"https://profiles.wordpress.org/tellyworth\">Alex Shiels</a>、<a href=\"https://profiles.wordpress.org/deconf\">Alin Marcu</a>、<a href=\"https://profiles.wordpress.org/andfinally\">andfinally</a>、<a href=\"https://profiles.wordpress.org/afercia\">Andrea Fercia</a>、<a href=\"https://profiles.wordpress.org/andg\">Andrea Gandino</a>、<a href=\"https://profiles.wordpress.org/nacin\">Andrew Nacin</a>、<a href=\"https://profiles.wordpress.org/azaozz\">Andrew Ozz</a>、<a href=\"https://profiles.wordpress.org/afragen\">Andy Fragen</a>、<a href=\"https://profiles.wordpress.org/ankit-k-gupta\">Ankit K Gupta</a>、<a href=\"https://profiles.wordpress.org/antpb\">Anthony Burchell</a>、<a href=\"https://profiles.wordpress.org/anubisthejackle\">anubisthejackle</a>、<a href=\"https://profiles.wordpress.org/aramzs\">Aram Zucker-Scharff</a>、<a href=\"https://profiles.wordpress.org/arjunskumar\">Arjun S Kumar</a>、<a href=\"https://profiles.wordpress.org/avnarun\">avnarun</a>、<a href=\"https://profiles.wordpress.org/brad2dabone\">Bad Feather</a>、<a href=\"https://profiles.wordpress.org/bcole808\">Ben Cole</a>、<a href=\"https://profiles.wordpress.org/empireoflight\">Ben Dunkle</a>、<a href=\"https://profiles.wordpress.org/binarykitten\">BinaryKitten</a>、<a href=\"https://profiles.wordpress.org/birgire\">Birgir Erlendsson (birgire)</a>、<a href=\"https://profiles.wordpress.org/bjornjohansen\">Bjorn Johansen</a>、<a href=\"https://profiles.wordpress.org/bolo1988\">bolo1988</a>、<a href=\"https://profiles.wordpress.org/boonebgorges\">Boone B. Gorges</a>、<a href=\"https://profiles.wordpress.org/bradt\">Brad Touesnard</a>、<a href=\"https://profiles.wordpress.org/bramd\">Bram Duvigneau</a>、<a href=\"https://profiles.wordpress.org/kraftbj\">Brandon Kraft</a>、<a href=\"https://profiles.wordpress.org/krogsgard\">Brian Krogsgard</a>、<a href=\"https://profiles.wordpress.org/brianlayman\">Brian Layman</a>、<a href=\"https://profiles.wordpress.org/icaleb\">Caleb Burks</a>、<a href=\"https://profiles.wordpress.org/calevans\">CalEvans</a>、<a href=\"https://profiles.wordpress.org/chasewiseman\">Chase Wiseman</a>、<a href=\"https://profiles.wordpress.org/chipbennett\">Chip Bennett</a>、<a href=\"https://profiles.wordpress.org/chouby\">Chouby</a>、<a href=\"https://profiles.wordpress.org/c3mdigital\">Chris Olbekson</a>、<a href=\"https://profiles.wordpress.org/chriscct7\">chriscct7</a>、<a href=\"https://profiles.wordpress.org/posykrat\">Clement Biron</a>、<a href=\"https://profiles.wordpress.org/craig-ralston\">Craig Ralston</a>、<a href=\"https://profiles.wordpress.org/danielbachhuber\">Daniel Bachhuber</a>、<a href=\"https://profiles.wordpress.org/redsweater\">Daniel Jalkut (Red Sweater)</a>、<a href=\"https://profiles.wordpress.org/mte90\">Daniele Mte90 Scasciafratte</a>、<a href=\"https://profiles.wordpress.org/daniluk4000\">daniluk4000</a>、<a href=\"https://profiles.wordpress.org/dmchale\">Dave McHale</a>、<a href=\"https://profiles.wordpress.org/daveal\">DaveAl</a>、<a href=\"https://profiles.wordpress.org/davidakennedy\">David A. Kennedy</a>、<a href=\"https://profiles.wordpress.org/dlh\">David Herrera</a>、<a href=\"https://profiles.wordpress.org/daxelrod\">daxelrod</a>、<a href=\"https://profiles.wordpress.org/denis-de-bernardy\">Denis de Bernardy</a>、<a href=\"https://profiles.wordpress.org/realloc\">Dennis Ploetner</a>、<a href=\"https://profiles.wordpress.org/valendesigns\">Derek Herman</a>、<a href=\"https://profiles.wordpress.org/dd32\">Dion Hulse</a>、<a href=\"https://profiles.wordpress.org/dipeshkakadiya\">dipesh.kakadiya</a>、<a href=\"https://profiles.wordpress.org/dmsnell\">dmsnell</a>、<a href=\"https://profiles.wordpress.org/ocean90\">Dominik Schilling</a>、<a href=\"https://profiles.wordpress.org/drewapicture\">Drew Jaynes</a>、<a href=\"https://profiles.wordpress.org/kucrut\">Dzikri Aziz</a>、<a href=\"https://profiles.wordpress.org/eclev91\">eclev91</a>、<a href=\"https://profiles.wordpress.org/eligijus\">eligijus</a>、<a href=\"https://profiles.wordpress.org/eliorivero\">Elio Rivero</a>、<a href=\"https://profiles.wordpress.org/iseulde\">Ella Iseulde Van Dorpe</a>、<a href=\"https://profiles.wordpress.org/ericlewis\">Eric Andrew Lewis</a>、<a href=\"https://profiles.wordpress.org/ebinnion\">Eric Binnion</a>、<a href=\"https://profiles.wordpress.org/ericmann\">Eric Mann</a>、<a href=\"https://profiles.wordpress.org/fab1en\">Fabien Quatravaux</a>、<a href=\"https://profiles.wordpress.org/flixos90\">Felix Arntz</a>、<a href=\"https://profiles.wordpress.org/francoeurdavid\">francoeurdavid</a>、<a href=\"https://profiles.wordpress.org/frank-klein\">Frank Klein</a>、<a href=\"https://profiles.wordpress.org/gabrielperezs\">gabrielperezs</a>、<a href=\"https://profiles.wordpress.org/voldemortensen\">Garth Mortensen</a>、<a href=\"https://profiles.wordpress.org/garyj\">Gary Jones</a>、<a href=\"https://profiles.wordpress.org/pento\">Gary Pendergast</a>、<a href=\"https://profiles.wordpress.org/georgestephanis\">George Stephanis</a>、<a href=\"https://profiles.wordpress.org/glennm\">glennm</a>、<a href=\"https://profiles.wordpress.org/gtuk\">gtuk</a>、<a href=\"https://profiles.wordpress.org/hailin\">hailin</a>、<a href=\"https://profiles.wordpress.org/hauvong\">hauvong</a>、<a href=\"https://profiles.wordpress.org/helen\">Helen Hou-Sandí</a>、<a href=\"https://profiles.wordpress.org/henrikakselsen\">henrikakselsen</a>、<a href=\"https://profiles.wordpress.org/hnle\">Hinaloe</a>、<a href=\"https://profiles.wordpress.org/hrishiv90\">Hrishikesh Vaipurkar</a>、<a href=\"https://profiles.wordpress.org/hugobaeta\">Hugo Baeta</a>、<a href=\"https://profiles.wordpress.org/polevaultweb\">Iain Poulson</a>、<a href=\"https://profiles.wordpress.org/imath\">imath</a>、<a href=\"https://profiles.wordpress.org/ipstenu\">Ipstenu (Mika Epstein)</a>、<a href=\"https://profiles.wordpress.org/isaacchapman\">isaacchapman</a>、<a href=\"https://profiles.wordpress.org/izem\">izem</a>、<a href=\"https://profiles.wordpress.org/jdgrimes\">J.D. Grimes</a>、<a href=\"https://profiles.wordpress.org/jacklenox\">Jack Lenox</a>、<a href=\"https://profiles.wordpress.org/jadpm\">jadpm</a>、<a href=\"https://profiles.wordpress.org/jamesgol\">jamesgol</a>、<a href=\"https://profiles.wordpress.org/jancbeck\">jancbeck</a>、<a href=\"https://profiles.wordpress.org/jfarthing84\">Jeff Farthing</a>、<a href=\"https://profiles.wordpress.org/jeremyfelt\">Jeremy Felt</a>、<a href=\"https://profiles.wordpress.org/jpry\">Jeremy Pry</a>、<a href=\"https://profiles.wordpress.org/jmichaelward\">Jeremy Ward</a>、<a href=\"https://profiles.wordpress.org/jesin\">Jesin A</a>、<a href=\"https://profiles.wordpress.org/jipmoors\">jipmoors</a>、<a href=\"https://profiles.wordpress.org/joedolson\">Joe Dolson</a>、<a href=\"https://profiles.wordpress.org/joehoyle\">Joe Hoyle</a>、<a href=\"https://profiles.wordpress.org/joemcgill\">Joe McGill</a>、<a href=\"https://profiles.wordpress.org/jkudish\">Joey Kudish</a>、<a href=\"https://profiles.wordpress.org/johnbillion\">John Blackbourn</a>、<a href=\"https://profiles.wordpress.org/johnjamesjacoby\">John James Jacoby</a>、<a href=\"https://profiles.wordpress.org/picard102\">John Leschinski</a>、<a href=\"https://profiles.wordpress.org/joostdevalk\">Joost de Valk</a>、<a href=\"https://profiles.wordpress.org/jpyper\">Jpyper</a>、<a href=\"https://profiles.wordpress.org/jrf\">jrf</a>、<a href=\"https://profiles.wordpress.org/juliobox\">Julio Potier</a>、<a href=\"https://profiles.wordpress.org/jtsternberg\">Justin Sternberg</a>、<a href=\"https://profiles.wordpress.org/ungestaltbar\">Kai</a>、<a href=\"https://profiles.wordpress.org/karinchristen\">karinchristen</a>、<a href=\"https://profiles.wordpress.org/karpstrucking\">karpstrucking</a>、<a href=\"https://profiles.wordpress.org/ryelle\">Kelly Dwan</a>、<a href=\"https://profiles.wordpress.org/kevkoeh\">Kevin Koehler</a>、<a href=\"https://profiles.wordpress.org/kitchin\">kitchin</a>、<a href=\"https://profiles.wordpress.org/ixkaito\">Kite</a>、<a href=\"https://profiles.wordpress.org/kovshenin\">Konstantin Kovshenin</a>、<a href=\"https://profiles.wordpress.org/lancewillett\">Lance Willett</a>、<a href=\"https://profiles.wordpress.org/leewillis77\">Lee Willis</a>、<a href=\"https://profiles.wordpress.org/leogopal\">Leo Gopal</a>、<a href=\"https://profiles.wordpress.org/loushou\">loushou</a>、<a href=\"https://profiles.wordpress.org/lumaraf\">Lumaraf</a>、<a href=\"https://profiles.wordpress.org/tyxla\">Marin Atanasov</a>、<a href=\"https://profiles.wordpress.org/nofearinc\">Mario Peshev</a>、<a href=\"https://profiles.wordpress.org/clorith\">Marius (Clorith)</a>、<a href=\"https://profiles.wordpress.org/markjaquith\">Mark Jaquith</a>、<a href=\"https://profiles.wordpress.org/markoheijnen\">Marko Heijnen</a>、<a href=\"https://profiles.wordpress.org/marsjaninzmarsa\">marsjaninzmarsa</a>、<a href=\"https://profiles.wordpress.org/martinsachse\">martinsachse</a>、<a href=\"https://profiles.wordpress.org/matt\">Matt Mullenweg</a>、<a href=\"https://profiles.wordpress.org/veraxus\">Matt van Andel</a>、<a href=\"https://profiles.wordpress.org/mattwiebe\">Matt Wiebe</a>、<a href=\"https://profiles.wordpress.org/mattyrob\">mattyrob</a>、<a href=\"https://profiles.wordpress.org/maxxsnake\">maxxsnake</a>、<a href=\"https://profiles.wordpress.org/melchoyce\">Mel Choyce</a>、<a href=\"https://profiles.wordpress.org/nikonratm\">Michael</a>、<a href=\"https://profiles.wordpress.org/mdawaffe\">Michael Adams (mdawaffe)</a>、<a href=\"https://profiles.wordpress.org/michael-arestad\">Michael Arestad</a>、<a href=\"https://profiles.wordpress.org/michaelryanmcneill\">michaelryanmcneill</a>、<a href=\"https://profiles.wordpress.org/mcguive7\">Mickey Kay</a>、<a href=\"https://profiles.wordpress.org/mihai\">mihai</a>、<a href=\"https://profiles.wordpress.org/mikehansenme\">Mike Hansen</a>、<a href=\"https://profiles.wordpress.org/mnelson4\">Mike Nelson</a>、<a href=\"https://profiles.wordpress.org/dh-shredder\">Mike Schroder</a>、<a href=\"https://profiles.wordpress.org/dimadin\">Milan Dinic</a>、<a href=\"https://profiles.wordpress.org/morganestes\">Morgan Estes</a>、<a href=\"https://profiles.wordpress.org/mrutz\">mrutz</a>、<a href=\"https://profiles.wordpress.org/nabil_kadimi\">nabil_kadimi</a>、<a href=\"https://profiles.wordpress.org/Nao\">Naoko Takano</a>、<a href=\"https://profiles.wordpress.org/nazmulhossainnihal\">Nazmul Hossain Nihal</a>、<a href=\"https://profiles.wordpress.org/nicholas_io\">nicholas_io</a>、<a href=\"https://profiles.wordpress.org/celloexpressions\">Nick Halsey</a>、<a href=\"https://profiles.wordpress.org/nickmomrik\">Nick Momrik</a>、<a href=\"https://profiles.wordpress.org/nbachiyski\">Nikolay Bachiyski</a>、<a href=\"https://profiles.wordpress.org/rabmalin\">Nilambar Sharma</a>、<a href=\"https://profiles.wordpress.org/onnimonni\">Onni Hakala</a>、<a href=\"https://profiles.wordpress.org/ozh\">Ozh</a>、<a href=\"https://profiles.wordpress.org/pareshradadiya-1\">Paresh Radadiya</a>、<a href=\"https://profiles.wordpress.org/swissspidy\">Pascal Birchler</a>、<a href=\"https://profiles.wordpress.org/djpaul\">Paul Gibbs</a>、<a href=\"https://profiles.wordpress.org/paulwilde\">Paul Wilde</a>、<a href=\"https://profiles.wordpress.org/pavelevap\">pavelevap</a>、<a href=\"https://profiles.wordpress.org/gungeekatx\">Pete Nelson</a>、<a href=\"https://profiles.wordpress.org/peterwilsoncc\">Peter Wilson</a>、<a href=\"https://profiles.wordpress.org/peterrknight\">PeterRKnight</a>、<a href=\"https://profiles.wordpress.org/philiparthurmoore\">Philip Arthur Moore</a>、<a href=\"https://profiles.wordpress.org/mordauk\">Pippin Williamson</a>、<a href=\"https://profiles.wordpress.org/pragunbhutani\">pragunbhutani</a>、<a href=\"https://profiles.wordpress.org/rachelbaker\">Rachel Baker</a>、<a href=\"https://profiles.wordpress.org/ramiy\">Rami Yushuvaev</a>、<a href=\"https://profiles.wordpress.org/rarylson\">rarylson</a>、<a href=\"https://profiles.wordpress.org/lamosty\">Rastislav Lamos</a>、<a href=\"https://profiles.wordpress.org/rauchg\">rauchg</a>、<a href=\"https://profiles.wordpress.org/ravinderk\">Ravinder Kumar</a>、<a href=\"https://profiles.wordpress.org/rclations\">RC Lations</a>、<a href=\"https://profiles.wordpress.org/greuben\">Reuben Gunday</a>、<a href=\"https://profiles.wordpress.org/rianrietveld\">Rian Rietveld</a>、<a href=\"https://profiles.wordpress.org/ritteshpatel\">Ritesh Patel</a>、<a href=\"https://profiles.wordpress.org/miqrogroove\">Robert Chapin</a>、<a href=\"https://profiles.wordpress.org/rdall\">Robert Dall</a>、<a href=\"https://profiles.wordpress.org/rodrigosprimo\">Rodrigo Primo</a>、<a href=\"https://profiles.wordpress.org/rommelxcastro\">Rommel Castro</a>、<a href=\"https://profiles.wordpress.org/magicroundabout\">Ross Wintle</a>、<a href=\"https://profiles.wordpress.org/rhurling\">Rouven Hurling</a>、<a href=\"https://profiles.wordpress.org/ryan\">Ryan Boren</a>、<a href=\"https://profiles.wordpress.org/rmarks\">Ryan Marks</a>、<a href=\"https://profiles.wordpress.org/rmccue\">Ryan McCue</a>、<a href=\"https://profiles.wordpress.org/ohryan\">Ryan Neudorf</a>、<a href=\"https://profiles.wordpress.org/welcher\">Ryan Welcher</a>、<a href=\"https://profiles.wordpress.org/sagarjadhav\">Sagar Jadhav</a>、<a href=\"https://profiles.wordpress.org/salcode\">Sal Ferrarello</a>、<a href=\"https://profiles.wordpress.org/solarissmoke\">Samir Shah</a>、<a href=\"https://profiles.wordpress.org/santagada\">santagada</a>、<a href=\"https://profiles.wordpress.org/sc0ttkclark\">Scott Kingsley Clark</a>、<a href=\"https://profiles.wordpress.org/coffee2code\">Scott Reilly</a>、<a href=\"https://profiles.wordpress.org/wonderboymusic\">Scott Taylor</a>、<a href=\"https://profiles.wordpress.org/scribu\">scribu</a>、<a href=\"https://profiles.wordpress.org/scruffian\">scruffian</a>、<a href=\"https://profiles.wordpress.org/seanchayes\">Sean Hayes</a>、<a href=\"https://profiles.wordpress.org/sebastiantiede\">Sebastian</a>、<a href=\"https://profiles.wordpress.org/sergeybiryukov\">Sergey Biryukov</a>、<a href=\"https://profiles.wordpress.org/shooper\">Shawn Hooper</a>、<a href=\"https://profiles.wordpress.org/designsimply\">Sheri Bigelow</a>、<a href=\"https://profiles.wordpress.org/simonwheatley\">Simon Wheatley</a>、<a href=\"https://profiles.wordpress.org/siobhan\">Siobhan</a>、<a href=\"https://profiles.wordpress.org/metodiew\">Stanko Metodiev</a>、<a href=\"https://profiles.wordpress.org/stephdau\">Stephane Daury (stephdau)</a>、<a href=\"https://profiles.wordpress.org/netweb\">Stephen Edgar</a>、<a href=\"https://profiles.wordpress.org/stevegrunwell\">Steve Grunwell</a>、<a href=\"https://profiles.wordpress.org/stevenkword\">Steven Word</a>、<a href=\"https://profiles.wordpress.org/stuartshields\">stuartshields</a>、<a href=\"https://profiles.wordpress.org/sudar\">Sudar</a>、<a href=\"https://profiles.wordpress.org/sunnyratilal\">Sunny Ratilal</a>、<a href=\"https://profiles.wordpress.org/taka2\">taka2</a>、<a href=\"https://profiles.wordpress.org/tharsheblows\">tharsheblows</a>、<a href=\"https://profiles.wordpress.org/thorbrink\">Thor Brink</a>、<a href=\"https://profiles.wordpress.org/creativeinfusion\">Tim Smith</a>、<a href=\"https://profiles.wordpress.org/tlexcellent\">tlexcellent</a>、<a href=\"https://profiles.wordpress.org/tmatsuur\">tmatsuur</a>、<a href=\"https://profiles.wordpress.org/tobiasbg\">TobiasBg</a>、<a href=\"https://profiles.wordpress.org/tomasm\">Tomas Mackevicius</a>、<a href=\"https://profiles.wordpress.org/tomharrigan\">TomHarrigan</a>、<a href=\"https://profiles.wordpress.org/toro_unit\">Toro_Unit (Hiroshi Urabe)</a>、<a href=\"https://profiles.wordpress.org/toru\">Toru Miki</a>、<a href=\"https://profiles.wordpress.org/liljimmi\">Tracy (LilJimmi) Levesque</a>、<a href=\"https://profiles.wordpress.org/tryon\">Tryon Eggleston</a>、<a href=\"https://profiles.wordpress.org/tywayne\">Ty Carlson</a>、<a href=\"https://profiles.wordpress.org/desaiuditd\">Udit Desai</a>、<a href=\"https://profiles.wordpress.org/vivekbhusal\">vivekbhusal</a>、<a href=\"https://profiles.wordpress.org/westonruter\">Weston Ruter</a>、<a href=\"https://profiles.wordpress.org/willnorris\">Will Norris</a>、<a href=\"https://profiles.wordpress.org/willgladstone\">willgladstone</a>、<a href=\"https://profiles.wordpress.org/earnjam\">William Earnhardt</a>、<a href=\"https://profiles.wordpress.org/willstedt\">willstedt</a>、<a href=\"https://profiles.wordpress.org/eltobiano\">WPMU DEV Jose</a>、<a href=\"https://profiles.wordpress.org/yoavf\">Yoav Farhi</a>、<a href=\"https://profiles.wordpress.org/ysalame\">Yuri Salame</a>、<a href=\"https://profiles.wordpress.org/oxymoron\">Zach Wills</a>、<a href=\"https://profiles.wordpress.org/katzwebdesign\">Zack Katz</a>和<a href=\"https://profiles.wordpress.org/tollmanz\">Zack Tollman</a>。</p>\n<p>特别感谢<a href=\"http://siobhanmckeown.com/\">Siobhan McKeown</a>制作发布视频、<a href=\"http://hugobaeta.com/\">Hugo Baeta</a>的设计和<a href=\"http://jacklenox.com/\">Jack Lenox</a>的配音。</p>\n<p>最后，让我们感谢为发布视频制作了字幕的贡献者，这次的发布视频被翻译成了30种语言！</p>\n<p>如果您想帮忙，请查阅<a href=\"https://make.wordpress.org/\">Make WordPress</a>和我们的<a href=\"https://make.wordpress.org/core/\">核心开发博客</a>。感谢您选择WordPress，我们4.4见！\n</div>\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:36:\"http://wellformedweb.org/CommentAPI/\";a:1:{s:10:\"commentRss\";a:1:{i:0;a:5:{s:4:\"data\";s:48:\"https://cn.wordpress.org/2015/08/21/billie/feed/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:38:\"http://purl.org/rss/1.0/modules/slash/\";a:1:{s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:2:\"13\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:7;a:6:{s:4:\"data\";s:61:\"\n		\n		\n				\n				\n		\n				\n\n		\n				\n								\n							\n		\n							\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:5:{s:0:\"\";a:7:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:25:\"WordPress 4.2“Powell”\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:43:\"https://cn.wordpress.org/2015/04/24/powell/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:52:\"https://cn.wordpress.org/2015/04/24/powell/#comments\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 23 Apr 2015 19:32:36 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:1:{i:0;a:5:{s:4:\"data\";s:8:\"Releases\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"https://cn.wordpress.org/?p=977\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:49:\"WordPress 4.2简体中文版现已开放下载。\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:8:\"Jimmy Xu\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:30179:\"<div style=\"width: 692px\">\nWordPress 4.2简体中文版现已<a href=\"https://cn.wordpress.org/releases/\">开放下载</a>，或在您的WordPress仪表盘中升级。我们将此版本命名为“Powell”，以纪念爵士钢琴手<a href=\"https://en.wikipedia.org/wiki/Bud_Powell\">巴德·鲍威尔</a>。4.2中的新功能会帮助您与全世界交流共享。</p>\n<div id=\"v-e9kH4FzP-1\" class=\"video-player\"><video id=\"v-e9kH4FzP-1-video\" width=\"612\" height=\"344\" poster=\"https://videos.files.wordpress.com/e9kH4FzP/wordpress-4-2_scruberthumbnail_2.jpg\" controls=\"true\" preload=\"metadata\" dir=\"ltr\" lang=\"en\"><source src=\"https://videos.files.wordpress.com/e9kH4FzP/wordpress-4-2_dvd.mp4\" type=\"video/mp4; codecs=&quot;avc1.64001E, mp4a.40.2&quot;\" /><source src=\"https://videos.files.wordpress.com/e9kH4FzP/wordpress-4-2_fmt1.ogv\" type=\"video/ogg; codecs=&quot;theora, vorbis&quot;\" /><div><img alt=\"Introducing WordPress 4.2 &quot;Powell&quot;\" src=\"https://videos.files.wordpress.com/e9kH4FzP/wordpress-4-2_scruberthumbnail_2.jpg\" width=\"612\" height=\"344\" /></div><p>Introducing WordPress 4.2 &quot;Powell&quot;</p></video></div>\n<hr style=\"margin: 2em 0 3em\" />\n<h2 style=\"text-align: center;margin: 15px 0 20px;font-family: sans-serif;font-size: 26px\">更方便地共享内容</h2>\n<p><img class=\"alignnone size-full wp-image-3677\" src=\"https://wordpress.org/news/files/2015/04/4.2-press-this-2.jpg\" alt=\"按这里\" width=\"1000\" height=\"832\" /><br />\n收藏、编辑、发布，向您介绍最新的”按这里“工具。在工具菜单中，将”按这里“加入到您的浏览器书签或移动设备主屏幕，然后您就可以迅雷不及掩耳地共享您的内容。共享您喜欢的视频、图片和内容从来没有像现在这样简单快捷。</p>\n<hr style=\"margin: 2em 0 3em\" />\n<h2 style=\"text-align: center;margin: 15px 0 20px;font-family: sans-serif;font-size: 26px\">扩展的字符集支持</h2>\n<p><img class=\"alignnone size-full wp-image-3676\" src=\"https://wordpress.org/news/files/2015/04/4.2-characters.png\" alt=\"字符集支持：颜文字和特殊字符\" width=\"1000\" height=\"832\" /><br />\n无论您使用何种语言，在WordPress中写作都将变得更好。WordPress 4.2将原生支持许多新字符，包括中日韩文字、音乐和数学符号，以及象形文字。</p>\n<p>即使您没有在使用以上那些字符，您仍可获益——WordPress现已支持颜文字！发挥创意并用<img src=\"https://s.w.org/images/core/emoji/11/72x72/1f499.png\" alt=\"?\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\" />、<img src=\"https://s.w.org/images/core/emoji/11/72x72/1f438.png\" alt=\"?\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\" />、<img src=\"https://s.w.org/images/core/emoji/11/72x72/1f412.png\" alt=\"?\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\" />、<img src=\"https://s.w.org/images/core/emoji/11/72x72/1f355.png\" alt=\"?\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\" />与所有其他<a href=\"https://codex.wordpress.org/Emoji\">颜文字</a>来装点您的内容。</p>\n<hr style=\"margin: 2em 0 3em\" />\n<p><img class=\"alignright size-medium wp-image-3656\" src=\"https://wordpress.org/news/files/2015/04/4.2-theme-switcher-300x230.png\" alt=\"定制器中的主题切换器\" width=\"288\" height=\"221\" /></p>\n<h3 style=\"margin: 0 0 5px 0;font-size: 16px;font-weight: bold\">在定制器中切换主题</h3>\n<p>您可以在定制器中浏览和预览已安装的主题，并可让主题在您的站点亮相之前确保它能够搭配您的内容。</p>\n<div style=\"clear: both\"></div>\n<p><img class=\"alignright size-medium wp-image-3653\" src=\"https://wordpress.org/news/files/2015/04/4.2-embeds-300x230.png\" alt=\"Tumbr.com oEmbed样例\" width=\"288\" height=\"221\" /></p>\n<h3 style=\"margin: 0 0 5px 0;font-size: 16px;font-weight: bold\">更多的嵌入内容</h3>\n<p>把Tumblr.com和Kickstarter的链接粘贴进编辑器，那些内容就将魔法般地出现在您眼前。您的发布和编辑体验会随着我们的每次发布变得更密不可分。</p>\n<div style=\"clear: both\"></div>\n<p><img class=\"alignright size-medium wp-image-3654\" src=\"https://wordpress.org/news/files/2015/04/4.2-plugins-300x230.png\" alt=\"内联插件升级\" width=\"288\" height=\"221\" /></p>\n<h3 style=\"margin: 0 0 5px 0;font-size: 16px;font-weight: bold\">更流畅的插件升级</h3>\n<p>向无聊的加载屏幕说再见，并向简单顺滑的插件升级说你好。点击<em>现在升级</em>，您即可以看到魔法发生。</p>\n<div style=\"clear: both\"></div>\n<hr style=\"margin: 2em 0 3em\" />\n<h2 style=\"text-align: center;margin: 15px 0 20px;font-family: sans-serif;font-size: 26px\">引擎盖下</h2>\n<h5>utf8mb4支持</h5>\n<p>数据库字符编码已从utf8变为utf8mb4，加入了对所有4字节字符的支持。</p>\n<h5>JavaScript无障碍</h5>\n<p>您现在可以在JavaScript中通过<code>wp.a11y.speak()</code>向屏幕阅读器发送音频提醒。传入字符串，更新就会被发送到专用的ARIA即时通知区域。</p>\n<h5>分离共享的条目信息</h5>\n<p>不同分类法间共享的条目信息将在其中一条获得更新时分离。您可以在<a href=\"https://developer.wordpress.org/plugins/taxonomy/working-with-split-terms-in-wp-4-2/\">插件开发者手册</a>中获取更多信息。</p>\n<h5>复杂查询排序</h5>\n<p><code>WP_Query</code>、<code>WP_Comment_Query</code>和<code>WP_User_Query</code>现在支持使用具名的元查询条款进行复杂排序。</p>\n<hr style=\"margin: 2em 0 3em\" />\n<h2 style=\"text-align: center;margin: 15px 0 20px;font-family: sans-serif;font-size: 26px\">开发团队</h2>\n<p><a class=\"alignleft\" href=\"https://profiles.wordpress.org/drewapicture\"><img id=\"grav-95c934fa2c3362794bf62ff8c59ada08-0\" class=\"grav-hashed\" src=\"https://www.gravatar.com/avatar/95c934fa2c3362794bf62ff8c59ada08?d=mm&amp;s=180&amp;r=G\" alt=\"Drew Jaynes\" width=\"90\" height=\"90\" /></a></p>\n<p>此次发布由<a href=\"http://werdswords.com/\">Drew Jaynes</a>领头，并得到了以下个人的帮助。这次发布包含了283人的贡献，创下新高。在您喜欢的音乐服务中听听巴德·鲍威尔，并看看下面这些个人资料吧：</p>\n<p><a href=\"https://profiles.wordpress.org/mercime\">@mercime</a>、<a href=\"https://profiles.wordpress.org/a5hleyrich\">A5hleyRich</a>、<a href=\"https://profiles.wordpress.org/aaroncampbell\">Aaron D. Campbell</a>、<a href=\"https://profiles.wordpress.org/jorbin\">Aaron Jorbin</a>、<a href=\"https://profiles.wordpress.org/abhishekfdd\">abhishekfdd</a>、<a href=\"https://profiles.wordpress.org/adamsilverstein\">Adam Silverstein</a>、<a href=\"https://profiles.wordpress.org/mrahmadawais\">Ahmad Awais</a>、<a href=\"https://profiles.wordpress.org/alexkingorg\">Alex King</a>、<a href=\"https://profiles.wordpress.org/viper007bond\">Alex Mills (Viper007Bond)</a>、<a href=\"https://profiles.wordpress.org/deconf\">Alin Marcu</a>、<a href=\"https://profiles.wordpress.org/collinsinternet\">Allan Collins</a>、<a href=\"https://profiles.wordpress.org/afercia\">Andrea Fercia</a>、<a href=\"https://profiles.wordpress.org/awbauer\">Andrew Bauer</a>、<a href=\"https://profiles.wordpress.org/nacin\">Andrew Nacin</a>、<a href=\"https://profiles.wordpress.org/norcross\">Andrew Norcross</a>、<a href=\"https://profiles.wordpress.org/azaozz\">Andrew Ozz</a>、<a href=\"https://profiles.wordpress.org/ankitgadertcampcom\">Ankit Gade</a>、<a href=\"https://profiles.wordpress.org/ankit-k-gupta\">Ankit K Gupta</a>、<a href=\"https://profiles.wordpress.org/atimmer\">Anton Timmermans</a>、<a href=\"https://profiles.wordpress.org/aramzs\">Aram Zucker-Scharff</a>、<a href=\"https://profiles.wordpress.org/arminbraun\">ArminBraun</a>、<a href=\"https://profiles.wordpress.org/ashfame\">Ashfame</a>、<a href=\"https://profiles.wordpress.org/filosofo\">Austin Matzko</a>、<a href=\"https://profiles.wordpress.org/avryl\">avryl</a>、<a href=\"https://profiles.wordpress.org/barrykooij\">Barry Kooij</a>、<a href=\"https://profiles.wordpress.org/beaulebens\">Beau Lebens</a>、<a href=\"https://profiles.wordpress.org/bendoh\">Ben Doherty (Oomph、Inc)</a>、<a href=\"https://profiles.wordpress.org/bananastalktome\">Billy Schneider</a>、<a href=\"https://profiles.wordpress.org/boonebgorges\">Boone B. Gorges</a>、<a href=\"https://profiles.wordpress.org/kraftbj\">Brandon Kraft</a>、<a href=\"https://profiles.wordpress.org/krogsgard\">Brian Krogsgard</a>、<a href=\"https://profiles.wordpress.org/bswatson\">Brian Watson</a>、<a href=\"https://profiles.wordpress.org/calevans\">CalEvans</a>、<a href=\"https://profiles.wordpress.org/carolinegeven\">carolinegeven</a>、<a href=\"https://profiles.wordpress.org/caseypatrickdriscoll\">Casey Driscoll</a>、<a href=\"https://profiles.wordpress.org/caspie\">Caspie</a>、<a href=\"https://profiles.wordpress.org/cdog\">Catalin Dogaru</a>、<a href=\"https://profiles.wordpress.org/chipbennett\">Chip Bennett</a>、<a href=\"https://profiles.wordpress.org/chipx86\">chipx86</a>、<a href=\"https://profiles.wordpress.org/chrico\">ChriCo</a>、<a href=\"https://profiles.wordpress.org/cbaldelomar\">Chris Baldelomar</a>、<a href=\"https://profiles.wordpress.org/c3mdigital\">Chris Olbekson</a>、<a href=\"https://profiles.wordpress.org/cfoellmann\">Christian Foellmann</a>、<a href=\"https://profiles.wordpress.org/cfinke\">Christopher Finke</a>、<a href=\"https://profiles.wordpress.org/clifgriffin\">Clifton Griffin</a>、<a href=\"https://profiles.wordpress.org/codix\">Code Master</a>、<a href=\"https://profiles.wordpress.org/corphi\">Corphi</a>、<a href=\"https://profiles.wordpress.org/couturefreak\">Courtney Ivey</a>、<a href=\"https://profiles.wordpress.org/craig-ralston\">Craig Ralston</a>、<a href=\"https://profiles.wordpress.org/cweiske\">cweiske</a>、<a href=\"https://profiles.wordpress.org/extendwings\">Daisuke Takahashi</a>、<a href=\"https://profiles.wordpress.org/timersys\">Damian</a>、<a href=\"https://profiles.wordpress.org/danielbachhuber\">Daniel Bachhuber</a>、<a href=\"https://profiles.wordpress.org/redsweater\">Daniel Jalkut (Red Sweater)</a>、<a href=\"https://profiles.wordpress.org/dkotter\">Darin Kotter</a>、<a href=\"https://profiles.wordpress.org/nerrad\">Darren Ethier (nerrad)</a>、<a href=\"https://profiles.wordpress.org/dllh\">Daryl L. L. Houston (dllh)</a>、<a href=\"https://profiles.wordpress.org/dmchale\">Dave McHale</a>、<a href=\"https://profiles.wordpress.org/davidakennedy\">David A. Kennedy</a>、<a href=\"https://profiles.wordpress.org/davidanderson\">David Anderson</a>、<a href=\"https://profiles.wordpress.org/dlh\">David Herrera</a>、<a href=\"https://profiles.wordpress.org/folletto\">Davide &#8216;Folletto&#8217; Casali</a>、<a href=\"https://profiles.wordpress.org/davideugenepratt\">davideugenepratt</a>、<a href=\"https://profiles.wordpress.org/davidhamiltron\">davidhamiltron</a>、<a href=\"https://profiles.wordpress.org/denis-de-bernardy\">Denis de Bernardy</a>、<a href=\"https://profiles.wordpress.org/valendesigns\">Derek Herman</a>、<a href=\"https://profiles.wordpress.org/dsmart\">Derek Smart</a>、<a href=\"https://profiles.wordpress.org/designsimply\">designsimply</a>、<a href=\"https://profiles.wordpress.org/dd32\">Dion Hulse</a>、<a href=\"https://profiles.wordpress.org/dipeshkakadiya\">dipesh.kakadiya</a>、<a href=\"https://profiles.wordpress.org/ocean90\">Dominik Schilling</a>、<a href=\"https://profiles.wordpress.org/doublesharp\">doublesharp</a>、<a href=\"https://profiles.wordpress.org/dzerycz\">DzeryCZ</a>、<a href=\"https://profiles.wordpress.org/kucrut\">Dzikri Aziz</a>、<a href=\"https://profiles.wordpress.org/emazovetskiy\">e.mazovetskiy</a>、<a href=\"https://profiles.wordpress.org/oso96_2000\">Eduardo Reveles</a>、<a href=\"https://profiles.wordpress.org/cais\">Edward Caissie</a>、<a href=\"https://profiles.wordpress.org/eliorivero\">Elio Rivero</a>、<a href=\"https://profiles.wordpress.org/iseulde\">Ella Iseulde Van Dorpe</a>、<a href=\"https://profiles.wordpress.org/elliottcarlson\">elliottcarlson</a>、<a href=\"https://profiles.wordpress.org/enej\">enej</a>、<a href=\"https://profiles.wordpress.org/ebinnion\">Eric Binnion</a>、<a href=\"https://profiles.wordpress.org/ericlewis\">Eric Lewis</a>、<a href=\"https://profiles.wordpress.org/ethitter\">Erick Hitter</a>、<a href=\"https://profiles.wordpress.org/evansolomon\">Evan Solomon</a>、<a href=\"https://profiles.wordpress.org/fab1en\">Fabien Quatravaux</a>、<a href=\"https://profiles.wordpress.org/fhwebcs\">fhwebcs</a>、<a href=\"https://profiles.wordpress.org/floriansimeth\">Florian Simeth</a>、<a href=\"https://profiles.wordpress.org/bueltge\">Frank</a>、<a href=\"https://profiles.wordpress.org/frankpw\">Frank P. Walentynowicz</a>、<a href=\"https://profiles.wordpress.org/f-j-kaiser\">Franz Josef Kaiser</a>、<a href=\"https://profiles.wordpress.org/garyc40\">Gary Cao</a>、<a href=\"https://profiles.wordpress.org/garyj\">Gary Jones</a>、<a href=\"https://profiles.wordpress.org/pento\">Gary Pendergast</a>、<a href=\"https://profiles.wordpress.org/geertdd\">Geert De Deckere</a>、<a href=\"https://profiles.wordpress.org/genkisan\">genkisan</a>、<a href=\"https://profiles.wordpress.org/georgestephanis\">George Stephanis</a>、<a href=\"https://profiles.wordpress.org/grahamarmfield\">Graham Armfield</a>、<a href=\"https://profiles.wordpress.org/webord\">Gustavo Bordoni</a>、<a href=\"https://profiles.wordpress.org/hakre\">hakre</a>、<a href=\"https://profiles.wordpress.org/harishchaudhari\">Harish Chaudhari</a>、<a href=\"https://profiles.wordpress.org/hauvong\">hauvong</a>、<a href=\"https://profiles.wordpress.org/helen\">Helen Hou-Sandí</a>、<a href=\"https://profiles.wordpress.org/herbmillerjr\">herbmillerjr</a>、<a href=\"https://profiles.wordpress.org/hew\">Hew</a>、<a href=\"https://profiles.wordpress.org/horike\">horike</a>、<a href=\"https://profiles.wordpress.org/hlashbrooke\">Hugh Lashbrooke</a>、<a href=\"https://profiles.wordpress.org/hugobaeta\">Hugo Baeta</a>、<a href=\"https://profiles.wordpress.org/iandunn\">Ian Dunn</a>、<a href=\"https://profiles.wordpress.org/ianmjones\">ianmjones</a>、<a href=\"https://profiles.wordpress.org/idealien\">idealien</a>、<a href=\"https://profiles.wordpress.org/imath\">imath</a>、<a href=\"https://profiles.wordpress.org/ipstenu\">Ipstenu (Mika Epstein)</a>、<a href=\"https://profiles.wordpress.org/jdgrimes\">J.D. Grimes</a>、<a href=\"https://profiles.wordpress.org/jacklenox\">Jack Lenox</a>、<a href=\"https://profiles.wordpress.org/jamescollins\">James Collins</a>、<a href=\"https://profiles.wordpress.org/janhenckens\">janhenckens</a>、<a href=\"https://profiles.wordpress.org/cheffheid\">Jeff de Wit</a>、<a href=\"https://profiles.wordpress.org/jfarthing84\">Jeff Farthing</a>、<a href=\"https://profiles.wordpress.org/jeremyfelt\">Jeremy Felt</a>、<a href=\"https://profiles.wordpress.org/jesin\">Jesin A</a>、<a href=\"https://profiles.wordpress.org/jipmoors\">jipmoors</a>、<a href=\"https://profiles.wordpress.org/jartes\">Joan Artes</a>、<a href=\"https://profiles.wordpress.org/joedolson\">Joe Dolson</a>、<a href=\"https://profiles.wordpress.org/joemcgill\">Joe McGill</a>、<a href=\"https://profiles.wordpress.org/yo-l1982\">Joel Bernerman</a>、<a href=\"https://profiles.wordpress.org/joen\">Joen Asmussen</a>、<a href=\"https://profiles.wordpress.org/johnbillion\">John Blackbourn</a>、<a href=\"https://profiles.wordpress.org/johneckman\">John Eckman</a>、<a href=\"https://profiles.wordpress.org/johnjamesjacoby\">John James Jacoby</a>、<a href=\"https://profiles.wordpress.org/jlevandowski\">John Levandowski</a>、<a href=\"https://profiles.wordpress.org/desrosj\">Jonathan Desrosiers</a>、<a href=\"https://profiles.wordpress.org/joostdekeijzer\">joost de keijzer</a>、<a href=\"https://profiles.wordpress.org/joostdevalk\">Joost de Valk</a>、<a href=\"https://profiles.wordpress.org/jcastaneda\">Jose Castaneda</a>、<a href=\"https://profiles.wordpress.org/joshlevinson\">Josh Levinson</a>、<a href=\"https://profiles.wordpress.org/jphase\">jphase</a>、<a href=\"https://profiles.wordpress.org/juliobox\">Julio Potier</a>、<a href=\"https://profiles.wordpress.org/kopepasah\">Justin Kopepasah</a>、<a href=\"https://profiles.wordpress.org/jtsternberg\">Justin Sternberg</a>、<a href=\"https://profiles.wordpress.org/justincwatt\">Justin Watt</a>、<a href=\"https://profiles.wordpress.org/kadamwhite\">K.Adam White</a>、<a href=\"https://profiles.wordpress.org/trepmal\">Kailey (trepmal)</a>、<a href=\"https://profiles.wordpress.org/ryelle\">Kelly Dwan</a>、<a href=\"https://profiles.wordpress.org/kevdotbadger\">Kevin Ruscoe</a>、<a href=\"https://profiles.wordpress.org/kpdesign\">Kim Parsell</a>、<a href=\"https://profiles.wordpress.org/ixkaito\">Kite</a>、<a href=\"https://profiles.wordpress.org/kovshenin\">Konstantin Kovshenin</a>、<a href=\"https://profiles.wordpress.org/obenland\">Konstantin Obenland</a>、<a href=\"https://profiles.wordpress.org/lancewillett\">Lance Willett</a>、<a href=\"https://profiles.wordpress.org/mindrun\">Leonard</a>、<a href=\"https://profiles.wordpress.org/leopeo\">Leonardo Giacone</a>、<a href=\"https://profiles.wordpress.org/lgladdy\">Liam Gladdy</a>、<a href=\"https://profiles.wordpress.org/magicroundabout\">magicroundabout</a>、<a href=\"https://profiles.wordpress.org/maimairel\">maimairel</a>、<a href=\"https://profiles.wordpress.org/mako09\">Mako</a>、<a href=\"https://profiles.wordpress.org/funkatronic\">Manny Fleurmond</a>、<a href=\"https://profiles.wordpress.org/marcelomazza\">marcelomazza</a>、<a href=\"https://profiles.wordpress.org/marcochiesi\">Marco Chiesi</a>、<a href=\"https://profiles.wordpress.org/mkaz\">Marcus Kazmierczak</a>、<a href=\"https://profiles.wordpress.org/tyxla\">Marin Atanasov</a>、<a href=\"https://profiles.wordpress.org/nofearinc\">Mario Peshev</a>、<a href=\"https://profiles.wordpress.org/clorith\">Marius (Clorith)</a>、<a href=\"https://profiles.wordpress.org/markjaquith\">Mark Jaquith</a>、<a href=\"https://profiles.wordpress.org/senff\">Mark Senff</a>、<a href=\"https://profiles.wordpress.org/markoheijnen\">Marko Heijnen</a>、<a href=\"https://profiles.wordpress.org/mzak\">Matt</a>、<a href=\"https://profiles.wordpress.org/sivel\">Matt Martz</a>、<a href=\"https://profiles.wordpress.org/matt\">Matt Mullenweg</a>、<a href=\"https://profiles.wordpress.org/mattwiebe\">Matt Wiebe</a>、<a href=\"https://profiles.wordpress.org/mboynes\">Matthew Boynes</a>、<a href=\"https://profiles.wordpress.org/mattheweppelsheimer\">Matthew Eppelsheimer</a>、<a href=\"https://profiles.wordpress.org/mattheu\">Matthew Haines-Young</a>、<a href=\"https://profiles.wordpress.org/mattyrob\">mattyrob</a>、<a href=\"https://profiles.wordpress.org/maxcutler\">Max Cutler</a>、<a href=\"https://profiles.wordpress.org/mehulkaklotar\">mehulkaklotar</a>、<a href=\"https://profiles.wordpress.org/melchoyce\">Mel Choyce</a>、<a href=\"https://profiles.wordpress.org/meloniq\">meloniq</a>、<a href=\"https://profiles.wordpress.org/mgibbs189\">mgibbs189</a>、<a href=\"https://profiles.wordpress.org/mdawaffe\">Michael Adams (mdawaffe)</a>、<a href=\"https://profiles.wordpress.org/michael-arestad\">Michael Arestad</a>、<a href=\"https://profiles.wordpress.org/tw2113\">Michael Beckwith</a>、<a href=\"https://profiles.wordpress.org/michalzuber\">michalzuber</a>、<a href=\"https://profiles.wordpress.org/mdgl\">Mike Glendinning</a>、<a href=\"https://profiles.wordpress.org/mikehansenme\">Mike Hansen</a>、<a href=\"https://profiles.wordpress.org/thaicloud\">Mike Jordan</a>、<a href=\"https://profiles.wordpress.org/mikeschinkel\">Mike Schinkel</a>、<a href=\"https://profiles.wordpress.org/mikengarrett\">MikeNGarrett</a>、<a href=\"https://profiles.wordpress.org/dimadin\">Milan Dinic</a>、<a href=\"https://profiles.wordpress.org/mmn-o\">mmn-o</a>、<a href=\"https://profiles.wordpress.org/batmoo\">Mohammad Jangda</a>、<a href=\"https://profiles.wordpress.org/momdad\">MomDad</a>、<a href=\"https://profiles.wordpress.org/morganestes\">Morgan Estes</a>、<a href=\"https://profiles.wordpress.org/morpheu5\">Morpheu5</a>、<a href=\"https://profiles.wordpress.org/Nao\">Naoko Takano</a>、<a href=\"https://profiles.wordpress.org/nathan_dawson\">nathan_dawson</a>、<a href=\"https://profiles.wordpress.org/neil_pie\">Neil Pie</a>、<a href=\"https://profiles.wordpress.org/celloexpressions\">Nick Halsey</a>、<a href=\"https://profiles.wordpress.org/nicnicnicdevos\">nicnicnicdevos</a>、<a href=\"https://profiles.wordpress.org/nikv\">Nikhil Vimal</a>、<a href=\"https://profiles.wordpress.org/ninnypants\">ninnypants</a>、<a href=\"https://profiles.wordpress.org/nitkr\">nitkr</a>、<a href=\"https://profiles.wordpress.org/nunomorgadinho\">Nuno Morgadinho</a>、<a href=\"https://profiles.wordpress.org/originalexe\">OriginalEXE</a>、<a href=\"https://profiles.wordpress.org/pareshradadiya-1\">Paresh Radadiya</a>、<a href=\"https://profiles.wordpress.org/pathawks\">Pat Hawks</a>、<a href=\"https://profiles.wordpress.org/pbearne\">Paul Bearne</a>、<a href=\"https://profiles.wordpress.org/paulschreiber\">Paul Schreiber</a>、<a href=\"https://profiles.wordpress.org/paulwilde\">Paul Wilde</a>、<a href=\"https://profiles.wordpress.org/pavelevap\">pavelevap</a>、<a href=\"https://profiles.wordpress.org/sirbrillig\">Payton Swick</a>、<a href=\"https://profiles.wordpress.org/petemall\">Pete Mall</a>、<a href=\"https://profiles.wordpress.org/gungeekatx\">Pete Nelson</a>、<a href=\"https://profiles.wordpress.org/peterwilsoncc\">Peter Wilson</a>、<a href=\"https://profiles.wordpress.org/mordauk\">Pippin Williamson</a>、<a href=\"https://profiles.wordpress.org/podpirate\">podpirate</a>、<a href=\"https://profiles.wordpress.org/postpostmodern\">postpostmodern</a>、<a href=\"https://profiles.wordpress.org/nprasath002\">Prasath Nadarajah</a>、<a href=\"https://profiles.wordpress.org/prasoon2211\">prasoon2211</a>、<a href=\"https://profiles.wordpress.org/cyman\">Primoz Cigler</a>、<a href=\"https://profiles.wordpress.org/r-a-y\">r-a-y</a>、<a href=\"https://profiles.wordpress.org/rachelbaker\">Rachel Baker</a>、<a href=\"https://profiles.wordpress.org/rahulbhangale\">rahulbhangale</a>、<a href=\"https://profiles.wordpress.org/ramiy\">Rami Yushuvaev</a>、<a href=\"https://profiles.wordpress.org/lamosty\">Rastislav Lamos</a>、<a href=\"https://profiles.wordpress.org/ravindra-pal-singh\">Ravindra Pal Singh</a>、<a href=\"https://profiles.wordpress.org/rianrietveld\">Rian Rietveld</a>、<a href=\"https://profiles.wordpress.org/ritteshpatel\">Ritesh Patel</a>、<a href=\"https://profiles.wordpress.org/miqrogroove\">Robert Chapin</a>、<a href=\"https://profiles.wordpress.org/rodrigosprimo\">Rodrigo Primo</a>、<a href=\"https://profiles.wordpress.org/ryan\">Ryan Boren</a>、<a href=\"https://profiles.wordpress.org/rmarks\">Ryan Marks</a>、<a href=\"https://profiles.wordpress.org/sagarjadhav\">sagarjadhav</a>、<a href=\"https://profiles.wordpress.org/samo9789\">samo9789</a>、<a href=\"https://profiles.wordpress.org/samuelsidler\">samuelsidler</a>、<a href=\"https://profiles.wordpress.org/sgrant\">Scott Grant</a>、<a href=\"https://profiles.wordpress.org/coffee2code\">Scott Reilly</a>、<a href=\"https://profiles.wordpress.org/wonderboymusic\">Scott Taylor</a>、<a href=\"https://profiles.wordpress.org/scottgonzalez\">scott.gonzalez</a>、<a href=\"https://profiles.wordpress.org/greglone\">ScreenfeedFr</a>、<a href=\"https://profiles.wordpress.org/scribu\">scribu</a>、<a href=\"https://profiles.wordpress.org/seanchayes\">Sean Hayes</a>、<a href=\"https://profiles.wordpress.org/sergejmueller\">Sergej Muller</a>、<a href=\"https://profiles.wordpress.org/sergeybiryukov\">Sergey Biryukov</a>、<a href=\"https://profiles.wordpress.org/sevenspark\">sevenspark</a>、<a href=\"https://profiles.wordpress.org/simonwheatley\">Simon Wheatley</a>、<a href=\"https://profiles.wordpress.org/siobhan\">Siobhan</a>、<a href=\"https://profiles.wordpress.org/sippis\">sippis</a>、<a href=\"https://profiles.wordpress.org/slobodanmanic\">Slobodan Manic</a>、<a href=\"https://profiles.wordpress.org/solarissmoke\">solarissmoke</a>、<a href=\"https://profiles.wordpress.org/stephdau\">Stephane Daury</a>、<a href=\"https://profiles.wordpress.org/sillybean\">Stephanie Leary</a>、<a href=\"https://profiles.wordpress.org/netweb\">Stephen Edgar</a>、<a href=\"https://profiles.wordpress.org/stevegrunwell\">Steve Grunwell</a>、<a href=\"https://profiles.wordpress.org/stevehickeydesign\">stevehickeydesign</a>、<a href=\"https://profiles.wordpress.org/stevenkword\">Steven Word</a>、<a href=\"https://profiles.wordpress.org/iamtakashi\">Takashi Irie</a>、<a href=\"https://profiles.wordpress.org/hissy\">Takuro Hishikawa</a>、<a href=\"https://profiles.wordpress.org/themiked\">theMikeD</a>、<a href=\"https://profiles.wordpress.org/thomaswm\">thomaswm</a>、<a href=\"https://profiles.wordpress.org/ipm-frommen\">Thorsten Frommen</a>、<a href=\"https://profiles.wordpress.org/tillkruess\">Till</a>、<a href=\"https://profiles.wordpress.org/timothyblynjacobs\">Timothy Jacobs</a>、<a href=\"https://profiles.wordpress.org/tiqbiz\">tiqbiz</a>、<a href=\"https://profiles.wordpress.org/tmatsuur\">tmatsuur</a>、<a href=\"https://profiles.wordpress.org/tmeister\">tmeister</a>、<a href=\"https://profiles.wordpress.org/tschutter\">Tobias Schutter</a>、<a href=\"https://profiles.wordpress.org/tobiasbg\">TobiasBg</a>、<a href=\"https://profiles.wordpress.org/tomdxw\">tomdxw</a>、<a href=\"https://profiles.wordpress.org/travisnorthcutt\">Travis Northcutt</a>、<a href=\"https://profiles.wordpress.org/trishasalas\">trishasalas</a>、<a href=\"https://profiles.wordpress.org/tywayne\">Ty Carlson</a>、<a href=\"https://profiles.wordpress.org/uamv\">UaMV</a>、<a href=\"https://profiles.wordpress.org/desaiuditd\">Udit Desai</a>、<a href=\"https://profiles.wordpress.org/sorich87\">Ulrich Sossou</a>、<a href=\"https://profiles.wordpress.org/veritaserum\">Veritaserum</a>、<a href=\"https://profiles.wordpress.org/voldemortensen\">voldemortensen</a>、<a href=\"https://profiles.wordpress.org/volodymyrc\">VolodymyrC</a>、<a href=\"https://profiles.wordpress.org/vortfu\">vortfu</a>、<a href=\"https://profiles.wordpress.org/welcher\">welcher</a>、<a href=\"https://profiles.wordpress.org/westonruter\">Weston Ruter</a>、<a href=\"https://profiles.wordpress.org/earnjam\">William Earnhardt</a>和<a href=\"https://profiles.wordpress.org/wordpressorru\">WordPressor</a>。</p>\n<p>特别感谢<a href=\"http://siobhanmckeown.com/\">Siobhan McKeown</a>制作发布视频及<a href=\"http://camikaos.com/\">Cami Kaos</a>为视频配音。</p>\n<p>最后，让我们感谢为发布视频制作了字幕的贡献者，这次的发布视频被翻译成了30种语言！</p>\n<p><a href=\"https://profiles.wordpress.org/adrianpop\">Adrian Pop</a>、<a href=\"https://profiles.wordpress.org/deconf\">Alin Marcu</a>、<a href=\"https://profiles.wordpress.org/bagerathan\">Bagerathan Sivarajah</a>、<a href=\"https://profiles.wordpress.org/besnik\">Besnik</a>、<a href=\"https://profiles.wordpress.org/bjornjohansen\">Bjørn Johansen</a>、Chantal Coolsma、<a href=\"https://profiles.wordpress.org/cubells\">cubells</a>、Daisuke Takahashi、<a href=\"https://profiles.wordpress.org/dianakc\">Diana K. Cury</a>、<a href=\"https://profiles.wordpress.org/djzone\">DjZoNe</a>、<a href=\"https://profiles.wordpress.org/dyrer\">dyrer</a>、<a href=\"https://profiles.wordpress.org/semblance\">Elzette Roelofse</a>、<a href=\"https://profiles.wordpress.org/fxbtacoverdoenard\">fxbtacoverdoenard</a>、<a href=\"https://profiles.wordpress.org/gabriel-reguly\">Gabriel Reguly</a>、<a href=\"https://profiles.wordpress.org/miss_jwo\">Jenny Wong</a>、<a href=\"https://profiles.wordpress.org/garyj\">Gary Jones</a>、<a href=\"https://profiles.wordpress.org/hgmb\">Håvard Grimelid</a>、<a href=\"https://profiles.wordpress.org/intoxstudio\">Joachim Jensen</a>、<a href=\"https://profiles.wordpress.org/jimmyxu\">Jimmy Xu</a>、<a href=\"https://profiles.wordpress.org/nukaga\">Junko Nukaga</a>、<a href=\"https://profiles.wordpress.org/pokeraitis\">Justina</a>、<a href=\"https://profiles.wordpress.org/kosvrouvas\">Kostas Vrouvas</a>、<a href=\"https://profiles.wordpress.org/eclare\">Krzysztof Trynkiewicz</a>、<a href=\"https://profiles.wordpress.org/goblindegook\">Luís Rodrigues</a>、<a href=\"https://profiles.wordpress.org/luisrull\">Luis Rull</a>、<a href=\"https://profiles.wordpress.org/culturemark\">Mark Thomas Gazel </a>、<a href=\"https://profiles.wordpress.org/clorith\">Marius Jensen</a>、<a href=\"https://profiles.wordpress.org/matthee\">matthee</a>、<a href=\"https://profiles.wordpress.org/damst\">Mattias Tengblad</a>、Matúš Záhradník、Mayuko Moriyama、<a href=\"https://profiles.wordpress.org/michalvittek\">Michal Vittek</a>、<a href=\"https://profiles.wordpress.org/dimadin\">Milan Dinić</a>、<a href=\"https://profiles.wordpress.org/mrshemek\">MrShemek</a>、<a href=\"https://profiles.wordpress.org/Nao\">Naoko Takano</a>、<a href=\"https://profiles.wordpress.org/pavelevap\">pavelevap</a>、<a href=\"https://profiles.wordpress.org/peterhoob\">Peter Holme Obrestad</a>、<a href=\"https://profiles.wordpress.org/petya\">Petya Raykovska</a>、Przemysław Mirota、<a href=\"https://profiles.wordpress.org/qraczek\">qraczek</a>、<a href=\"https://profiles.wordpress.org/bi0xid\">Rafa Poveda</a>、<a href=\"https://profiles.wordpress.org/ramiy\">Rami Yushuvaev</a>、<a href=\"https://profiles.wordpress.org/rasheed\">Rasheed Bydousi</a>、<a href=\"https://profiles.wordpress.org/gwgan\">Rhoslyn Prys</a>、<a href=\"https://profiles.wordpress.org/robee\">Robert Axelsen</a>、<a href=\"https://profiles.wordpress.org/sergeybiryukov\">Sergey Biryukov</a>、<a href=\"https://profiles.wordpress.org/siobhyb\">Siobhan Bamber</a>、<a href=\"https://profiles.wordpress.org/netweb\">Stephen Edgar</a>、<a href=\"https://profiles.wordpress.org/tohave\">ک To Have داشتن</a>、<a href=\"https://profiles.wordpress.org/zodiac1978\">Torsten Landsiedel</a>、<a href=\"https://profiles.wordpress.org/egalego\">Victor J. Quesada</a>、<a href=\"https://profiles.wordpress.org/wolly\">Wolly</a>、<a href=\"https://profiles.wordpress.org/xavivars\">Xavi Ivars</a>和<a href=\"https://profiles.wordpress.org/xibe\">Xavier Borderie</a>。</p>\n<p>如果您想帮忙，请查阅<a href=\"https://make.wordpress.org/\">Make WordPress</a>和我们的<a href=\"https://make.wordpress.org/core/\">核心开发博客</a>。感谢您选择WordPress，我们4.3见！\n</div>\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:36:\"http://wellformedweb.org/CommentAPI/\";a:1:{s:10:\"commentRss\";a:1:{i:0;a:5:{s:4:\"data\";s:48:\"https://cn.wordpress.org/2015/04/24/powell/feed/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:38:\"http://purl.org/rss/1.0/modules/slash/\";a:1:{s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:2:\"27\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:8;a:6:{s:4:\"data\";s:61:\"\n		\n		\n				\n				\n		\n				\n\n		\n				\n								\n							\n		\n							\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:5:{s:0:\"\";a:7:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:24:\"WordPress 4.1“Dinah”\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:42:\"https://cn.wordpress.org/2014/12/23/dinah/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:51:\"https://cn.wordpress.org/2014/12/23/dinah/#comments\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Tue, 23 Dec 2014 01:34:27 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:1:{i:0;a:5:{s:4:\"data\";s:8:\"Releases\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"https://cn.wordpress.org/?p=959\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:49:\"WordPress 4.1简体中文版现已开放下载。\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:8:\"Jimmy Xu\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:25152:\"<div style=\"width: 692px\">\nWordPress 4.1简体中文版现已<a href=\"https://cn.wordpress.org/releases/\">开放下载</a>，或在您的WordPress仪表盘中升级。我们将此版本命名为“Dinah”，以纪念爵士歌手<a href=\"https://en.wikipedia.org/wiki/Dinah_Washington\">黛娜·华盛顿</a>。WordPress 4.1中的新功能帮助您聚焦于您的写作，新的默认主题也能让您有型地展示您的文章。</p>\n<hr />\n<h2 style=\"text-align: center;margin: 15px 0 20px;font-family: sans-serif;font-size: 26px\">向您介绍Twenty Fifteen</h2>\n<p><img class=\"aligncenter size-large wp-image-3389\" src=\"https://wordpress.org/news/files/2014/12/2015-laptop-1024x533.png\" alt=\"2015-laptop\" width=\"692\" height=\"360\" /></p>\n<h3 style=\"margin: 0 0 5px 0;font-size: 16px;font-weight: bold\">Twenty Fifteen，我们最新的默认主题，是一套以明晰为中心的面向博客的主题。</h3>\n<p><img class=\"alignright wp-image-3426 size-medium\" src=\"https://wordpress.org/news/files/2014/12/2015-phones-languages-small-300x250.png\" alt=\"\" width=\"300\" height=\"250\" />感谢<a href=\"\\&quot;%s\\&quot;\">Google的Noto字体家族</a>，Twenty Fifteen有着无懈可击的语言支持。</p>\n<p>简单的排版在任何屏幕尺寸上都容易阅读。</p>\n<p>您的内容永远居于最中，无论是在手机、平板、膝上型电脑还是台式机上阅读都是如此。</p>\n<hr style=\"clear: both\" />\n<h2 style=\"text-align: center;margin: 15px 0 20px;font-family: sans-serif;font-size: 26px\">免打扰写作</h2>\n<p><img class=\"aligncenter size-large wp-image-3392\" src=\"https://wordpress.org/news/files/2014/12/dfw-screen-1024x614.png\" alt=\"dfw-screen\" width=\"692\" height=\"415\" /></p>\n<h3 style=\"text-align: center;margin: 0 0 5px 0;font-size: 16px;font-weight: bold\"><em>去写吧</em></h3>\n<p>有时，您需要集中精力遣词造句。试试打开<strong>免打扰写作模式</strong>，在您开始打字时，所有会让您分心的东西都会淡出，让您只注意您的写作。您的所有编辑工具都会在您需要用到它们时立刻出现。</p>\n<hr />\n<h2 style=\"text-align: center;margin: 15px 0 20px;font-family: sans-serif;font-size: 26px\">细节之处</h2>\n<h5><strong><img class=\"alignleft wp-image-3405\" src=\"https://wordpress.org/news/files/2014/12/icon-language2.png\" alt=\"\" width=\"80\" height=\"80\" /></strong>选择语言</h5>\n<p>现在，WordPress 4.1已经有了40多种语言版本，我们也一直在进行更多翻译。您可以在常规选项中切换到任意一种语言。</p>\n<h5><strong><img class=\"alignleft wp-image-3406\" src=\"https://wordpress.org/news/files/2014/12/icon-logout1.png\" alt=\"\" width=\"80\" height=\"80\" /></strong>随处登出</h5>\n<p>如果您曾经担心过忘记在公用电脑上登出，您现在可以前往您的个人资料页面并登出您的所有会话。</p>\n<h5><strong><img class=\"alignleft wp-image-3407\" src=\"https://wordpress.org/news/files/2014/12/icon-vine1.png\" alt=\"\" width=\"80\" height=\"80\" /></strong>Vine嵌入</h5>\n<p>嵌入来自Vine的视频也已被简化为了将URL粘贴进文章里。查看我们支持的嵌入的<a href=\"https://codex.wordpress.org/Embeds\">完整列表</a>。</p>\n<h5><strong><img class=\"alignleft wp-image-3408\" src=\"https://wordpress.org/news/files/2014/12/icon-recommended1.png\" alt=\"\" width=\"80\" height=\"80\" /></strong>插件推荐</h5>\n<p>插件安装器现在会为您推荐值得一试的插件。推荐是基于您和其他用户已经安装的插件做出的。</p>\n<hr />\n<h2 style=\"text-align: center;margin: 15px 0 20px;font-family: sans-serif;font-size: 26px\">引擎盖下</h2>\n<h5>复杂查询</h5>\n<p>元数据、日期和信息查询现已支持高级条件逻辑，如嵌套语句和多种操作符——<code>A AND ( B OR C )</code>。</p>\n<h5>定制器API</h5>\n<p>定制器现在能够根据当前预览的页面有条件地显示面板和小节。</p>\n<h5>主题中的<code>&lt;title&gt;</code>标签</h5>\n<p><code>add_theme_support( \'title-tag\' )</code>让WordPress来处理复杂的页面标题。</p>\n<h5>开发者参考</h5>\n<p>通过对内联代码文档的改善，<a href=\"https://developer.wordpress.org/reference/\">开发者参考</a>现在比以往任何时候都更完整。</p>\n<hr />\n<h2 style=\"text-align: center;margin: 15px 0 20px;font-family: sans-serif;font-size: 26px\">合唱团</h2>\n<p>本次发布由<a href=\"https://profiles.wordpress.org/johnbillion\">John Blackbourn</a>领头，并得到了如下个人的帮助。在您喜欢的音乐服务中听听黛娜·华盛顿，并看看下面这些个人资料吧：</p>\n<p><a href=\"https://profiles.wordpress.org/aaroncampbell\">Aaron D. Campbell</a>、<a href=\"https://profiles.wordpress.org/jorbin\">Aaron Jorbin</a>、<a href=\"https://profiles.wordpress.org/adamsilverstein\">Adam Silverstein</a>、<a href=\"https://profiles.wordpress.org/akumria\">akumria</a>、<a href=\"https://profiles.wordpress.org/xknown\">Alex Concha</a>、<a href=\"https://profiles.wordpress.org/viper007bond\">Alex Mills (Viper007Bond)</a>、<a href=\"https://profiles.wordpress.org/tellyworth\">Alex Shiels</a>、<a href=\"https://profiles.wordpress.org/collinsinternet\">Allan Collins</a>、<a href=\"https://profiles.wordpress.org/momo360modena\">Amaury Balmer</a>、<a href=\"https://profiles.wordpress.org/amruta123b\">Amruta Bhosale</a>、<a href=\"https://profiles.wordpress.org/afercia\">Andrea Fercia</a>、<a href=\"https://profiles.wordpress.org/andg\">Andrea Gandino</a>、<a href=\"https://profiles.wordpress.org/sumobi\">Andrew Munro (sumobi)</a>、<a href=\"https://profiles.wordpress.org/nacin\">Andrew Nacin</a>、<a href=\"https://profiles.wordpress.org/azaozz\">Andrew Ozz</a>、<a href=\"https://profiles.wordpress.org/andrewryno\">Andrew Ryno</a>、<a href=\"https://profiles.wordpress.org/rarst\">Andrey &#8220;Rarst&#8221; Savchenko</a>、<a href=\"https://profiles.wordpress.org/ankitgadertcampcom\">Ankit Gade</a>、<a href=\"https://profiles.wordpress.org/ankit-k-gupta\">Ankit K Gupta</a>、<a href=\"https://profiles.wordpress.org/antpb\">antpb</a>、<a href=\"https://profiles.wordpress.org/arippberger\">arippberger</a>、<a href=\"https://profiles.wordpress.org/filosofo\">Austin Matzko</a>、<a href=\"https://profiles.wordpress.org/bainternet\">Bainternet</a>、<a href=\"https://profiles.wordpress.org/barrykooij\">Barry Kooij</a>、<a href=\"https://profiles.wordpress.org/empireoflight\">Ben Dunkle</a>、<a href=\"https://profiles.wordpress.org/benjmay\">Ben May</a>、<a href=\"https://profiles.wordpress.org/neoxx\">Bernhard Riedl</a>、<a href=\"https://profiles.wordpress.org/birgire\">Birgir Erlendsson (birgire)</a>、<a href=\"https://profiles.wordpress.org/bobbingwide\">bobbingwide</a>、<a href=\"https://profiles.wordpress.org/boonebgorges\">Boone B. Gorges</a>、<a href=\"https://profiles.wordpress.org/bradyvercher\">Brady Vercher</a>、<a href=\"https://profiles.wordpress.org/bramd\">Bram Duvigneau</a>、<a href=\"https://profiles.wordpress.org/kraftbj\">Brandon Kraft</a>、<a href=\"https://profiles.wordpress.org/briandichiara\">Brian DiChiara</a>、<a href=\"https://profiles.wordpress.org/rzen\">Brian Richards</a>、<a href=\"https://profiles.wordpress.org/bswatson\">Brian Watson</a>、<a href=\"https://profiles.wordpress.org/camdensegal\">Camden Segal</a>、<a href=\"https://profiles.wordpress.org/captaintheme\">Captain Theme</a>、<a href=\"https://profiles.wordpress.org/hiwhatsup\">Carlos Zuniga</a>、<a href=\"https://profiles.wordpress.org/caspie\">Caspie</a>、<a href=\"https://profiles.wordpress.org/ccprice\">ccprice</a>、<a href=\"https://profiles.wordpress.org/mackensen\">Charles Fulton</a>、<a href=\"https://profiles.wordpress.org/chrico\">ChriCo</a>、<a href=\"https://profiles.wordpress.org/aprea\">Chris Aprea</a>、<a href=\"https://profiles.wordpress.org/chrisbliss18\">Chris Jean</a>、<a href=\"https://profiles.wordpress.org/cmmarslender\">Chris Marslender</a>、<a href=\"https://profiles.wordpress.org/jazzs3quence\">Chris Reynolds</a>、<a href=\"https://profiles.wordpress.org/chriscct7\">chriscct7</a>、<a href=\"https://profiles.wordpress.org/chrisl27\">chrisl27</a>、<a href=\"https://profiles.wordpress.org/cfoellmann\">Christian Foellmann</a>、<a href=\"https://profiles.wordpress.org/cfinke\">Christopher Finke</a>、<a href=\"https://profiles.wordpress.org/cyclometh\">Corey Snow</a>、<a href=\"https://profiles.wordpress.org/corphi\">Corphi</a>、<a href=\"https://profiles.wordpress.org/curtjen\">curtjen</a>、<a href=\"https://profiles.wordpress.org/colorful-tones\">Damon Cook</a>、<a href=\"https://profiles.wordpress.org/dancameron\">Dan Cameron</a>、<a href=\"https://profiles.wordpress.org/danielbachhuber\">Daniel Bachhuber</a>、<a href=\"https://profiles.wordpress.org/convissor\">Daniel Convissor</a>、<a href=\"https://profiles.wordpress.org/nerrad\">Darren Ethier (nerrad)</a>、<a href=\"https://profiles.wordpress.org/koop\">Daryl Koopersmith</a>、<a href=\"https://profiles.wordpress.org/dmchale\">Dave McHale</a>、<a href=\"https://profiles.wordpress.org/davidakennedy\">David A. Kennedy</a>、<a href=\"https://profiles.wordpress.org/dlh\">David Herrera</a>、<a href=\"https://profiles.wordpress.org/davidjlaietta\">David Laietta</a>、<a href=\"https://profiles.wordpress.org/technical_mastermind\">David Wood</a>、<a href=\"https://profiles.wordpress.org/davidthemachine\">DavidTheMachine</a>、<a href=\"https://profiles.wordpress.org/dcavins\">dcavins</a>、<a href=\"https://profiles.wordpress.org/realloc\">Dennis Ploetner</a>、<a href=\"https://profiles.wordpress.org/dd32\">Dion Hulse</a>、<a href=\"https://profiles.wordpress.org/wedi\">Dirk Weise</a>、<a href=\"https://profiles.wordpress.org/ocean90\">Dominik Schilling</a>、<a href=\"https://profiles.wordpress.org/dominikschwind-1\">Dominik Schwind</a>、<a href=\"https://profiles.wordpress.org/drewapicture\">Drew Jaynes</a>、<a href=\"https://profiles.wordpress.org/dustyf\">Dustin Filippini</a>、<a href=\"https://profiles.wordpress.org/dustinhartzler\">Dustin Hartzler</a>、<a href=\"https://profiles.wordpress.org/eliorivero\">Elio Rivero</a>、<a href=\"https://profiles.wordpress.org/ebinnion\">Eric Binnion</a>、<a href=\"https://profiles.wordpress.org/ew_holmes\">Eric Holmes</a>、<a href=\"https://profiles.wordpress.org/ericlewis\">Eric Lewis</a>、<a href=\"https://profiles.wordpress.org/fab1en\">Fabien Quatravaux</a>、<a href=\"https://profiles.wordpress.org/florianziegler\">florianziegler</a>、<a href=\"https://profiles.wordpress.org/hereswhatidid\">Gabe Shackle</a>、<a href=\"https://profiles.wordpress.org/garyc40\">Gary Cao</a>、<a href=\"https://profiles.wordpress.org/pento\">Gary Pendergast</a>、<a href=\"https://profiles.wordpress.org/soulseekah\">Gennady Kovshenin</a>、<a href=\"https://profiles.wordpress.org/babbardel\">George Olaru</a>、<a href=\"https://profiles.wordpress.org/georgestephanis\">George Stephanis</a>、<a href=\"https://profiles.wordpress.org/gregrickaby\">Greg Rickaby</a>、<a href=\"https://profiles.wordpress.org/gcorne\">Gregory Cornelius</a>、<a href=\"https://profiles.wordpress.org/tivnet\">Gregory Karpinsky (@tivnet)</a>、<a href=\"https://profiles.wordpress.org/bordoni\">Gustavo Bordoni</a>、<a href=\"https://profiles.wordpress.org/hardy101\">hardy101</a>、<a href=\"https://profiles.wordpress.org/hauvong\">hauvong</a>、<a href=\"https://profiles.wordpress.org/helen\">Helen Hou-Sandí</a>、<a href=\"https://profiles.wordpress.org/heshiming\">heshiming</a>、<a href=\"https://profiles.wordpress.org/honeysilvas\">honeysilvas</a>、<a href=\"https://profiles.wordpress.org/hugodelgado\">hugodelgado</a>、<a href=\"https://profiles.wordpress.org/iandstewart\">Ian Stewart</a>、<a href=\"https://profiles.wordpress.org/ianmjones\">ianmjones</a>、<a href=\"https://profiles.wordpress.org/igmoweb\">Ignacio Cruz Moreno</a>、<a href=\"https://profiles.wordpress.org/imath\">imath</a>、<a href=\"https://profiles.wordpress.org/ipstenu\">Ipstenu (Mika Epstein)</a>、<a href=\"https://profiles.wordpress.org/ivankristianto\">Ivan Kristianto</a>、<a href=\"https://profiles.wordpress.org/jdgrimes\">J.D. Grimes</a>、<a href=\"https://profiles.wordpress.org/jaimieolmstead\">jaimieolmstead</a>、<a href=\"https://profiles.wordpress.org/jakubtyrcha\">jakub.tyrcha</a>、<a href=\"https://profiles.wordpress.org/janhenckens\">janhenckens</a>、<a href=\"https://profiles.wordpress.org/avryl\">Janneke Van Dorpe</a>、<a href=\"https://profiles.wordpress.org/japh\">Japh</a>、<a href=\"https://profiles.wordpress.org/jwenerd\">Jared Wenerd</a>、<a href=\"https://profiles.wordpress.org/jarednova\">jarednova</a>、<a href=\"https://profiles.wordpress.org/jeanyoungkim\">jeanyoungkim</a>、<a href=\"https://profiles.wordpress.org/jfarthing84\">Jeff Farthing</a>、<a href=\"https://profiles.wordpress.org/jeffstieler\">Jeff Stieler</a>、<a href=\"https://profiles.wordpress.org/jeremyfelt\">Jeremy Felt</a>、<a href=\"https://profiles.wordpress.org/jeherve\">Jeremy Herve</a>、<a href=\"https://profiles.wordpress.org/jesin\">Jesin A</a>、<a href=\"https://profiles.wordpress.org/jayjdk\">Jesper Johansen (jayjdk)</a>、<a href=\"https://profiles.wordpress.org/engelen\">Jesper van Engelen</a>、<a href=\"https://profiles.wordpress.org/jessepollak\">Jesse Pollak</a>、<a href=\"https://profiles.wordpress.org/jipmoors\">jipmoors</a>、<a href=\"https://profiles.wordpress.org/joedolson\">Joe Dolson</a>、<a href=\"https://profiles.wordpress.org/joemcgill\">Joe McGill</a>、<a href=\"https://profiles.wordpress.org/johneckman\">John Eckman</a>、<a href=\"https://profiles.wordpress.org/johnrom\">johnrom</a>、<a href=\"https://profiles.wordpress.org/johnstonphilip\">johnstonphilip</a>、<a href=\"https://profiles.wordpress.org/jb510\">Jon Brown</a>、<a href=\"https://profiles.wordpress.org/duck_\">Jon Cave</a>、<a href=\"https://profiles.wordpress.org/jbrinley\">Jonathan Brinley</a>、<a href=\"https://profiles.wordpress.org/desrosj\">Jonathan Desrosiers</a>、<a href=\"https://profiles.wordpress.org/joostdevalk\">Joost de Valk</a>、<a href=\"https://profiles.wordpress.org/softmodeling\">Jordi Cabot</a>、<a href=\"https://profiles.wordpress.org/joshuaabenazer\">Joshua Abenazer</a>、<a href=\"https://profiles.wordpress.org/tai\">JOTAKI Taisuke</a>、<a href=\"https://profiles.wordpress.org/jrf\">jrf</a>、<a href=\"https://profiles.wordpress.org/julien731\">julien731</a>、<a href=\"https://profiles.wordpress.org/justinsainton\">Justin Sainton</a>、<a href=\"https://profiles.wordpress.org/jtsternberg\">Justin Sternberg</a>、<a href=\"https://profiles.wordpress.org/kadamwhite\">K.Adam White</a>、<a href=\"https://profiles.wordpress.org/trepmal\">Kailey (trepmal)</a>、<a href=\"https://profiles.wordpress.org/ixkaito\">Kaito</a>、<a href=\"https://profiles.wordpress.org/kamelkev\">kamelkev</a>、<a href=\"https://profiles.wordpress.org/karpstrucking\">karpstrucking</a>、<a href=\"https://profiles.wordpress.org/keesiemeijer\">keesiemeijer</a>、<a href=\"https://profiles.wordpress.org/ryelle\">Kelly Dwan</a>、<a href=\"https://profiles.wordpress.org/kevinlangleyjr\">Kevin Langley</a>、<a href=\"https://profiles.wordpress.org/kdoran\">Kiko Doran</a>、<a href=\"https://profiles.wordpress.org/kpdesign\">Kim Parsell</a>、<a href=\"https://profiles.wordpress.org/kwight\">Kirk Wight</a>、<a href=\"https://profiles.wordpress.org/kitchin\">kitchin</a>、<a href=\"https://profiles.wordpress.org/knutsp\">Knut Sparhell</a>、<a href=\"https://profiles.wordpress.org/kovshenin\">Konstantin Kovshenin</a>、<a href=\"https://profiles.wordpress.org/obenland\">Konstantin Obenland</a>、<a href=\"https://profiles.wordpress.org/kosvrouvas\">Kostas Vrouvas</a>、<a href=\"https://profiles.wordpress.org/kraftner\">kraftner</a>、<a href=\"https://profiles.wordpress.org/kristastevens\">kristastevens</a>、<a href=\"https://profiles.wordpress.org/kurtpayne\">Kurt Payne</a>、<a href=\"https://profiles.wordpress.org/lancewillett\">Lance Willett</a>、<a href=\"https://profiles.wordpress.org/offereins\">Laurens Offereins</a>、<a href=\"https://profiles.wordpress.org/linuxologos\">linuxologos</a>、<a href=\"https://profiles.wordpress.org/ideag\">Liuiza Arunas</a>、<a href=\"https://profiles.wordpress.org/loushou\">loushou</a>、<a href=\"https://profiles.wordpress.org/latz\">Lutz Schroer</a>、<a href=\"https://profiles.wordpress.org/manoz69\">Manoz69</a>、<a href=\"https://profiles.wordpress.org/mantismamita\">mantismamita</a>、<a href=\"https://profiles.wordpress.org/marcosf\">marco</a>、<a href=\"https://profiles.wordpress.org/nofearinc\">Mario Peshev</a>、<a href=\"https://profiles.wordpress.org/clorith\">Marius (Clorith)</a>、<a href=\"https://profiles.wordpress.org/landakram\">Mark Hudnall</a>、<a href=\"https://profiles.wordpress.org/markjaquith\">Mark Jaquith</a>、<a href=\"https://profiles.wordpress.org/senff\">Mark Senff</a>、<a href=\"https://profiles.wordpress.org/markoheijnen\">Marko Heijnen</a>、<a href=\"https://profiles.wordpress.org/marsjaninzmarsa\">marsjaninzmarsa</a>、<a href=\"https://profiles.wordpress.org/matveb\">Matias Ventura</a>、<a href=\"https://profiles.wordpress.org/matt\">Matt Mullenweg</a>、<a href=\"https://profiles.wordpress.org/mattwiebe\">Matt Wiebe</a>、<a href=\"https://profiles.wordpress.org/mboynes\">Matthew Boynes</a>、<a href=\"https://profiles.wordpress.org/mattheu\">Matthew Haines-Young</a>、<a href=\"https://profiles.wordpress.org/mattkeys\">mattkeys</a>、<a href=\"https://profiles.wordpress.org/mlteal\">Maura Teal</a>、<a href=\"https://profiles.wordpress.org/melchoyce\">Mel Choyce</a>、<a href=\"https://profiles.wordpress.org/merty\">Mert Yazicioglu</a>、<a href=\"https://profiles.wordpress.org/mdawaffe\">Michael Adams (mdawaffe)</a>、<a href=\"https://profiles.wordpress.org/michael-arestad\">Michael Arestad</a>、<a href=\"https://profiles.wordpress.org/tw2113\">Michael Beckwith</a>、<a href=\"https://profiles.wordpress.org/cainm\">Michael Cain</a>、<a href=\"https://profiles.wordpress.org/smashcut\">Michael Pick</a>、<a href=\"https://profiles.wordpress.org/michalzuber\">michalzuber</a>、<a href=\"https://profiles.wordpress.org/chellycat\">Michelle Langston</a>、<a href=\"https://profiles.wordpress.org/mcsf\">Miguel Fonseca</a>、<a href=\"https://profiles.wordpress.org/mikehansenme\">Mike Hansen</a>、<a href=\"https://profiles.wordpress.org/mikejolley\">Mike Jolley</a>、<a href=\"https://profiles.wordpress.org/mnelson4\">Mike Nelson</a>、<a href=\"https://profiles.wordpress.org/dh-shredder\">Mike Schroder</a>、<a href=\"https://profiles.wordpress.org/mikeyarce\">Mikey Arce</a>、<a href=\"https://profiles.wordpress.org/studionashvegas\">Mitch Canter (studionashvegas)</a>、<a href=\"https://profiles.wordpress.org/morganestes\">Morgan Estes</a>、<a href=\"https://profiles.wordpress.org/mor10\">Morten Rand-Hendriksen</a>、<a href=\"https://profiles.wordpress.org/mvd7793\">mvd7793</a>、<a href=\"https://profiles.wordpress.org/alex-ye\">Nashwan Doaqan</a>、<a href=\"https://profiles.wordpress.org/niallkennedy\">Niall Kennedy</a>、<a href=\"https://profiles.wordpress.org/celloexpressions\">Nick Halsey</a>、<a href=\"https://profiles.wordpress.org/nikv\">Nikhil Vimal (NikV)</a>、<a href=\"https://profiles.wordpress.org/nikolovtmw\">Nikola Nikolov</a>、<a href=\"https://profiles.wordpress.org/nobleclem\">nobleclem</a>、<a href=\"https://profiles.wordpress.org/noplanman\">noplanman</a>、<a href=\"https://profiles.wordpress.org/nvwd\">Nowell VanHoesen</a>、<a href=\"https://profiles.wordpress.org/originalexe\">OriginalEXE</a>、<a href=\"https://profiles.wordpress.org/p_enrique\">p_enrique</a>、<a href=\"https://profiles.wordpress.org/pushplaybang\">Paul</a>、<a href=\"https://profiles.wordpress.org/pauldewouters\">Paul de Wouters</a>、<a href=\"https://profiles.wordpress.org/paulschreiber\">Paul Schreiber</a>、<a href=\"https://profiles.wordpress.org/paulwilde\">Paul Wilde</a>、<a href=\"https://profiles.wordpress.org/pavelevap\">pavelevap</a>、<a href=\"https://profiles.wordpress.org/peterchester\">Peter Chester</a>、<a href=\"https://profiles.wordpress.org/donutz\">Peter J. Herrel</a>、<a href=\"https://profiles.wordpress.org/westi\">Peter Westwood</a>、<a href=\"https://profiles.wordpress.org/peterwilsoncc\">Peter Wilson</a>、<a href=\"https://profiles.wordpress.org/philiparthurmoore\">Philip Arthur Moore</a>、<a href=\"https://profiles.wordpress.org/phpmypython\">phpmypython</a>、<a href=\"https://profiles.wordpress.org/mordauk\">Pippin Williamson</a>、<a href=\"https://profiles.wordpress.org/nprasath002\">Prasath Nadarajah</a>、<a href=\"https://profiles.wordpress.org/psycleuk\">psycleuk</a>、<a href=\"https://profiles.wordpress.org/ptahdunbar\">Ptah Dunbar</a>、<a href=\"https://profiles.wordpress.org/quietnic\">quietnic</a>、<a href=\"https://profiles.wordpress.org/rachelbaker\">Rachel Baker</a>、<a href=\"https://profiles.wordpress.org/ramiy\">Rami Yushuvaev</a>、<a href=\"https://profiles.wordpress.org/ramiabraham\">ramiabraham</a>、<a href=\"https://profiles.wordpress.org/greuben\">Reuben Gunday</a>、<a href=\"https://profiles.wordpress.org/rianrietveld\">Rian Rietveld</a>、<a href=\"https://profiles.wordpress.org/richardmtl\">Richard Archambault</a>、<a href=\"https://profiles.wordpress.org/rickalee\">Ricky Lee Whittemore</a>、<a href=\"https://profiles.wordpress.org/miqrogroove\">Robert Chapin</a>、<a href=\"https://profiles.wordpress.org/rodrigosprimo\">Rodrigo Primo</a>、<a href=\"https://profiles.wordpress.org/ryan\">Ryan Boren</a>、<a href=\"https://profiles.wordpress.org/ryankienstra\">Ryan Kienstra</a>、<a href=\"https://profiles.wordpress.org/rmccue\">Ryan McCue</a>、<a href=\"https://profiles.wordpress.org/sakinshrestha\">Sakin Shrestha</a>、<a href=\"https://profiles.wordpress.org/samhotchkiss\">Sam Hotchkiss</a>、<a href=\"https://profiles.wordpress.org/otto42\">Samuel Wood (Otto)</a>、<a href=\"https://profiles.wordpress.org/sc0ttkclark\">Scott Kingsley Clark</a>、<a href=\"https://profiles.wordpress.org/coffee2code\">Scott Reilly</a>、<a href=\"https://profiles.wordpress.org/wonderboymusic\">Scott Taylor</a>、<a href=\"https://profiles.wordpress.org/sergeybiryukov\">Sergey Biryukov</a>、<a href=\"https://profiles.wordpress.org/shooper\">Shawn Hooper</a>、<a href=\"https://profiles.wordpress.org/simonp303\">Simon Pollard</a>、<a href=\"https://profiles.wordpress.org/simonwheatley\">Simon Wheatley</a>、<a href=\"https://profiles.wordpress.org/skaeser\">skaeser</a>、<a href=\"https://profiles.wordpress.org/slobodanmanic\">Slobodan Manic</a>、<a href=\"https://profiles.wordpress.org/socki03\">socki03</a>、<a href=\"https://profiles.wordpress.org/solarissmoke\">solarissmoke</a>、<a href=\"https://profiles.wordpress.org/stephdau\">Stephane Daury</a>、<a href=\"https://profiles.wordpress.org/netweb\">Stephen Edgar</a>、<a href=\"https://profiles.wordpress.org/stephenharris\">Stephen Harris</a>、<a href=\"https://profiles.wordpress.org/stevegrunwell\">Steve Grunwell</a>、<a href=\"https://profiles.wordpress.org/5um17\">Sumit Singh</a>、<a href=\"https://profiles.wordpress.org/tacoverdo\">TacoVerdo</a>、<a href=\"https://profiles.wordpress.org/iamtakashi\">Takashi Irie</a>、<a href=\"https://profiles.wordpress.org/miyauchi\">Takayuki Miyauchi</a>、<a href=\"https://profiles.wordpress.org/karmatosed\">Tammie</a>、<a href=\"https://profiles.wordpress.org/tareq1988\">Tareq Hasan</a>、<a href=\"https://profiles.wordpress.org/tlovett1\">Taylor Lovett</a>、<a href=\"https://profiles.wordpress.org/ipm-frommen\">Thorsten Frommen</a>、<a href=\"https://profiles.wordpress.org/tillkruess\">Till Kruss</a>、<a href=\"https://profiles.wordpress.org/tschutter\">Tobias Schutter</a>、<a href=\"https://profiles.wordpress.org/tobiasbg\">TobiasBg</a>、<a href=\"https://profiles.wordpress.org/tmtrademark\">Toby McKes</a>、<a href=\"https://profiles.wordpress.org/tjnowell\">Tom J Nowell</a>、<a href=\"https://profiles.wordpress.org/tomasm\">Tomas Mackevicius</a>、<a href=\"https://profiles.wordpress.org/tomharrigan\">TomHarrigan</a>、<a href=\"https://profiles.wordpress.org/topher1kenobe\">Topher</a>、<a href=\"https://profiles.wordpress.org/zodiac1978\">Torsten Landsiedel</a>、<a href=\"https://profiles.wordpress.org/liljimmi\">Tracy Levesque</a>、<a href=\"https://profiles.wordpress.org/transom\">transom</a>、<a href=\"https://profiles.wordpress.org/wpsmith\">Travis Smith</a>、<a href=\"https://profiles.wordpress.org/tywayne\">Ty Carlson</a>、<a href=\"https://profiles.wordpress.org/desaiuditd\">Udit Desai</a>、<a href=\"https://profiles.wordpress.org/umeshsingla\">Umesh Kumar</a>、<a href=\"https://profiles.wordpress.org/vinod-dalvi\">Vinod Dalvi</a>、<a href=\"https://profiles.wordpress.org/vlajos\">vlajos</a>、<a href=\"https://profiles.wordpress.org/voldemortensen\">voldemortensen</a>、<a href=\"https://profiles.wordpress.org/westonruter\">Weston Ruter</a>、<a href=\"https://profiles.wordpress.org/yoavf\">Yoav Farhi</a>、<a href=\"https://profiles.wordpress.org/nobinobi\">Yuta Sekine</a>、<a href=\"https://profiles.wordpress.org/zrothauser\">Zack Rothauser</a>和<a href=\"https://profiles.wordpress.org/tollmanz\">Zack Tollman</a>。<br />\n本次发布得到了283人的贡献，再次创下新高。</p>\n<p>如果您想帮忙，请查阅<a href=\"https://make.wordpress.org/\">Make WordPress</a>和我们的<a href=\"https://make.wordpress.org/core/\">核心开发博客</a>。</p>\n<p>感谢您选择WordPress。节日快乐，我们4.2见！\n</p></div>\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:36:\"http://wellformedweb.org/CommentAPI/\";a:1:{s:10:\"commentRss\";a:1:{i:0;a:5:{s:4:\"data\";s:47:\"https://cn.wordpress.org/2014/12/23/dinah/feed/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:38:\"http://purl.org/rss/1.0/modules/slash/\";a:1:{s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:2:\"29\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:9;a:6:{s:4:\"data\";s:64:\"\n		\n		\n				\n				\n		\n				\n		\n\n		\n				\n								\n							\n		\n							\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:5:{s:0:\"\";a:7:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:27:\"WordPress 4.0.1安全更新\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:52:\"https://cn.wordpress.org/2014/11/21/wordpress-4-0-1/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:61:\"https://cn.wordpress.org/2014/11/21/wordpress-4-0-1/#comments\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 21 Nov 2014 03:51:39 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:2:{i:0;a:5:{s:4:\"data\";s:8:\"Releases\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}i:1;a:5:{s:4:\"data\";s:8:\"Security\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"https://cn.wordpress.org/?p=942\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:45:\"WordPress 4.0.1简体中文版现已可用。\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:8:\"Jimmy Xu\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:3034:\"<p>WordPress 4.0.1现已发布，这是一次对所有较早版本的<strong>重要安全更新</strong>，我们强烈建议您立即升级您的站点。</p>\n<p>支持后台自动更新的站点将在未来几个小时内被自动升级到WordPress 4.0.1。如果您仍在使用WordPress 3.9.2、3.8.4或3.7.4，请升级到3.9.3、3.8.5或3.7.5来保证您站点的安全性。（我们不对旧版本提供支持，所以也请考虑升级到4.0.1来使用我们最新最强大的版本。）</p>\n<p>WordPress 3.9.2与更早版本均受一严重的跨站脚本漏洞影响，可能使匿名用户危害站点安全。此漏洞由<a href=\"http://klikki.fi/\">Jouko Pynnonen</a>报告。这项问题并不影响4.0版，但4.0.1版也修正了如下8个安全问题：</p>\n<ul>\n<li>三个可被网站文章作者利用的跨站脚本问题，由<a href=\"http://joncave.co.uk/\">Jon Cave</a>、<a href=\"http://www.miqrogroove.com/\">Robert Chapin</a>与WordPress安全团队的<a href=\"https://johnblackbourn.com/\">John Blackbourn</a>发现。</li>\n<li>一个可能被用来诱使用户修改密码的跨站请求伪造。</li>\n<li>一项在检查密码时可能引发拒绝服务的问题，由<a href=\"http://www.behindthefirewalls.com/\">Javier Nieto Arevalo</a>与<a href=\"http://www.devconsole.info/\">Andres Rojas Guerrero</a>发现。</li>\n<li>在WordPress发起HTTP请求时对服务器侧请求伪造攻击的额外防护，由Ben Bidner（vortfu）报告。</li>\n<li>一项极不可能发生的散列碰撞，可能导致2008年之后从未登录过的账户被盗，由<a href=\"http://david.dw-perspective.org.uk/\">David Anderson</a>报告。</li>\n<li>WordPress现在会在用户想起密码、登录并修改电子邮件地址后使早前发出的密码重设邮件中的链接失效，由<a href=\"https://twitter.com/MomenBassel\">Momen Bassel</a>、<a href=\"http://c0dehouse.blogspot.in/\">Tanoy Bose</a>与<a href=\"https://managewp.com/\">ManageWP的Bojan Slavković</a>独立报告。</li>\n</ul>\n<p>4.0.1版也修正了4.0中的23个bug，我们也做出了两项强化修改，包括在从上传的照片中提取EXIF数据时进行更好的验证，由<a href=\"http://www.securesolutions.no/\">Chris Andrè Dale</a>报告。</p>\n<p>我们感谢这些问题被<a href=\"https://codex.wordpress.org/FAQ_Security\">负责任地透漏</a>给我们的安全小组。要获取更多信息，请参见<a href=\"https://codex.wordpress.org/Version_4.0.1\">发布说明</a>或查阅<a href=\"https://core.trac.wordpress.org/log/branches/4.0?rev=30475&amp;stop_rev=29710\">修改列表</a>。</p>\n<p><a href=\"https://cn.wordpress.org/releases/\">下载WordPress 4.0.1简体中文版</a>或在仪表盘→更新中点击“现在更新”。</p>\n<p><em>已经在测试WordPress 4.1了？包含这些安全更新的beta 2现已发布（<a href=\"https://wordpress.org/wordpress-4.1-beta2.zip\">zip</a>）。更多有关4.1的信息，请参见<a href=\"https://wordpress.org/news/2014/11/wordpress-4-1-beta-1/\">beta 1发布说明</a>。</em></p>\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:36:\"http://wellformedweb.org/CommentAPI/\";a:1:{s:10:\"commentRss\";a:1:{i:0;a:5:{s:4:\"data\";s:57:\"https://cn.wordpress.org/2014/11/21/wordpress-4-0-1/feed/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:38:\"http://purl.org/rss/1.0/modules/slash/\";a:1:{s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:2:\"21\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}}}s:27:\"http://www.w3.org/2005/Atom\";a:1:{s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:0:\"\";s:7:\"attribs\";a:1:{s:0:\"\";a:3:{s:4:\"href\";s:30:\"https://cn.wordpress.org/feed/\";s:3:\"rel\";s:4:\"self\";s:4:\"type\";s:19:\"application/rss+xml\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:44:\"http://purl.org/rss/1.0/modules/syndication/\";a:2:{s:12:\"updatePeriod\";a:1:{i:0;a:5:{s:4:\"data\";s:9:\"\n	hourly	\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:15:\"updateFrequency\";a:1:{i:0;a:5:{s:4:\"data\";s:4:\"\n	1	\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}}}}}}}}s:4:\"type\";i:128;s:7:\"headers\";O:42:\"Requests_Utility_CaseInsensitiveDictionary\":1:{s:7:\"\0*\0data\";a:8:{s:6:\"server\";s:5:\"nginx\";s:4:\"date\";s:29:\"Wed, 10 Oct 2018 01:32:07 GMT\";s:12:\"content-type\";s:34:\"application/rss+xml; charset=UTF-8\";s:6:\"x-olaf\";s:3:\"⛄\";s:13:\"last-modified\";s:29:\"Wed, 11 Jul 2018 15:05:42 GMT\";s:4:\"link\";s:61:\"<https://cn.wordpress.org/wp-json/>; rel=\"https://api.w.org/\"\";s:15:\"x-frame-options\";s:10:\"SAMEORIGIN\";s:4:\"x-nc\";s:9:\"HIT ord 1\";}}s:5:\"build\";s:14:\"20181008085313\";}','no'),(478,'_transient_timeout_feed_mod_7d1d7866a17d17cf5f79e1f075b87a31','1539178328','no'),(479,'_transient_feed_mod_7d1d7866a17d17cf5f79e1f075b87a31','1539135128','no'),(480,'_transient_timeout_feed_d117b5738fbd35bd8c0391cda1f2b5d9','1539178328','no'),(481,'_transient_feed_d117b5738fbd35bd8c0391cda1f2b5d9','a:4:{s:5:\"child\";a:1:{s:0:\"\";a:1:{s:3:\"rss\";a:1:{i:0;a:6:{s:4:\"data\";s:3:\"\n\n\n\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:7:\"version\";s:3:\"2.0\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:1:{s:0:\"\";a:1:{s:7:\"channel\";a:1:{i:0;a:6:{s:4:\"data\";s:61:\"\n	\n	\n	\n	\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:1:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:16:\"WordPress Planet\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:28:\"http://planet.wordpress.org/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"language\";a:1:{i:0;a:5:{s:4:\"data\";s:2:\"en\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:47:\"WordPress Planet - http://planet.wordpress.org/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"item\";a:50:{i:0;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:114:\"WPTavern: Jetpack 6.6 Improves Site Verification Tools, Asset CDN Module Now in Beta, Gutenberg Blocks Coming Soon\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"https://wptavern.com/?p=84562\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:123:\"https://wptavern.com/jetpack-6-6-improves-site-verification-tools-asset-cdn-module-now-in-beta-gutenberg-blocks-coming-soon\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:2105:\"<p><a href=\"https://jetpack.com/2018/10/09/jetpack-6-6-better-site-verification-tools/\" rel=\"noopener noreferrer\" target=\"_blank\">Jetpack 6.6</a> was released today with an update to the Site Verification tools that enables one-click verification and sitemap.xml registration with Google.</p>\n<p>This release also introduces the beta of Jetpack&#8217;s <a href=\"https://jetpack.com/support/asset-cdn/\" rel=\"noopener noreferrer\" target=\"_blank\">Asset CDN</a>. The new module, built on the same infrastructure as the Photon CDN, speeds up sites by cloud-hosting widely-used Jetpack and core WordPress scripts, styles, and assets. It takes a load off of users&#8217; servers and increases the allowed maximum concurrent connections through Photon. Once it is ready for use in production, the Asset CDN will be a new opt-in feature that can help speed up Jetpack&#8217;s 5+ million active installations.</p>\n<p>Version 6.6 also adds the necessary infrastructure for new Gutenberg blocks. The activity on the plugin&#8217;s GitHub repository indicates the team is <a href=\"https://github.com/Automattic/jetpack/projects/14\" rel=\"noopener noreferrer\" target=\"_blank\">working on a number of blocks for existing features</a>, including things like recipes, shortcodes, Jetpack subscription form, Simple Payments, Publicize, the contact form, tweet shortcode, VR shortcode, Giphy, and more. Everything touching the editor is in the process of being ported to blocks. Many of the blocks are already complete and some are still in progress. Some features, such as support for tiled gallery layouts, have bugs that need to be sorted before Jetpack will be ready for WordPress 5.0.</p>\n<p>Jetpack 6.6.1 will be going out soon to address a bug with social icons that this release introduced. In the meantime, users can paste the CSS in this <a href=\"https://raw.githubusercontent.com/Automattic/jetpack/3bf312d33b2aa4e1e693642e296fc3995ee74e95/modules/widgets/social-icons/social-icons.css\" rel=\"noopener noreferrer\" target=\"_blank\">gist</a> into  Appearance > Customize > Additional CSS to provide a temporary fix.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Tue, 09 Oct 2018 22:19:30 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:1;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:103:\"WPTavern: WordPress Accessibility Team Lead Resigns, Cites Political Complications Related to Gutenberg\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"https://wptavern.com/?p=84564\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:113:\"https://wptavern.com/wordpress-accessibility-team-lead-resigns-cites-political-complications-related-to-gutenberg\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:4543:\"<p>WordPress Accessibility Team lead <a href=\"https://rianrietveld.com/2018/10/09/i-have-resigned-the-wordpress-accessibility-team/\" rel=\"noopener noreferrer\" target=\"_blank\">Rian Rietveld has resigned</a> due to what she describes as political complications and problems with working on Gutenberg accessibility.</p>\n<p>&#8220;The last year, especially the last few weeks have been too politically complicated for me,&#8221; Rietveld said. &#8220;It’s better that someone else takes the lead now.&#8221;</p>\n<p>Her post outlines challenges the accessibility team has encountered in working with Gutenberg without having a skilled React developer on their team. Their contributions have primarily been limited to testing and reporting issues. Rietveld said team members experienced frustration when they tested and improved functionality but saw it changed at a later stage, breaking accessibility requirements again. She also cites a lack of commitment to keyboard testing new features before implementation.</p>\n<p>Rietveld said she used her network to try to get more companies and developers with React skills involved in Gutenberg accessibility contribution. In March, tests they ran on the plugin revealed a staggering number of <a href=\"https://github.com/WordPress/gutenberg/issues?q=is%3Aopen+is%3Aissue+label%3AAccessibility\" rel=\"noopener noreferrer\" target=\"_blank\">Gutenberg accessibility issues</a> that remain unresolved.</p>\n<p>&#8220;The results indicated so many accessibility issues that most testers refused to look at Gutenberg again,&#8221; Rietveld said. She included a statement from fellow contributor <a href=\"https://twitter.com/afercia\" rel=\"noopener noreferrer\" target=\"_blank\">Andrea Fercia</a>, who has been highly active in testing Gutenberg functionality and reporting issues:</p>\n<blockquote><p>While the Gutenberg team has worked hard to implement some fundamental accessibility features (e.g. focus management, navigate landmark regions), the overall user experience is terribly complicated for users with accessibility needs at the point the new editor is barely usable for them. </p>\n<p>The main reason for this lack of overall accessibility is in the overall Gutenberg design, where accessibility hasn’t been incorporated in the design process. </p>\n<p>Feedback from accessibility users has been constantly evaluated and Gutenberg is actually a regression in terms of accessibility level, compared to the previous editor.</p></blockquote>\n<p>The Gutenberg project now has a dedicated developer from Automattic, <a href=\"http://codinginairports.com\" rel=\"noopener noreferrer\" target=\"_blank\">Matthew MacPherson</a>, who is working on accessibility issues and Rietveld said she hopes the core accessibility team will continue to offer him all the support he needs.</p>\n<p>Rietveld&#8217;s resignation is a major loss to the WordPress project. For years her leadership and contributions have demonstrated the project&#8217;s commitment to serving those with a disability.</p>\n<p>In 2016, she was instrumental in <a href=\"https://wptavern.com/wordpress-adopts-accessibility-coding-standards-for-all-new-and-updated-code\" rel=\"noopener noreferrer\" target=\"_blank\">WordPress adopting accessibility coding standards for all new and updated code</a>. Rietveld was <a href=\"https://wptavern.com/wordpress-contributor-rian-rietveld-wins-heroes-of-accessibility-award\" rel=\"noopener noreferrer\" target=\"_blank\">recognized by Knowbility.org</a> as &#8220;a knowledgeable, dedicated, and effective advocate for accessibility in the global WordPress community,&#8221; whose achievements had a major impact on the application used by more than 25% of the world at that time. She took first place in the Individual Achievement category of the Heroes of Accessibility Awards.</p>\n<p>News of Rietveld&#8217;s resignation <a href=\"https://twitter.com/RianRietveld/status/1049615192626253825\" rel=\"noopener noreferrer\" target=\"_blank\">roused an outpouring of sadness and gratitude on Twitter</a>. The WordPress community thanked her for her work and that of other accessibility contributors, whose efforts often go unappreciated.</p>\n<p>&#8220;I’m not leaving WordPress nor accessibility, and in fact maybe now I can actually work on accessibility again,&#8221; Rietveld said. &#8220;I will keep giving talks and workshops. I also want to do research and work on tickets. But in my own pace.</p>\n<p>&#8220;I will join the a11y table if asked on contributor days, but maybe I’ll just go to a museum instead.&#8221;</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Tue, 09 Oct 2018 16:27:48 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:2;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:74:\"WPTavern: Alexis Lloyd and Riad Benguella Will Lead Phase Two of Gutenberg\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"https://wptavern.com/?p=84550\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:85:\"https://wptavern.com/alexis-lloyd-and-riad-benguella-will-lead-phase-two-of-gutenberg\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:3856:\"<p>As activity ramps up to try to get WordPress 5.0 released in November, Matt Mullenweg <a href=\"https://make.wordpress.org/core/2018/10/05/gutenberg-phase-2-leads/\">has announced</a> who will lead phase two of the Gutenberg project. Phase two focuses on Customization and entire site layouts. </p>\n\n<p>Alexis Lloyd, Head of Design Innovation at Automattic, will handle the design and product side. Riad Benguella, a JavaScript Engineer at Automattic, will handle the technical side of the project. </p>\n\n<p>One of the goals of phase two is to replace widgets with blocks and menus with a navigation block. <a href=\"https://make.wordpress.org/core/2018/10/05/gutenberg-phase-2-leads/#comment-34057\">Lloyd</a> and <a href=\"https://make.wordpress.org/core/2018/10/05/gutenberg-phase-2-leads/#comment-34063\">Benguella</a> commented on the post, introducing themselves to the community. <br /></p>\n\n<p>&#8220;Hi all! I’m thrilled to be working on phase 2 of Gutenberg,&#8221; Lloyd said. &#8220;I think there’s a huge opportunity to take the ease of use that has been brought to page/post editing in phase 1 and extend that to the full site experience. </p>\n\n<p>&#8220;I’m coming from many years leading design and product teams in news organizations (including designing and building custom CMSes), and am looking forward to bringing my experience to WordPress, as well as learning from the deep expertise in the community!&#8221;</p>\n\n<p>&#8220;Hi all! I’m so excited to be working with you all alongside <a href=\"https://profiles.wordpress.org/alexislloyd/\">@alexislloyd</a> to build upon the amazing technology that is Gutenberg in order to bring the content creation experience in WordPress to a whole new level,&#8221; Benguella said.<br /></p>\n\n<p>&#8220;For those who don’t know me yet, I’m a JavaScript engineer at Automattic. I’ve been fortunate to have contributed to the Gutenberg project since its beginning, including a lot of work on Gutenberg APIs, JavaScript in Core, and Accessibility.</p>\n\n<p>&#8220;I look forward to bringing my humble expertise to achieve the second phase of this project, as we look into things like widgets, menus, templates, and site-building in general.&#8221;</p>\n\n<h2>Theseus&#8217;s Paradox  Makes More Sense Now</h2>\n\n<p>In <a href=\"https://wptavern.com/wpweekly-episode-331-status-update-on-gutenberg-with-gary-pendergast\">episode 331 of WordPress Weekly</a>, one of the items we discussed with Gary Pendergast is the future of Gutenberg beyond the editor. At its core, Gutenberg is supposed to unify a number of areas of WordPress. </p>\n\n<blockquote class=\"wp-block-quote\"><p>Blocks are the unifying evolution of what is now covered, in different ways, by shortcodes, embeds, widgets, post formats, custom post types, theme options, meta-boxes, and other formatting elements. They embrace the breadth of functionality WordPress is capable of, with the clarity of a consistent user experience.</p><cite>From the <a href=\"https://wordpress.org/plugins/gutenberg/\">Gutenberg Plugin Page</a></cite></blockquote>\n\n<p>I hypothesized that since Gutenberg is an interface to manage blocks and that menus as well as widgets will become blocks, the menus and widget management pages in the WordPress backend can be replaced or removed in favor of Gutenberg. </p>\n\n<p>In this way, the Menu and Widget management boards on <a href=\"https://matiasventura.com/post/gutenberg-or-the-ship-of-theseus/\">the Ship of Theseus </a>would be replaced without sinking or disrupting the entire boat. </p>\n\n<p>With Mullenweg&#8217;s announcement regarding phase two, the <a href=\"http://en.wikipedia.org/wiki/Ship_of_Theseus\">Ship Of Theseus or Theseus’s paradox</a> begins to make more sense. Gutenberg becomes the foundation for bringing many areas of the WordPress project up to par without starting from scratch.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Tue, 09 Oct 2018 01:52:11 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Jeff Chandler\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:3;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:53:\"WPTavern: Miami WordPresser Todrick Moore Passes Away\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"https://wptavern.com/?p=84545\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:64:\"https://wptavern.com/miami-wordpresser-todrick-moore-passes-away\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:928:\"<div class=\"wp-block-image\"><img />Todrick Moore Courtesy of <a href=\"http://davidbisset.com/todrick-moore/\">David Bisset</a></div>\n\n<p>Fellow WordPresser Todrick Moore, a member of the Miami WordPress community and volunteer organizer of WordCamp Miami 2015 and 2016  passed away last week of Leukemia.</p>\n\n<p>&#8220;Todrick Moore was one of the kindest and strongest members of the South Florida WordPress community, and I still to this day remember meeting him first at his local meetup,&#8221; David Bisset said. </p>\n\n<p>&#8220;Like many people who come to meetups he was eager to learn, but also as I would quickly come to realize, he would be eager to help others as well.&#8221;</p>\n\n<p>To learn more about Todrick and how to help out his wife with their <a href=\"https://www.madeinthemia.com/\">WordPress business site</a>, please <a href=\"http://davidbisset.com/todrick-moore/\">read this post</a> by David Bisset.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Tue, 09 Oct 2018 00:24:03 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Jeff Chandler\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:4;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:91:\"WPTavern: How the Student-Owned Pelham Examiner Uses WordPress to Empower Young Journalists\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"https://wptavern.com/?p=84349\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:102:\"https://wptavern.com/how-the-student-owned-pelham-examiner-uses-wordpress-to-empower-young-journalists\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:4229:\"<p>When the <a href=\"https://newsofpelham.com/\" rel=\"noopener noreferrer\" target=\"_blank\">News of Pelham</a> became another casualty of the blighted newspaper industry, student journalist contributors lost a platform for their voices to be heard. Their advisor, Rich Zahradnik, called a meeting to address the paper&#8217;s closure. More than a dozen middle and high school kids showed up and decided to start their own paper: <a href=\"https://www.pelhamexaminer.com/\" rel=\"noopener noreferrer\" target=\"_blank\">The Pelham Examiner</a>.</p>\n<p><a href=\"https://www.richzahradnik.com\" rel=\"noopener noreferrer\" target=\"_blank\">Zahradnik</a> is a former journalist who has been volunteering for years in the local elementary schools, teaching kids how to write news stories. Before the News of Pelham shut down he was acting as a liaison to recruit student contributors. He registered the Examiner as a corporation and the paper is also part of the New York Press Association.</p>\n<p>The Pelham Examiner is an online-only publication that covers everything from local politics and crime to sports and entertainment. It is running on WordPress, using plugins like All-in-One Event Calendar and WP Polls to enhance students&#8217; stories. The site uses the FLEX WordPress Theme by <a href=\"https://snosites.com/\" rel=\"noopener noreferrer\" target=\"_blank\">SNO</a>, an organization that sells publishing solutions for scholastic news programs.</p>\n<p><a href=\"https://i1.wp.com/wptavern.com/wp-content/uploads/2018/10/screely-1539030523820.png?ssl=1\"><img /></a></p>\n<p>WordPress provided a cost-effective way to launch a student-run newspaper and students also found it to be intuitive for publishing.</p>\n<p>&#8220;We chose to use WordPress mainly because of the ease with which we could use it and create a website look that worked for our goal,&#8221; Executive Editor Ben Glickman said. Zahradnik had used the platform with prior publications he had worked on with students at Colonial Elementary School.</p>\n<p>&#8220;Several of the students who had worked on The Colonial Times loosely remembered some aspects of WordPress, but most of us had to learn from the beginning,&#8221; Glickman said. &#8220;I started with the basics (creating new articles, saving drafts, etc.) and worked my way up to the more complex stuff.&#8221; Most students contributing to the Pelham Examiner didn&#8217;t require much training to get up to speed with publishing articles.</p>\n<p>&#8220;Personally, I thought that much of WordPress was rather intuitive, so learning was not too hard,&#8221; Glickman said. &#8220;I haven&#8217;t had any problems with WordPress so far. I&#8217;ve been especially impressed with how easy it is to integrate all kinds of story elements into a given story.&#8221;</p>\n<p>Poynter published a <a href=\"https://www.poynter.org/news/when-paper-they-were-writing-folded-kids-started-their-own\" rel=\"noopener noreferrer\" target=\"_blank\">story</a> last week about the enthusiastic and highly motivated group of young journalists behind the <a href=\"https://www.pelhamexaminer.com/\" rel=\"noopener noreferrer\" target=\"_blank\">Pelham Examiner</a>. For now the publication is self-sustaining with volunteer contributions, but Zahradnik told Poynter that he is open to ads or investors in the future.</p>\n<p>Sustaining the news as a business is another skill the students will need to learn as the publishing industry is increasingly demanding more creative revenue models from journalists who want to work independently. Zahradnik told Poynter that the Pelham Examiner&#8217;s student-owned online paper could be a model for other places that are no longer able to support traditional local newspapers.</p>\n<p>The News of Pelham was a bi-weekly, print-only publication before it closed its doors. With a WordPress-powered website, students can get the news out faster, publishing every day with virtually no overhead costs.</p>\n<p>&#8220;I think the model for the Examiner is absolutely reproducible,&#8221; Glickman said. &#8220;For the relatively small price of a startup fee and annual hosting and support fees, you can essentially have the same type of town or city coverage with a conventional town newspaper.&#8221;</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Mon, 08 Oct 2018 20:52:10 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:5;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:73:\"WPTavern: WooSesh Schedule Published, WooCommerce Team to Deliver Keynote\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"https://wptavern.com/?p=84428\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:83:\"https://wptavern.com/woosesh-schedule-published-woocommerce-team-to-deliver-keynote\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:1835:\"<p><a href=\"https://woosesh.com/\" rel=\"noopener noreferrer\" target=\"_blank\">WooSesh</a>, the virtual WooCommerce conference, is now less than two weeks away. The two-day event will be held October 18-19 and is free for all attendees who join the livestream. Organizers Patrick Rauland and Brian Richards published the schedule this week with <a href=\"https://woosesh.com/#day1\" rel=\"noopener noreferrer\" target=\"_blank\">descriptions for each session</a>.</p>\n<p>Day 1 will feature speakers on a variety of topics suited for all attendees who work with WooCommerce, including building stores for clients, designing sites, and developing plugins. Day 2 is geared towards developers and will focus on more technical topics.</p>\n<p><a href=\"https://twitter.com/toddwilkens\" rel=\"noopener noreferrer\" target=\"_blank\">Todd Wilkens</a>, Head of WooCommerce, will be giving the keynote along with Aviva Pinchas and Kelly Hoffman. The session is titled &#8220;The Past, Present, and Future of WooCommerce&#8221; and it will be followed up with a Q&amp;A time.</p>\n<p>In a recent <a href=\"https://panel.socialpilot.co/site/video/eNiqGdpe\" rel=\"noopener noreferrer\" target=\"_blank\">interview</a>, Wilkens told Patrick Rauland that they have been working to rethink the merchant experience of the platform, as it has traditionally offered more of a builder style experience. This is one topic they plan to discuss in the keynote, in addition to where they see WooCommerce going as a platform, some recent successes, and how WooCommerce fits into other trends with WordPress and e-commerce in general.</p>\n<p>Attendees can watch all sessions for free as long as they attend at least one presentation during the live event. Registration is open on the <a href=\"https://woosesh.com/\" rel=\"noopener noreferrer\" target=\"_blank\">WooSesh</a> website.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 05 Oct 2018 05:58:04 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:6;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:100:\"WPTavern: If Deadlines Are Not Arbitrary, Why Not Release WordPress 5.0 in the Beginning of January?\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"https://wptavern.com/?p=84466\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:109:\"https://wptavern.com/if-deadlines-are-not-arbitrary-why-not-release-wordpress-5-0-in-the-beginning-of-january\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:3933:\"<p>The WordPress 5.0 release schedule <a href=\"https://wptavern.com/wordpress-5-0-slated-for-november-19-2018\">has been published</a> and not everyone is excited about the expected November 19th release. November 19th is three days before Thanksgiving, a major holiday in the U.S.</p>\n\n<div class=\"wp-block-embed__wrapper\">\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">Just going to call bullshit on anyone claiming “every date is bad for someone” or “every month has holidays somewhere” when defending possible Nov-Dec WordPress 5.0 release. It is trying to be rammed in for WordCamp U.S. where those November and December holidays are major ones.</p>&mdash; Carl Hancock <img src=\"https://s.w.org/images/core/emoji/11/72x72/1f680.png\" alt=\"?\" class=\"wp-smiley\" /> (@carlhancock) <a href=\"https://twitter.com/carlhancock/status/1047922585659461632?ref_src=twsrc%5Etfw\">October 4, 2018</a></blockquote>\n</div>\n\n<div class=\"wp-block-embed__wrapper\">\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">So <a href=\"https://twitter.com/hashtag/Gutenberg?src=hash&ref_src=twsrc%5Etfw\">#Gutenberg</a> is being rolled out the week of Thanksgiving? Do none of you have families or want to enjoy the holidays? What a terrible decision to push this during a holiday week&#8230;</p>&mdash; Jennifer Bourn (@jenniferbourn) <a href=\"https://twitter.com/jenniferbourn/status/1047845139912122368?ref_src=twsrc%5Etfw\">October 4, 2018</a></blockquote>\n</div>\n\n<p>Historically, WordPress has <a href=\"https://wordpress.org/news/category/releases/\">shipped major versions</a> in early to mid December rather than November. Holidays were considered because of the sharp drop-off in volunteer contribution activity. These versions were also part of a rigid and predictable four month schedule to get <a href=\"https://wordpress.org/about/roadmap/\">three major releases out per year</a>. </p>\n\n<p>However, WordPress 5.0 is no ordinary major release. It will contain Gutenberg and completely revamp the content creation and editing experience. Not to mention, we won&#8217;t know the full extent of plugin and theme compatibility until it&#8217;s installed on millions of sites. </p>\n\n<p>Looking at the proposed release date and <a href=\"https://2018.us.wordcamp.org/\">WordCamp US</a> taking place on December 7th, it&#8217;s not out of the question to theorize the release occurring before and because of WCUS. It should be noted though that the <a href=\"https://wptavern.com/matt-mullenweg-unveils-gutenberg-roadmap-at-wceu-wordpress-agencies-and-product-developers-sprint-to-prepare\">roadmap Matt Mullenweg outlined at WordCamp EU</a> earlier this year originally targeted a late August release.</p>\n\n<p>I think it would be a bummer if WordPress 5.0 was not released before WordCamp US. However, it would be irresponsible as a project leader to force a release for public relations reasons.</p>\n\n<p>As Mullenweg <a href=\"https://wptavern.com/matt-mullenweg-announces-5-0-release-plan-estimates-release-candidate-to-ship-in-november#comment-262936\">commented</a> in a recently published article, he won&#8217;t release WordPress 5.0 until it&#8217;s ready. I don&#8217;t think releasing it to have a big moment on stage would qualify as being ready.</p>\n\n<p>I think there should be consideration in pushing the release date to the beginning of next year. What better way to ring in the new year with a completely new editor in WordPress. It bypasses the holidays concern and allows people to apply all of their focus on making sure 5.0 is rolled out smoothly to sites they manage.</p>\n\n<p>Gutenberg has been in development for more than a year and a half. Since the WordPress release strategy was thrown out the window last year and <a href=\"https://wordpress.org/about/philosophy/\">deadlines are not arbitrary</a>, what&#8217;s a few more weeks of development and testing before pushing WordPress 5.0 to the public?<br /></p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 05 Oct 2018 03:09:21 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Jeff Chandler\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:7;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:95:\"WPTavern: WordPress Theme and Plugin Shops are Pioneering the First Layout Blocks for Gutenberg\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"https://wptavern.com/?p=84351\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:106:\"https://wptavern.com/wordpress-theme-and-plugin-shops-are-pioneering-the-first-layout-blocks-for-gutenberg\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:5995:\"<a href=\"https://i1.wp.com/wptavern.com/wp-content/uploads/2018/10/layout.jpg?ssl=1\"><img /></a>photo credit: <a href=\"https://stocksnap.io/photo/EWENELMHYR\">Jeffrey Betts</a>\n<p>Many WordPress theme shops started out with themes as their only products but over the years have moved into selling plugins that enhance their core products. This came about partially because theming standards evolved to encourage developers to <a href=\"https://wptavern.com/why-wordpress-theme-developers-are-moving-functionality-into-plugins\" rel=\"noopener noreferrer\" target=\"_blank\">put non-presentational functionality into plugins</a>. For many, the revenue from plugins quickly eclipsed that of their theme products. In the past, theme shops have often partnered with page builder plugins to enhance their users&#8217; capabilities in customizing the themes. This may soon change, as the advent of Gutenberg is bringing new product opportunities to theme and plugin shops shops.</p>\n<p>The first iteration of the new editor focuses on blocks and the post editing experience. After Gutenberg is in core, the project will move on to the second phase &#8211; full site customization. This will venture into page builder type functionality. Matt Mullenweg <a href=\"https://twitter.com/photomatt/status/1037843717070057472\" rel=\"noopener noreferrer\" target=\"_blank\">predicts this phase will happen much faster than phase 1</a>, since all of the infrastructure is already in place. The plugin already has a columns block in beta.</p>\n<p>Gutenberg is scheduled to debut in WordPress 5.0 in November, but site customization functionality won&#8217;t arrive until 2019 at the earliest. In the meantime, plugin developers have been experimenting with various implementations of &#8220;section&#8221; and &#8220;container&#8221; blocks while the Gutenberg team <a href=\"https://github.com/WordPress/gutenberg/issues/4900\" rel=\"noopener noreferrer\" target=\"_blank\">explores a core container block</a> for phase 2.</p>\n<p>Marie Comet&#8217;s <a href=\"https://github.com/MarieComet/WP-container-block/\" rel=\"noopener noreferrer\" target=\"_blank\">WP Container Block</a> is a fork of the core columns block that offers columns structure, spacing, and backgrounds (with both image and color controls). Felix Arntz recently published a tutorial on how he built a <a href=\"https://felix-arntz.me/blog/building-a-reusable-gutenberg-section-block/\" rel=\"noopener noreferrer\" target=\"_blank\">reusable Gutenberg section block</a>. Marc Lacroix created his own <a href=\"https://github.com/marcusig/gutenberg-section-block\" rel=\"noopener noreferrer\" target=\"_blank\">container block</a>, out of necessity, with capabilities for spacing and background customization.</p>\n<p><a href=\"https://i0.wp.com/wptavern.com/wp-content/uploads/2018/10/Screen-Shot-2018-10-03-at-10.26.43-PM.png?ssl=1\"><img /></a></p>\n<p>Section/container blocks are a precursor to using Gutenberg for building more complex layouts. Some of these explorations may inform the Gutenberg team&#8217;s implementation of a core container block in the future.</p>\n<p>A few more full-featured layout blocks are starting to pop up on WordPress.org. Kadence Themes, a theme and plugin shop based in Missoula, Montana, released its <a href=\"https://wordpress.org/plugins/kadence-blocks/\" rel=\"noopener noreferrer\" target=\"_blank\">Kadence Blocks &#8211; Gutenberg Page Builder Toolkit</a> at the end of August. The plugin brings the editor closer to delivering the features users expect from popular page builders, such as better control of columns for different screen sizes and a <a href=\"https://themes.kadencethemes.com/ascend-5/row-layout-block/\" rel=\"noopener noreferrer\" target=\"_blank\">row/layout block</a> with controls for padding, backgrounds, alignment, and overlays with gradients.</p>\n<p><a href=\"https://www.instagram.com/p/Bmtjc9lh6zA/\" title=\"View on Instagram\" target=\"_blank\"><img src=\"http://instagr.am/p/Bmtjc9lh6zA/media/?size=l\" alt=\"Instagram Photo\" /></a></p>\n<p>A live &#8220;Frontenberg&#8221; style <a href=\"http://demo.kadencethemes.com/kadence-blocks/\" rel=\"noopener noreferrer\" target=\"_blank\">demo of Kadence Blocks</a> is available where you can see the plugin&#8217;s options for manipulating page layout.</p>\n<p>Pootlepress, a WordPress plugin and theme shop, has added a new Layouts block to its free <a href=\"https://wordpress.org/plugins/caxton/\" rel=\"noopener noreferrer\" target=\"_blank\">Caxton plugin</a>. The company is one of the earlier Gutenberg adopters in the WooCommerce space with its recent release of the <a href=\"https://wptavern.com/pootlepress-previews-upcoming-storefront-blocks-plugin-for-woocommerce\" rel=\"noopener noreferrer\" target=\"_blank\">Storefront Blocks</a> plugin.</p>\n<p>Caxton bills itself as a &#8220;page layout plugin&#8221; for Gutenberg. Its layout block allows users to select from a number of preset layouts and then add blocks within those layouts. It supports nesting rows and row backgrounds. A Frontenberg <a href=\"http://demo.caxton.pro/\" rel=\"noopener noreferrer\" target=\"_blank\">demo site</a> gives users the chance to play around with the page builder functionality before installing the plugin.</p>\n<div class=\"embed-vimeo\"></div>\n<p>Until Gutenberg adds core support for more layout capabilities, WordPress may see an influx of these layout blocks that introduce basic page builder functionality. Some of these plugins may need to be refactored once there is more direction for these features in core, but they offer a glimpse of what Gutenberg will bring to site customization. Combined with <a href=\"https://wptavern.com/gutenberg-3-9-introduces-reusable-exportable-templates-for-multiple-blocks\" rel=\"noopener noreferrer\" target=\"_blank\">Gutenberg 3.9&#8217;s reusable, exportable templates for multiple blocks</a>, page layouts will become more portable than ever. In 2019, we may see new sites popping up that enable users and developers to share the layout designs they have created.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 04 Oct 2018 15:24:58 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:8;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:73:\"WPTavern: WPWeekly Episode 332 – The WordPress 5.0 Release Cycle Begins\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:58:\"https://wptavern.com?p=84436&preview=true&preview_id=84436\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:80:\"https://wptavern.com/wpweekly-episode-332-the-wordpress-5-0-release-cycle-begins\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:2241:\"<p>In this episode, <a href=\"http://jjj.me\">John James Jacoby</a> and I discuss the headlines making the rounds in the WordPress community. This includes the start of the WordPress 5.0 release cycle, the 5th annual Hacktoberfest, and theme developers marketing their themes as Gutenberg-compatible. Near the end of the show, I describe how much of the press surrounding WordPress security issues is poorly written and John talks about the benefits of being in the same physical space as your co-workers at least once or twice a year.</p>\n<h2>Stories Discussed:</h2>\n<p><a href=\"https://wptavern.com/wordpress-theme-developers-begin-marketing-themes-as-gutenberg-compatible\">WordPress Theme Developers Begin Marketing Themes as Gutenberg Compatible</a></p>\n<p><a href=\"https://wptavern.com/first-wave-of-wordcamp-europe-2019-tickets-sells-out-in-3-hours\">First Wave of WordCamp Europe 2019 Tickets Sells Out in 3 Hours</a></p>\n<p><a href=\"https://wptavern.com/5th-annual-hacktoberfest-kicks-off-today-updated-rules-require-5-pull-requests-to-earn-a-t-shirt\">5th Annual Hacktoberfest Kicks Off Today, Updated Rules Require 5 Pull Requests to Earn a T-shirt</a></p>\n<p><a href=\"https://wptavern.com/matt-mullenweg-announces-5-0-release-plan-estimates-release-candidate-to-ship-in-november\">Matt Mullenweg Announces WordPress 5.0 Release Plan, Estimates Release Candidate to Ship in November</a></p>\n<p><a href=\"https://wptavern.com/godaddy-hires-mike-schroder-to-contribute-to-wordpress-core-full-time\">GoDaddy Hires Mike Schroder to Contribute to WordPress Core Full-Time</a></p>\n<h2>WPWeekly Meta:</h2>\n<p><strong>Next Episode:</strong> Wednesday, October 10th 3:00 P.M. Eastern</p>\n<p>Subscribe to <a href=\"https://itunes.apple.com/us/podcast/wordpress-weekly/id694849738\">WordPress Weekly via Itunes</a></p>\n<p>Subscribe to <a href=\"https://www.wptavern.com/feed/podcast\">WordPress Weekly via RSS</a></p>\n<p>Subscribe to <a href=\"http://www.stitcher.com/podcast/wordpress-weekly-podcast?refid=stpr\">WordPress Weekly via Stitcher Radio</a></p>\n<p>Subscribe to <a href=\"https://play.google.com/music/listen?u=0#/ps/Ir3keivkvwwh24xy7qiymurwpbe\">WordPress Weekly via Google Play</a></p>\n<p><strong>Listen To Episode #332:</strong><br />\n</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 04 Oct 2018 00:30:59 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Jeff Chandler\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:9;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:52:\"WPTavern: WordPress 5.0 Slated for November 19, 2018\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"https://wptavern.com/?p=84419\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:62:\"https://wptavern.com/wordpress-5-0-slated-for-november-19-2018\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:5300:\"<p>A tentative <a href=\"https://make.wordpress.org/core/2018/10/03/proposed-wordpress-5-0-scope-and-schedule/\" rel=\"noopener noreferrer\" target=\"_blank\">5.0 release schedule</a> was published during today&#8217;s core dev chat. The official release is targeted for November 19, 2018 with beta 1 expected October 19 and RC 1 released October 30.</p>\n<p>In addition to getting Gutenberg merged into core, the scope for 5.0 includes a few new items that Gary Pendergast outlined in his post:</p>\n<ul>\n<li>Updating the default themes to work well with the block editor, and creating the new Twenty Nineteen theme.</li>\n<li>Creating an upgrade experience to remove the Gutenberg plugin and offer the Classic Editor plugin.</li>\n</ul>\n<p>November 19 is the week of the Thanksgiving holiday in the U.S., when many are traveling or spending time with friends and family. As this is scheduled during a busy time of year and may have unexpected delays, the release leads have come up with a backup plan that includes a secondary schedule.</p>\n<p>&#8220;We know there is a chance that 5.0 will need additional time, so these dates can slip by up to 8 days if needed,&#8221; Pendergast said. His post proposes an additional timeline that would have 5.0 land in January:</p>\n<p>Secondary RC 1: January 8, 2019</p>\n<p>Secondary Release: January 22, 2019</p>\n<p>&#8220;The current release date is November 19, but it can be pushed as late as November 27 if needed,&#8221; Pendergast said. &#8220;To avoid the numerous holidays from the end of November through to January, we&#8217;ll move the release to January if more time is needed.&#8221;</p>\n<p>Although the backup timeline should allay concerns about December holidays, if the release is at all delayed, it will run up against the Thanksgiving holiday.</p>\n<p>&#8220;Should we need to switch to the secondary dates, this will be communicated as soon as we’re aware,&#8221; Pendergast said. &#8220;It’s also important to note that we have some updates for PHP 7.3 compatibility that must be released in 2018 regardless, and we would have a short 4.9.9 release cycle for them if needed.&#8221;</p>\n<p>Contributors had the opportunity to ask questions of the release leads during today&#8217;s 5.0 kickoff meeting. There was some uncertainty in yesterday&#8217;s announcements about whether 5.0 will ship a new default theme. Matt Mullenweg confirmed that they are aiming to get Twenty Nineteen into 5.0.</p>\n<p>&#8220;It&#8217;s the biggest variable though, so if it takes longer we won&#8217;t delay the release for it,&#8221; Mullenweg said.</p>\n<p>Twenty Nineteen development will happen on GitHub and contributors can join the discussion in the #core-themes Slack channel where regular meetings will happen.</p>\n<p>Gutenberg engineer Riad Benguella posted a technical overview of the integration process for merging the new editor into core. He also laid out a plan for how Gutenberg development will continue in the future.</p>\n<p>&#8220;After WordPress 5.0 is released, the Gutenberg plugin will continue to exist,&#8221; Benguella said. &#8220;Its purpose will be changed to the development and the maintenance of the WordPress npm packages, including the editor itself, and will also serve to develop the second phase (site customization) of the Gutenberg project. Plugin updates will continue to be released during the 5.0 cycle.</p>\n<p>&#8220;The PHP part of the plugin won’t be needed anymore, as the plugin will just register new versions of the scripts of the packages to replace the ones already registered by Core.&#8221;</p>\n<p>Mullenweg confirmed during the dev chat that the team plans to add a link to the Classic Editor plugin in the admin when 5.0 ships. Overall, contributors in attendance seemed excited about the prospect of finally having the new editor in core, despite the ambitious timeline proposed for release.</p>\n<p>&#8220;A big benefit even beyond the user improvements is that plugin and theme developers will be able to truly use it as a base in a way that they can&#8217;t right now as a plugin,&#8221; Mullenweg said. &#8220;If previous adoption curves hold true, we&#8217;d be on 10m sites (20x current adoption) by new year.&#8221;</p>\n<p>Gutenberg development has been moving quickly and after it is shipped to millions of WordPress users there are bound to be more issues discovered. Mullenweg said quick point releases may be an option for maintaining the flexibility to introduce fixes and improvements in a timely way for users.</p>\n<p>&#8220;Since 5.0 will be very tight (just Gutenberg, PHP 7.3, and possibly theme) I am open to having 5.0.x releases that are like the 4.9.x releases that bring in some larger updates or improvements we push off, like servehappy stuff,&#8221; he said.</p>\n<p>Gutenberg technical lead Matias Ventura has outlined the <a href=\"https://make.wordpress.org/core/2018/09/26/an-update-on-gutenberg-tasks/\" rel=\"noopener noreferrer\" target=\"_blank\">tasks remaining on the editor</a>. An updated <a href=\"https://make.wordpress.org/core/5-0/\" rel=\"noopener noreferrer\" target=\"_blank\">schedule for the 5.0 release cycle</a> is now available for the public to follow. Gary Pendergast, who is shepherding the merge, said he expects WordPress 5.1 will be available around March 2019.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 03 Oct 2018 23:23:08 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:10;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:30:\"Gary: WordPress 5.0 Needs You!\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:25:\"https://pento.net/?p=2160\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:53:\"https://pento.net/2018/10/04/wordpress-5-0-needs-you/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:6287:\"<p>Yesterday, we started the WordPress 5.0 release cycle with an announcement post.</p>\n\n<div class=\"wp-block-embed__wrapper\">\n<div class=\" content_cards_card content_cards_domain_make-wordpress-org\">\n			<div class=\"content_cards_image\">\n				<a class=\"content_cards_image_link\" href=\"https://make.wordpress.org/core/2018/10/03/a-plan-for-5-0/\">\n					<img src=\"https://pento.net/wp-content/uploads/2018/10/screen-shot-2018-10-02-at-8.39.21-pm.png\" alt=\"A Plan for 5.0\" />				</a>\n		</div>\n	\n	<div class=\"content_cards_title\">\n		<a class=\"content_cards_title_link\" href=\"https://make.wordpress.org/core/2018/10/03/a-plan-for-5-0/\">\n			A Plan for 5.0		</a>\n	</div>\n	<div class=\"content_cards_description\">\n		<a class=\"content_cards_description_link\" href=\"https://make.wordpress.org/core/2018/10/03/a-plan-for-5-0/\">\n			<p>Usually during major releases of WordPress, the dedicated release lead chooses a few folks to help them through the time-consuming work of managing an excellent release cycle. We are blessed with s…</p>\n		</a>\n	</div>\n	<div class=\"content_cards_site_name\">\n		<img src=\"https://s.w.org/favicon.ico?2\" alt=\"Make WordPress Core\" class=\"content_cards_favicon\" />		Make WordPress Core	</div>\n</div>\n</div>\n\n<div class=\"wp-block-image\"><img /><a href=\"https://make.wordpress.org\">Make WordPress</a></div>\n\n<p>It&#8217;s a very exciting time to be involved in WordPress, and if you want to help make it the best, now&#8217;s an excellent opportunity to jump right in.</p>\n\n<p>A critical goal of this release cycle is transparency.</p>\n\n<p>As a member of the WordPress 5.0 leadership team, the best way for me to do my job is to get feedback from the wider WordPress community as early, and as quickly as possible. I think I speak for everyone on the leadership team when I say that we all feel the same on this. We want everyone to be able to participate, which will require some cooperation from everyone in the wider WordPress community.</p>\n\n<p>The release post was published as soon as it was written, we wanted to get it out quickly, so everyone could be aware of what&#8217;s going on. Publishing quickly does mean that we&#8217;re still writing the more detailed posts about scope, and timeline, and processes. Instead of publishing a completed plan all at once, we intentionally want to include everyone from the start, and evolve plans as we get feedback.</p>\n\n<p>With no other context, the WordPress 5.0 timeline of &#8220;release candidate in about a month&#8221; would be very short, which is why we&#8217;ve waited until Gutenberg had proved itself before setting a timeline. As we mentioned in the post, WordPress 5.0 will be &#8220;WordPress 4.9.8 + Gutenberg&#8221;. The Gutenberg plugin is <a href=\"https://gutenstats.blog/\">running on nearly 500k sites</a>, and WordPress 4.9.8 is running on millions of sites. For comparison, it&#8217;s considered a well tested major version if we see 20k installs before the final release date. Gutenberg is a bigger change than we&#8217;ve done in the past, so should be held to a higher standard, and I think we can agree that 500k sites is a pretty good test base: it arguably meets, or even exceeds that standard.</p>\n\n<p>We can have a release candidate ready in a month.</p>\n\n<div class=\"wp-block-image\"><img /><a href=\"https://wordpress.org/gutenberg\">Try Gutenberg</a></div>\n\n<p>The Gutenberg core team are currently focussed on finishing off the last few features. The Gutenberg plugin has evolved exceedingly quickly thanks to their work, it&#8217;s moved so much faster than anything we&#8217;ve done in WordPress previously. As we transition to bug fixing, you should expect to see the same rapid improvement.</p>\n\n<p>The block editor&#8217;s backwards compatibility with the classic editor is important, of course, and the <a href=\"https://wordpress.org/plugins/classic-editor/\">Classic Editor plugin</a> is a part of that: if you have a site that doesn&#8217;t yet work with the block editor, please go ahead and install the plugin. I&#8217;d be happy to see the Classic Editor plugin getting 10 million or more installs, if people need it. That would both show a clear need for the classic interface to be maintained for a long time, and because it&#8217;s the official WordPress plugin for doing it, we can ensure that it&#8217;s maintained for as long as it&#8217;s needed. This isn&#8217;t a new scenario to the WordPress core team, we&#8217;ve been backporting security fixes to WordPress 3.7 for years. We&#8217;re never going to leave site owners out in the cold there, and exactly the same attitude applies to the Classic Editor plugin.</p>\n\n<p>The broader Gutenberg project is a <em>massive</em> change, and WordPress is a big ship to turn.</p>\n\n<p>It&#8217;s going to take years to make this transition, and it&#8217;s okay if WordPress 5.0 isn&#8217;t everything for everyone. There&#8217;ll be a WordPress 5.1, and 5.2, and 5.3, and so on, the block editor will continue to evolve to work for more and more people.</p>\n\n<p>My role in WordPress 5.0 is to &#8220;generally shepherd the merge&#8221;. I&#8217;ve built or guided some of the most complex changes we&#8217;ve made in Core in recent years, and they&#8217;ve all been successful. I don&#8217;t intend to change that record, WordPress 5.0 will only be released when I&#8217;m as confident in it as I was for all of those previous projects.</p>\n\n<p>Right now, I&#8217;m asking everyone in the WordPress community for a little bit of trust, that we&#8217;re all working with the best interests of WordPress at heart. I&#8217;m also asking for a little bit of patience, we&#8217;re only human, we can only type so fast, and we do need to sleep every now and then. <img src=\"https://s.w.org/images/core/emoji/11/72x72/1f609.png\" alt=\"?\" class=\"wp-smiley\" /></p>\n\n<p>WordPress 5.0 isn&#8217;t the finish line, it&#8217;s the starter pistol.</p>\n\n<p><a href=\"https://automattic.com/creed/\">This is a marathon, not a sprint</a>, and the goal is to set WordPress up for the next 15 years of evolution. This can only happen one step at a time though, and the best way to get there will be by working together. We can have disagreements, we can have different priorities, and we can still come together to create the future of WordPress.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 03 Oct 2018 22:14:55 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:4:\"Gary\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:11;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:79:\"WPTavern: GoDaddy Hires Mike Schroder to Contribute to WordPress Core Full-Time\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"https://wptavern.com/?p=84411\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:90:\"https://wptavern.com/godaddy-hires-mike-schroder-to-contribute-to-wordpress-core-full-time\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:986:\"<p><a href=\"https://getsource.net/\">Mike Schroder</a> known at <a href=\"https://twitter.com/getsource?lang=en\">GetSource</a> on Twitter and Mike on WordPress&#8217; Slack instance <a href=\"https://www.godaddy.com/garage/mike-schroder-wordpress-core-contributor/\">is joining Aaron Campbell at GoDaddy</a> to contribute to WordPress full-time. </p>\n\n<p>Since 2011, Schroder has contributed to nearly every version of WordPress. In 2014, Schroder co-led the release of WordPress 3.9. In 2016, he lead the release of WordPress 4.5. He&#8217;s also <a href=\"https://wordpress.tv/?s=mike+schroder\">an accomplished speaker</a> presenting on various topics at WordCamps across the world. </p>\n\n<p>According to Gabriel Mays,  WordPress products and strategy leader at GoDaddy, Schroder will continue to work on the Media component in WordPress, lead the <a href=\"https://make.wordpress.org/hosting/\">WordPress Hosting Community work group</a>, and help merge Gutenberg into WordPress 5.0.  </p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 03 Oct 2018 05:57:08 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Jeff Chandler\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:12;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:110:\"WPTavern: Matt Mullenweg Announces WordPress 5.0 Release Plan, Estimates Release Candidate to Ship in November\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"https://wptavern.com/?p=84405\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:110:\"https://wptavern.com/matt-mullenweg-announces-5-0-release-plan-estimates-release-candidate-to-ship-in-november\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:3058:\"<p>Matt Mullenweg has <a href=\"https://make.wordpress.org/core/2018/10/03/a-plan-for-5-0/\" rel=\"noopener noreferrer\" target=\"_blank\">announced</a> a plan for releasing WordPress 5.0 with a tentative estimate for a release candidate to ship in November.</p>\n<p>&#8220;With known knowns and known unknowns, I believe we will be at RC in about a month,&#8221; Mullenweg said. &#8220;However, I’ll be keeping a close eye on feedback during the beta process and adjust as needed and keep the community fully up-to-date with our best estimate.&#8221;</p>\n<p><a href=\"http://Gutenstats.blog\" rel=\"noopener noreferrer\" target=\"_blank\">Gutenstats.blog</a> shows that the beta plugin has passed 490,000 active installations, which Mullenweg said &#8220;far exceeds pre-release testing of anything that has ever come into core.&#8221; The <a href=\"https://wordpress.org/plugins/classic-editor/\" rel=\"noopener noreferrer\" target=\"_blank\">Classic Editor</a> plugin also has more than 400,000 installations, indicating nearly half a million site owners have already prepared to preserve their existing workflows.</p>\n<p>&#8220;If we keep the 5.0 release to strictly 4.9.8 + Gutenberg, we will have a release that is both major and a non-event in terms of new code,&#8221; Mullenweg said. &#8220;It’s all battle-tested. In some ways 5.0 is already de facto out in the wild, with some forward-looking hosts already installing and activating Gutenberg for new installs.&#8221;</p>\n<p>Mullenweg is leading the release but has designated 11 other leads to head up various focuses, including triage, design, JavaScript packages, REST API, merge process and several other important aspects of the release.</p>\n<p>WordPress users can also expect a new default Twenty Nineteen theme to ship with 5.0. Designer <a href=\"https://www.allancole.com/\" rel=\"noopener noreferrer\" target=\"_blank\">Allan Cole</a> will be leading that project, which involves adapting an existing Gutenberg theme for use as WordPress&#8217; next default theme.</p>\n<p>Last week&#8217;s developer chat left many attendees wondering about the status of WordPress 4.9.9. Contributors <a href=\"https://wptavern.com/wordpress-4-9-9-release-may-shift-focus-to-php-7-3-compatibility-gutenberg-merge-proposal-timeline-tbd\" rel=\"noopener noreferrer\" target=\"_blank\">discussed the possibility of making it a quick PHP 7.3 compatibility release</a> but it now appears to be all hands on deck as the focus shifts to 5.0.</p>\n<p>Based on today&#8217;s announcement, it seems very likely that WordPress 5.0 will land before the end of 2018, barring any major impediments. The timeline for this major release falls during a busy time of year for many who will be responsible for preparing their products and client sites. Mullenweg said he will keep the community up-to-date as the release cycle progresses. The <a href=\"https://make.wordpress.org/core/2018/10/03/dev-chat-agenda-october-3rd-5-0-week-1/\" rel=\"noopener noreferrer\" target=\"_blank\">agenda</a> for tomorrow&#8217;s dev chat will focus on 5.0 planning.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 03 Oct 2018 03:19:44 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:13;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:33:\"HeroPress: There Are No Shortcuts\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:56:\"https://heropress.com/?post_type=heropress-essays&p=2633\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:118:\"https://heropress.com/essays/there-are-no-shortcuts/#utm_source=rss&utm_medium=rss&utm_campaign=there-are-no-shortcuts\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:9844:\"<img width=\"960\" height=\"480\" src=\"https://s20094.pcdn.co/wp-content/uploads/2019/10/100318-min-1024x512.jpg\" class=\"attachment-large size-large wp-post-image\" alt=\"Pull Quote: Do not let your gender, your race, or any of your biases define you.\" /><p>My name is JC and I make things for the web. I wear a lot of hats but my favorite one is as a WordPress developer. And I am here to tell you about my journey. It was not easy. There were no shortcuts. I had to crawl my way up every single step of the way. And I still have to, it did not become easier – not by a long shot. But I’ve accepted that in order to succeed I have to take the long way and that is basically two words long – <strong>WORK HARD</strong>.</p>\n<p>When I was young, I wanted to be and do a lot of things. I wanted to be an astronaut, a lawyer, a geophysicist. I wanted a pet unicorn or a tiger or a lion or a snake. I wanted to be the first woman to roam the solar system, I wanted to be a world-renowned author. I never became nor did any of those but I did get a pet snake named Yudi and I have a lot of “pet” unicorns.</p>\n<p>I studied engineering because it was the “IT” course during my time. Did I like it? Let’s just say that I had a lot of fun, a lot of heartaches, a lot of sleepless nights and leave it at that. But if you really want to know &#8211; what I really, really want to be right now is to be a TimeLord STAT, but I digress. I think, the main reason I took that course was because I didn’t want to be with a lot of girls. I didn’t want to compete and I was not really into all that girly-girly stuff. It all changed, by the way. I graduated and took the board – I did not pass. Much to the horror of my engineer dad. I never really wanted to be an engineer so I did not bother taking the board again, instead, I worked in a call center. My first work was as a tech support for Dell computers. I got to tinker with laptops and help seniors fix theirs thousands of miles away and I even got to experience them happily shouting telling me that I do not know what I am doing. Fun times.</p>\n<blockquote><p>I did that for a year and I decided that that was not the life for me nor the life I wanted my daughter to see me in.</p></blockquote>\n<p>So we went back home to Iloilo and had my second job there, this time as a Search Engine Optimization Analyst. Fancy title, but all I did was search Google for stuff and write stuff for Google to digest. My boss’ site was built on WordPress and I created content for him. That was my first contact with WordPress.</p>\n<p>Working in that position for a few months bothered me, I know I am capable of more than just that (I am impatient and hard-headed and can’t keep my mouth shut – the perfect combination). So I read about web development. I didn’t know how to code – give me mathematical equations and I’ll solve it right away but all these HTML, CSS and whatnot were alien to me.</p>\n<blockquote><p>But I persevered, I never took a shortcut.</p></blockquote>\n<p>I studied for about a month and decided that I was ready. Plus, I’ve heard about this online job site where you can register to be a freelancer – it was quite new at that time but I gave it a go. If you’ve heard of oDesk (now Upwork), I was one of the first freelancers to join and I had the shirt to prove it. I don’t have the shirt now, but they sent it to me when they ran this contest for the freelancer with the longest work record.</p>\n<p>I applied to one job and one of the requirements was WordPress. I didn’t know WordPress aside from using it as a blog, and I know HTML/CSS (in theory). Lucky me, the client who eventually turned into my longest online friend, took a chance on me. I did not exactly tell him that I did not know WordPress, instead I told him what he wanted to hear – That <strong>I CAN DO IT</strong>. And I did. I worked on designing and developing his website while studying WordPress.</p>\n<blockquote><p>And that was when my love affair with WordPress started. I continued to learn and gain experience throughout the years.</p></blockquote>\n<p>There are <strong>NO SHORTCUTS</strong>. Believe me, I tried looking for one and I failed. In order to succeed, you have to work hard and not take the easy way out. Learn, read, listen – do this every single day for as long as you can.</p>\n<p>Although, my first client never really knew until now that I never had any idea what I was doing when I started working for him, I did get the job done (Dr. T, if you’re reading this – Thank you! I won’t say sorry, because that will denigrate all the things I’ve done and all the things I’ve learned over the years I was working with you). I persevered, I didn’t quit when the going got rough. Plus, WordPress has an amazing community and they are more than willing to help you out if you ever get stuck and I used them as a lifeline more times than I can remember.</p>\n<p>Let me say this again, it was not easy. I went through a lot. Moving forward, all of my clients were from abroad, most of them naturally assumed that I am male because of my name. And I think that contributed to how they were responding to my emails or chat.</p>\n<blockquote><p>They treated me as an equal and responded in a way they wouldn’t had they known I am female.</p></blockquote>\n<p>And once they knew, it was really hard for them to back out since they know that I am capable of getting the job done.</p>\n<p>I was brought up to always question the norm, to not back down simply because I am part of the so-called “weaker gender”. I speak my mind when I have to and when and where I choose to. Working in a male-dominated industry is pretty hard, gender bias is palpable in this industry. Plus, there are not a lot of women developers and that is really sad because without women – computing as we know it would not exist.</p>\n<p>You see, women have a harder time getting into the world of information technology because it has become male-dominated. I have a first-hand experience in this, imagine me – a woman, an Asian and a Filipino at that working in a space where men are the be-all end-all. I will say it again, it was not easy.</p>\n<p>Have you heard about the competence/likeability dilemma? The Heidi/Howard Roizen Case Study concluded that when women exhibit characteristics associated with leaders &#8211; like assertion, authority, and dominant behaviors &#8211; they tend to be disliked. Hence, women cannot be both competent and likeable.</p>\n<p>So according to this study: My competence is inversely proportional to my likeability. Meaning the more competent I am the less my colleagues like me. I may completely and vehemently disagree with this conclusion on a personal level, but there is truth to it. What can we do about this? I guess the first step is to acknowledge that it exists and work from there. But do not just be aware of the problem, acknowledge it and make a conscious effort to see when you are unconsciously adding to the problem and act on it. I don’t have a magic solution, what I can do is help empower girls to realize that they are stronger than they think they are and that they can do more. I did it without any shortcuts, I studied, I persevered, I worked my ass off to get where I am right now and I am not done yet. I still have to study, to preserve and to work every single day.</p>\n<p>My journey doesn’t end here, I still have a ways to go. I will continue to love what I do and I assure you, once you love what you do – you’ll work your ass off to make sure you continue to have and experience the joy of being able to do that thing that you love. Do not let your gender, your race or any of your biases define you. It is not a walk in the park, sure, but you have to always, always do your best to not regret doing something because you think you can’t. The only limit is YOU and nothing or no one else.</p>\n<div class=\"rtsocial-container rtsocial-container-align-right rtsocial-horizontal\"><div class=\"rtsocial-twitter-horizontal\"><div class=\"rtsocial-twitter-horizontal-button\"><a title=\"Tweet: There Are No Shortcuts\" class=\"rtsocial-twitter-button\" href=\"https://twitter.com/share?text=There%20Are%20No%20Shortcuts&via=heropress&url=https%3A%2F%2Fheropress.com%2Fessays%2Fthere-are-no-shortcuts%2F\" rel=\"nofollow\" target=\"_blank\"></a></div></div><div class=\"rtsocial-fb-horizontal fb-light\"><div class=\"rtsocial-fb-horizontal-button\"><a title=\"Like: There Are No Shortcuts\" class=\"rtsocial-fb-button rtsocial-fb-like-light\" href=\"https://www.facebook.com/sharer.php?u=https%3A%2F%2Fheropress.com%2Fessays%2Fthere-are-no-shortcuts%2F\" rel=\"nofollow\" target=\"_blank\"></a></div></div><div class=\"rtsocial-linkedin-horizontal\"><div class=\"rtsocial-linkedin-horizontal-button\"><a class=\"rtsocial-linkedin-button\" href=\"https://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Fheropress.com%2Fessays%2Fthere-are-no-shortcuts%2F&title=There+Are+No+Shortcuts\" rel=\"nofollow\" target=\"_blank\" title=\"Share: There Are No Shortcuts\"></a></div></div><div class=\"rtsocial-pinterest-horizontal\"><div class=\"rtsocial-pinterest-horizontal-button\"><a class=\"rtsocial-pinterest-button\" href=\"https://pinterest.com/pin/create/button/?url=https://heropress.com/essays/there-are-no-shortcuts/&media=https://heropress.com/wp-content/uploads/2019/10/100318-min-150x150.jpg&description=There Are No Shortcuts\" rel=\"nofollow\" target=\"_blank\" title=\"Pin: There Are No Shortcuts\"></a></div></div><a rel=\"nofollow\" class=\"perma-link\" href=\"https://heropress.com/essays/there-are-no-shortcuts/\" title=\"There Are No Shortcuts\"></a></div><p>The post <a rel=\"nofollow\" href=\"https://heropress.com/essays/there-are-no-shortcuts/\">There Are No Shortcuts</a> appeared first on <a rel=\"nofollow\" href=\"https://heropress.com\">HeroPress</a>.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 03 Oct 2018 00:00:23 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:9:\"JC Palmes\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:14;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:107:\"WPTavern: 5th Annual Hacktoberfest Kicks Off Today, Updated Rules Require 5 Pull Requests to Earn a T-shirt\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"https://wptavern.com/?p=84309\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:117:\"https://wptavern.com/5th-annual-hacktoberfest-kicks-off-today-updated-rules-require-5-pull-requests-to-earn-a-t-shirt\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:1555:\"<p><a href=\"https://i0.wp.com/wptavern.com/wp-content/uploads/2018/09/Screen-Shot-2018-10-01-at-5.58.26-PM.png?ssl=1\"><img /></a></p>\n<p>DigitalOcean, along with GitHub and new partner Twilio, are sponsoring the <a href=\"https://blog.digitalocean.com/hacktoberfest-is-back-for-year-5/\" rel=\"noopener noreferrer\" target=\"_blank\">5th annual Hacktoberfest</a>. The event was created to encourage participants to make meaningful contributions to open source projects. Last year 31,901 completed the challenge, opening 239,164 pull requests in 64,166 repositories.</p>\n<p>In previous years, participants were required to submit four pull requests to GitHub-hosted public repositories during the month of October in order to earn a limited edition Hacktoberfest t-shirt. The event&#8217;s organizers have increased the number of required PRs to five this year and only the first 50,000 will earn a t-shirt.</p>\n<p>No open source project is too small to benefit from Hacktoberfest. Maintainers who want to attract new contributors can apply the &#8220;Hacktoberfest&#8221; label to issues that are appropriate for newcomers to work on. A few projects are highlighted on the event&#8217;s <a href=\"https://hacktoberfest.digitalocean.com/\" rel=\"noopener noreferrer\" target=\"_blank\">homepage</a> and there are already more than <a href=\"https://github.com/search?q=label:hacktoberfest+state:open+type:issue\" rel=\"noopener noreferrer\" target=\"_blank\">17,000 issues designated for Hacktoberfest</a> that are ready for contributors to tackle over the next 31 days.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Tue, 02 Oct 2018 02:07:46 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:15;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:73:\"WPTavern: First Wave of WordCamp Europe 2019 Tickets Sells Out in 3 Hours\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"https://wptavern.com/?p=84342\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:84:\"https://wptavern.com/first-wave-of-wordcamp-europe-2019-tickets-sells-out-in-3-hours\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:1906:\"<p><a href=\"https://i2.wp.com/wptavern.com/wp-content/uploads/2018/09/Screen-Shot-2018-10-01-at-11.47.58-AM.png?ssl=1\"><img /></a></p>\n<p>The first batch of tickets for <a href=\"https://2019.europe.wordcamp.org/tickets/\" rel=\"noopener noreferrer\" target=\"_blank\">WordCamp Europe 2019</a> were released early this morning and all 250 standard tickets sold out within three hours and nine minutes. Berlin won out as the next city to host the camp, in part due to the region&#8217;s strong local WordPress community. The city is international, diverse, and easily accessible for those traveling for the conference.</p>\n<p>WCEU 2019 will be held at the <a href=\"https://www.estrel.com/en/home.html\" rel=\"noopener noreferrer\" target=\"_blank\">Estrel Hotel and Congress Center</a> from June 20-22. It is a large venue with a max capacity of 12,000 people, capable of hosting both conference days, the contributor day, and the after party. Local lead organizer Bernhard Kau said his team is currently planning for 2,500 – 3,000 attendees. A <a href=\"https://2019.europe.wordcamp.org/2018/09/06/book-your-stay-at-wceu/\" rel=\"noopener noreferrer\" target=\"_blank\">discount is available</a> for those who want to stay at the Estrel Hotel.</p>\n<p>The past six editions of WCEU have been so successful that it is now firmly established as a can&#8217;t-miss event in the WordPress world. Although the first set of standard tickets have already sold out in record time, a few dozen Micro-sponsor tickets are still available for €150.00. More standard tickets will be available on Wednesday, October 3rd. Subscribe for updates on the <a href=\"https://2019.europe.wordcamp.org\" rel=\"noopener noreferrer\" target=\"_blank\">WCEU 2019 website</a> and follow the <a href=\"https://twitter.com/WCEurope\" rel=\"noopener noreferrer\" target=\"_blank\">official Twitter account</a> to be notified when the next batch goes on sale.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Mon, 01 Oct 2018 17:33:41 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:16;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:48:\"Dev Blog: The Month in WordPress: September 2018\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:34:\"https://wordpress.org/news/?p=6203\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:73:\"https://wordpress.org/news/2018/10/the-month-in-wordpress-september-2018/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:4604:\"<p>The new WordPress editor continues to be a major focus for all WordPress contribution teams. Read on to find out some more about their work, as well as everything else that has been happening around the community this past month.</p>\n\n<hr class=\"wp-block-separator\" />\n\n<h2>Further Enhancements to the New WordPress Editor</h2>\n\n<p>Active development continues on <a href=\"https://wordpress.org/gutenberg/\">Gutenberg</a>, the new editing experience for WordPress Core. <a href=\"https://make.wordpress.org/core/2018/09/21/whats-new-in-gutenberg/\">The latest update for the editor</a> includes great new features, such as reusable content blocks, a dark editor style, export and import of templates, and much more. In addition, the Gutenberg team has published <a href=\"https://make.wordpress.org/core/2018/09/26/an-update-on-gutenberg-tasks/\">a comprehensive guide</a> to the features currently included in the editor.<br /></p>\n\n<p>Users can test Gutenberg right now by installing <a href=\"https://wordpress.org/plugins/gutenberg/\">the plugin</a>, which currently has over 450,000 active installs according to the new <a href=\"https://gutenstats.blog/\">Gutenberg in Numbers</a> site. Along with that, <a href=\"https://wordpress.org/gutenberg/handbook/reference/faq/\">the Gutenberg Handbook</a> has some very useful information about how to use and develop for the new editor.<br /></p>\n\n<p>Want to get involved in building Gutenberg? Follow <a href=\"https://make.wordpress.org/core/tag/gutenberg/\">the #gutenberg tag on the Core team blog</a> and join the #core-editor channel in the <a href=\"https://make.wordpress.org/chat/\">Making WordPress Slack group</a>.</p>\n\n<h2>Work Begins on WordPress 5.0</h2>\n\n<p>After initially announcing a minor v4.9.9 release, <a href=\"https://make.wordpress.org/core/2018/09/28/dev-chat-summary-september-26th-4-9-9-week-7/\">the Core team has shifted their focus to the next major release</a> — v5.0. One of the primary factors for this change is that Gutenberg is nearly ready to be considered for merging into Core, with the goal to complete the merge in v5.0.<br /></p>\n\n<p>To maintain flexibility in the development process the final timelines are not yet determined, allowing work already done for v4.9.9 to be moved to v5.0 if needed. Ensuring that WordPress is compatible with the upcoming PHP 7.3 release is a high priority for the Core team. Once a final decision is made, the details will be announced on <a href=\"https://make.wordpress.org/core/\">the Core team blog</a>.<br /></p>\n\n<p>Want to get involved in building WordPress Core? Follow the Core team blog and join the #core channel in <a href=\"https://make.wordpress.org/chat/\">the Making WordPress Slack group</a>.<br /></p>\n\n<hr class=\"wp-block-separator\" />\n\n<h2>Further Reading:</h2>\n\n<ul><li>The Community Team has some great updates on <a href=\"https://make.wordpress.org/community/2018/09/25/wordcamp-incubator-2018-update-thread-september-edition/\">the progress of the current WordCamp Incubator Program</a>.</li><li>A team inside the Drupal community <a href=\"https://drupalgutenberg.org/\">is working on integrating Gutenberg into their CMS</a>.</li><li>There is a current discussion among community organizers about <a href=\"https://make.wordpress.org/community/2018/09/17/proposal-to-increase-the-maximum-ticket-price-for-wordcamps/\">plans to increase the maximum ticket price for WordCamps</a>.</li><li>The Mobile Team <a href=\"https://make.wordpress.org/updates/2018/09/25/mobile-team-update-september-25th/\">is looking for people</a> to grow the beta program for testing the iOS and Android mobile apps.</li><li>The Diversity Outreach Speaker Training group <a href=\"https://make.wordpress.org/community/2018/09/13/input-requested-building-a-diverse-speaker-roster-document/\">is looking for feedback</a> on their document to assist WordPress Meetups and WordCamps in building diverse speaker rosters.</li><li>The Theme Team <a href=\"https://make.wordpress.org/themes/2018/09/26/new-requirement-regarding-affiliate-links/\">has updated their rules</a> regarding sponsored and affiliate links inside themes added to the Theme Directory.</li><li>Meetup organizers <a href=\"https://make.wordpress.org/community/2018/09/25/meetup-organiser-badge-assignments/\">are now able to receive a WordPress.org profile badge</a> for their community work.</li></ul>\n\n<p><em>If you have a story we should consider including in the next “Month in WordPress” post, please </em><a href=\"https://make.wordpress.org/community/month-in-wordpress-submissions/\"><em>submit it here</em></a><em>.</em><br /></p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Mon, 01 Oct 2018 12:01:41 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:15:\"Hugh Lashbrooke\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:17;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:71:\"WPTavern: WordCamp Tokyo 2018: Highlights, Recaps, Aftermovie, and More\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"https://wptavern.com/?p=84316\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:78:\"https://wptavern.com/wordcamp-tokyo-2018-highlights-recaps-aftermovie-and-more\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:3174:\"<p><a href=\"https://i2.wp.com/wptavern.com/wp-content/uploads/2018/09/WordCampTokyo2018.jpg?ssl=1\"><img /></a></p>\n<p><a href=\"https://2018.tokyo.wordcamp.org/\" rel=\"noopener noreferrer\" target=\"_blank\">WordCamp Tokyo 2018</a> was held two weeks ago on September 14-15 and recordings of the sessions should be published to WordPress.tv soon. The theme of the WordCamp was &#8220;Challenge!&#8221;, a celebration of the challenges the WordPress project has overcome over the past 15 years, as well as a rallying call for embracing the challenges introduced by the new Gutenberg editor.</p>\n<blockquote class=\"twitter-tweet\">\n<p lang=\"ja\" dir=\"ltr\">WordCamp Tokyo 2018: Challenge! — ブログを投稿しました！ <a href=\"https://twitter.com/hashtag/wctokyo?src=hash&ref_src=twsrc%5Etfw\">#wctokyo</a> <a href=\"https://twitter.com/hashtag/WordPress?src=hash&ref_src=twsrc%5Etfw\">#WordPress</a> <a href=\"https://twitter.com/hashtag/WordCamp?src=hash&ref_src=twsrc%5Etfw\">#WordCamp</a> <a href=\"https://t.co/1cQ3rU9c6f\">https://t.co/1cQ3rU9c6f</a> <a href=\"https://t.co/4XDc6HW9Pn\">pic.twitter.com/4XDc6HW9Pn</a></p>\n<p>&mdash; Paulo E. Aquino (@pauloeaquino) <a href=\"https://twitter.com/pauloeaquino/status/1041950336326545408?ref_src=twsrc%5Etfw\">September 18, 2018</a></p></blockquote>\n<p></p>\n<p>WordCamp Tokyo is one of the largest camps in Asia, hosted by one of the most active international communities. The first edition of the camp was held in 2008 with 60 attendees. It was also the very first WordCamp in Japan. Since that time the WordPress community has exploded in the region, spawning dozens of local meetups and WordCamps around the country.</p>\n<p>The official WordCamp Tokyo 2018 website has a growing list of more than <a href=\"https://2018.tokyo.wordcamp.org/2018/09/27/impressions_blog/\" rel=\"noopener noreferrer\" target=\"_blank\">40 recaps and articles</a> written about the event. Overall, attendees enjoyed the opportunity to connect and contribute back to WordPress. The after party was held at a disco-like club in Shibuya and you can <a href=\"https://www.tecking.org/archives/5629\" rel=\"noopener noreferrer\" target=\"_blank\">listen to a selection of the songs</a> that the DJ posted to his WordPress blog.</p>\n<blockquote class=\"twitter-tweet\">\n<p lang=\"ja\" dir=\"ltr\">アフターパーティ大盛り上がりだぷー( ^ω^ U)<img src=\"https://s.w.org/images/core/emoji/11/72x72/2728.png\" alt=\"✨\" class=\"wp-smiley\" /><a href=\"https://twitter.com/hashtag/wctokyo?src=hash&ref_src=twsrc%5Etfw\">#wctokyo</a> <a href=\"https://t.co/G6thGqCaq7\">pic.twitter.com/G6thGqCaq7</a></p>\n<p>&mdash; WordCamp Tokyo (@wctokyo) <a href=\"https://twitter.com/wctokyo/status/1040936683338792960?ref_src=twsrc%5Etfw\">September 15, 2018</a></p></blockquote>\n<p></p>\n<p>If you are one of the many people across the globe who love the Japanese WordPress community and wished you could have attended the WordCamp, this aftermovie offers a glimpse of a few of the contributors, sponsors, organizers, and attendees who made the event a success. It captures a bit of the energy in the air and may inspire you to put WordCamp Tokyo on your calendar next year.</p>\n<p></p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Sat, 29 Sep 2018 01:21:58 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:18;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:83:\"WPTavern: WordPress Theme Developers Begin Marketing Themes as Gutenberg Compatible\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"https://wptavern.com/?p=84284\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:94:\"https://wptavern.com/wordpress-theme-developers-begin-marketing-themes-as-gutenberg-compatible\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:4729:\"<p>WordPress theme developers are starting to advertise their themes as being compatible with Gutenberg, ahead of the new editor&#8217;s imminent merge into core. Work on the 5.0 release may be ramping up sooner than expected after yesterday&#8217;s announcement that <a href=\"https://wptavern.com/wordpress-4-9-9-release-may-shift-focus-to-php-7-3-compatibility-gutenberg-merge-proposal-timeline-tbd\" rel=\"noopener noreferrer\" target=\"_blank\">4.9.9 may be a quick release for PHP 7.3 compatibility</a> or possibly cancelled altogether.</p>\n<p>Themeforest, the largest marketplace for commercial WordPress themes with more than 11,000 products, has a specific <a href=\"https://themeforest.net/tags/gutenberg\" rel=\"noopener noreferrer\" target=\"_blank\">tag for Gutenberg-compatible theme listings</a>. Searching for themes that mention Gutenberg in the description turns up 139 products. But what does &#8220;Gutenberg compatible&#8221; mean?</p>\n<p><a href=\"https://i2.wp.com/wptavern.com/wp-content/uploads/2018/09/Screen-Shot-2018-09-27-at-3.44.38-PM.png?ssl=1\"><img /></a></p>\n<p>Gutenberg compatibility seems to be more of a buzzword among most of the Themeforest listings, indicating that the theme includes styles for all core blocks. However, in some instances theme authors have also tested shortcodes for compatibility with the new editor. A smaller number include access to premium blocks as part of their advertised Gutenberg compatibility.</p>\n<p>Searching the WordPress.org Theme Directory for &#8220;<a href=\"https://wordpress.org/themes/search/Gutenberg/\" rel=\"noopener noreferrer\" target=\"_blank\">Gutenberg</a>&#8221; produces 26 results where compatibility is mentioned in the theme descriptions. Themes are noted to be &#8220;fully compatible&#8221; with Gutenberg or specifically &#8220;designed to work with the new editor.&#8221; There is a wide spectrum of interpretation on those selling points &#8211; from basic styles for core blocks to themes that explore all the possibilities that Gutenberg opens up with features created specifically for manipulation inside the new editor.</p>\n<p>Independent theme shops have been leading the charge in creating themes built to showcase what Gutenberg can do through pairing with plugins that offer block collections. Themes like <a href=\"https://wordpress.org/themes/editor-blocks/\" rel=\"noopener noreferrer\" target=\"_blank\">Editor Blocks</a>, <a href=\"https://wordpress.org/themes/atomic-blocks/\" rel=\"noopener noreferrer\" target=\"_blank\">Atomic Blocks</a>, and <a href=\"https://wordpress.org/themes/coblocks/\" rel=\"noopener noreferrer\" target=\"_blank\">CoBlocks</a> all have accompanying plugins that add custom blocks. This particular approach of packaging blocks into collections may not last very long, as it tends to make individual blocks more difficult to find.</p>\n<p>At the moment, advertising a theme as &#8220;Gutenberg compatible&#8221; is a temporary marketing strategy, as Gutenberg will soon lose its code name and become simply &#8220;the editor.&#8221; That special distinction will evaporate as soon as WordPress 5.0 lands. Gutenberg support will quickly become a matter of basic WordPress compatibility. The days of using it as a marketable feature are limited, and the pressure is on for theme developers to ensure their products are ready.</p>\n<p>In the video below, an excerpt from the &#8220;Theming with Gutenberg Course,&#8221; Zac Gordon examines considerations for theme developers who are working towards making their products compatible with the new editor. Gordon emphasizes that Gutenberg should work out of the box with any theme. However, there are a few features, such as the full width cover image, that may require special styles in order to work on the front end. The bulk of the compatibility work is ensuring that the editing experience matches the frontend and that Gutenberg blocks are styled harmoniously with the rest of the theme&#8217;s features.</p>\n<p>There are many tutorials available to help theme developers (and agencies preparing client sites) get started with making their themes ready for the Gutenberg era. Check out the resources below:</p>\n<p><a href=\"https://weavertheme.com/make-your-wordpress-theme-fully-compatible-with-gutenberg/\" rel=\"noopener noreferrer\" target=\"_blank\">Things to consider when updating a WordPress theme for Gutenberg</a></p>\n<p><a href=\"https://richtabor.com/gutenberg-block-unit-test/\" rel=\"noopener noreferrer\" target=\"_blank\">Preparing WordPress themes for Gutenberg with the Block Unit Test</a></p>\n<p><a href=\"https://www.billerickson.net/getting-your-theme-ready-for-gutenberg/\" rel=\"noopener noreferrer\" target=\"_blank\">Getting your theme ready for Gutenberg</a></p>\n<p></p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 27 Sep 2018 23:12:40 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:19;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:82:\"WPTavern: WPWeekly Episode 331 – Status Update on Gutenberg With Gary Pendergast\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:58:\"https://wptavern.com?p=84269&preview=true&preview_id=84269\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:89:\"https://wptavern.com/wpweekly-episode-331-status-update-on-gutenberg-with-gary-pendergast\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:1993:\"<p>In this episode, <a href=\"http://jjj.me\">John James Jacoby</a> and I are joined by <a href=\"https://pento.net/\">Gary Pendergast</a>, Gutenberg and WordPress core contributor to get an update on Gutenberg&#8217;s progress. We discuss its rollout on WordPress.com, the feedback and sentiment shared thus far, and when we can expect to see it merged into WordPress 5.0. We also talk about what the future may hold for WordPress years after Gutenberg is merged into core.</p>\n<h2>Stories Discussed:</h2>\n<p><a href=\"https://make.wordpress.org/core/2018/09/26/an-update-on-gutenberg-tasks/\">An Update on Gutenberg Tasks</a><br />\n<a href=\"https://wptavern.com/gutenstats-blog-is-live-tracking-gutenberg-beta-testing-data\">Gutenstats Blog Is Live, Tracking Gutenberg Beta Testing Data</a><br />\n<a href=\"https://wptavern.com/gutenberg-cloud-a-cross-platform-community-library-for-custom-gutenberg-blocks\">Gutenberg Cloud: A Cross-Platform Community Library for Custom Gutenberg Blocks</a><br />\n<a href=\"https://wptavern.com/gutenberg-is-slowly-rolling-out-to-wordpress-com-users\">Gutenberg is Slowly Rolling Out to WordPress.com Users</a><br />\n<a href=\"https://wptavern.com/drupal-gutenberg-project-receives-enthusiastic-reception-at-drupal-europe\">Drupal Gutenberg Project Receives Enthusiastic Reception at Drupal Europe</a></p>\n<h2>WPWeekly Meta:</h2>\n<p><strong>Next Episode:</strong> Wednesday, October 3rd 10:00 A.M. Eastern</p>\n<p>Subscribe to <a href=\"https://itunes.apple.com/us/podcast/wordpress-weekly/id694849738\">WordPress Weekly via Itunes</a></p>\n<p>Subscribe to <a href=\"https://www.wptavern.com/feed/podcast\">WordPress Weekly via RSS</a></p>\n<p>Subscribe to <a href=\"http://www.stitcher.com/podcast/wordpress-weekly-podcast?refid=stpr\">WordPress Weekly via Stitcher Radio</a></p>\n<p>Subscribe to <a href=\"https://play.google.com/music/listen?u=0#/ps/Ir3keivkvwwh24xy7qiymurwpbe\">WordPress Weekly via Google Play</a></p>\n<p><strong>Listen To Episode #331:</strong><br />\n</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 27 Sep 2018 21:03:32 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Jeff Chandler\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:20;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:84:\"WPTavern: Lyft Open Sources ColorBox Algorithm for Building Accessible Color Systems\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"https://wptavern.com/?p=84187\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:95:\"https://wptavern.com/lyft-open-sources-colorbox-algorithm-for-building-accessible-color-systems\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:2755:\"<p><a href=\"https://i2.wp.com/wptavern.com/wp-content/uploads/2018/09/Screen-Shot-2018-09-26-at-2.54.12-PM.png?ssl=1\"><img /></a></p>\n<p>Lyft has open sourced its color algorithm for creating an accessible color system. The company&#8217;s design team also packaged the algorithm as a web tool called <a href=\"https://www.colorbox.io/\" rel=\"noopener noreferrer\" target=\"_blank\">ColorBox</a>. It makes it easy for anyone to produce color sets with accessible contrast ratios, as outlined in the <a href=\"https://www.w3.org/WAI/intro/wcag\" rel=\"noopener noreferrer\" target=\"_blank\">WCAG 2.0</a> standards.</p>\n<p>&#8220;We made accessibility a cornerstone of our new color system,&#8221; Lyft designer Kevyn Arnott said. &#8220;We wanted to remove the need to manually check color contrast using third-party tools, and we needed to make it dead-simple for everyone to create accessible products.&#8221;</p>\n<p>Arnott&#8217;s post &#8220;<a href=\"https://design.lyft.com/re-approaching-color-9e604ba22c88\" rel=\"noopener noreferrer\" target=\"_blank\">Re-approaching color</a>&#8221; describes how his team created the algorithm and why it was necessary. As Lyft&#8217;s design and engineering teams grew, it became apparent that color naming and selection was not consistent across their products. With thousands of people building products that rely on color, scaling a color system becomes vitally important.</p>\n<p>Lyft used what they had already done with color naming and selection and created an algorithm that would standardize the progression of lightness-to-darkness across color hues. The result is that every color 0–50 is accessible (4.5:1) on black and every color 60–100 is accessible (4.5:1) on white.</p>\n<p>ColorBox is a mesmerizing and powerful tool to play with. It has inputs for the number of steps, hue, saturation, and luminosity. Each input also comes with different preset curve options, offering greater control over how colors progress in hue and saturation.</p>\n<p>&#8220;This algorithm allows us to remove all the dependencies we previously had with color selection, so if we have a new designer working on this or we change tools or monitors, we’ll still have the same outcome,&#8221; Arnott said. &#8220;This algorithm also enables us to quickly modify or scale color as we need to over time.&#8221;</p>\n<p>Many companies and open source projects seem to be short on accessibility experts, so a tool targeted at making accessible color systems more approachable is a welcome contribution. The <a href=\"https://github.com/lyft/coloralgorithm\" rel=\"noopener noreferrer\" target=\"_blank\">JavaScript color algorithm</a> is open source on GitHub (Apache 2.0 license) and can be modified for any project&#8217;s specific needs.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 27 Sep 2018 14:46:31 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:21;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:60:\"WPTavern: Gutenberg 4.0 RC 1 Will Be Available in A Few Days\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"https://wptavern.com/?p=84264\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:71:\"https://wptavern.com/gutenberg-4-0-rc-1-will-be-available-in-a-few-days\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:2145:\"<p>Matias Ventura, Gutenberg&#8217;s technical lead, <a href=\"https://make.wordpress.org/core/2018/09/26/an-update-on-gutenberg-tasks/\">published an update</a> on the progress of Gutenberg 4.0 and what users can expect. This version will mark the project&#8217;s 40th release.</p>\n\n<p>Ventura outlined a number of tasks that have been completed up to this point. These include, Full Screen, Unified Toolbar, and Spotlight modes to adapt to a user’s creative preferences, adaptive design, and autosave support.<br /></p>\n\n<p>The list provides a great recap of the progress that&#8217;s been made since early 2017. Gutenberg 4.0 will initially be a release candidate that will be made available in the next few days. </p>\n\n<p>Due to the &#8220;Try Gutenberg&#8221; callout <a href=\"https://wptavern.com/wordpress-4-9-8-released\">in WordPress 4.9.8</a> and the editor <a href=\"https://wptavern.com/gutenberg-is-slowly-rolling-out-to-wordpress-com-users\">slowly making its way</a> to sites on WordPress.com, the team has received a lot of feedback leading to improved iterations. <br /></p>\n\n<p>&#8220;The main feature set <a href=\"https://github.com/WordPress/gutenberg/issues/4894\">targeted for the first version</a> of the editor has been considered complete for a few releases now,&#8221; Ventura said. &#8220;Since then, however, the large amount of testing being carried out and the great feedback coming from multiple venues has resulted in several further iterations and additions to continue to improve the overall experience to wider satisfaction.</p>\n\n<p>&#8220;This includes things like editor modes and tweaks to the inserter, transformation, and toolbar mechanisms. That has pushed us back a little in being able to fully focus on bug fixing.&#8221;</p>\n\n<p>With the initial feature set complete and the WordPress 5.0 release cycle <a href=\"https://wptavern.com/wordpress-4-9-9-release-may-shift-focus-to-php-7-3-compatibility-gutenberg-merge-proposal-timeline-tbd\">about to begin</a>, a merge proposal appears imminent even though specific timelines <a href=\"https://make.wordpress.org/core/5-0/\">have yet to be determined</a>. </p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 26 Sep 2018 23:26:16 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Jeff Chandler\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:22;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:113:\"WPTavern: WordPress 4.9.9 Release May Shift Focus to PHP 7.3 Compatibility, Gutenberg Merge Proposal Timeline TBD\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"https://wptavern.com/?p=84255\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:123:\"https://wptavern.com/wordpress-4-9-9-release-may-shift-focus-to-php-7-3-compatibility-gutenberg-merge-proposal-timeline-tbd\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:3553:\"<p>The plans for WordPress 4.9.9 are currently in limbo after today&#8217;s core developers&#8217; chat. Here&#8217;s what we know right now: Discussions are underway regarding making it a quick PHP 7.3 compatibility release or cancelling it in favor of moving ahead with the 5.0 release cycle.</p>\n<p>&#8220;Progress and communication on 4.9.9 has been very vague as of late, and I apologize for that,&#8221; WordPress 4.9.9 release co-lead Alain Schlesser said. &#8220;There were things that needed to be clarified first, but we can now finally share the big news with you: It&#8217;s just about time to begin work on the 5.0 release cycle.</p>\n<p>&#8220;Because of this, @antpb and I will step back as release leads and we&#8217;ll wind down the 4.9.9 release. Over the next couple of weeks we will start coordinating the transition to ease into this major release cycle. This includes going through the hard work that teams are already in the middle of and planning how best to proceed. As we&#8217;ll figure out the next steps and the best path forward, we&#8217;ll share further details in future updates.&#8221;</p>\n<p>After Schlesser&#8217;s announcement, there was some discussion about whether or not 4.9.9 is still needed, but the matter seemed to be already settled. Josepha Haden, who leads the open source teams at Automattic as a full-time sponsored volunteer on the WordPress project, is assisting in transitioning important items from the 4.9.9 release.</p>\n<p>&#8220;I think we all know that a lot of work has gone into 4.9.9 planning already,&#8221; Haden said. &#8220;So the next couple of weeks will be all about reaching out to team reps and discussing what you&#8217;ve been working on and what we can do to keep things moving forward for everyone. But I will probably be helping with the 4.9.9 transition things, and I will say that the final timelines will almost certainly will be contingent on what I hear from team reps who were collaborating on 4.9.9.&#8221;</p>\n<p>Haden confirmed that Schlesser was sharing the overall plan for the release but that feedback from the discussions indicated there may be items with earlier deadlines to consider. After gathering information from the team representatives, they will work to prioritize items that may need to land before 5.0. There may be time for a tightly-focused 4.9.9 release aimed solely at PHP 7.3 compatibility.</p>\n<p>&#8220;I think it will be possible to wrangle a small 4.9.9 release with PHP 7.3 related bug fixes, while 5.0 is ramping up,&#8221; Gary Pendergast commented during the meeting.</p>\n<p>&#8220;Given a good part of 4.9.9&#8217;s focus was on supporting things for Gutenberg, not sure we &#8216;need a 4.9.9 release if we would just include the work done to support Gutenberg with the Gutenberg merge proposal coming for 5.0,&#8221; Jeff Paul said. Gutenberg technical lead Matias Ventura confirmed that the plugin is ready for the team to begin collaborating on a merge proposal.</p>\n<p>&#8220;We have kept development in the plugin for as long as possible for speed / convenience, etc, but it’s been ready for starting 5.0 process for a bit,&#8221; Ventura said. &#8220;From the Gutenberg side, things should be ready to start planning the merge.&#8221;</p>\n<p>At the moment, a quick 4.9.9 release is under consideration for PHP 7.3-related bug fixes. It may happen while the gears are in motion for 5.0 or it may yet be cancelled in favor of going full speed ahead with the 5.0 release cycle. The decision has not yet been officially announced.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 26 Sep 2018 22:29:54 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:23;a:6:{s:4:\"data\";s:11:\"\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:1:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"HeroPress: The Hero’s Journey\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"https://heropress.com/?p=2629\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:101:\"https://heropress.com/the-heros-journey/#utm_source=rss&utm_medium=rss&utm_campaign=the-heros-journey\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:3427:\"<img width=\"960\" height=\"480\" src=\"https://s20094.pcdn.co/wp-content/uploads/2016/10/100516-2-1024x512.jpg\" class=\"attachment-large size-large wp-post-image\" alt=\"Pull Quote: We cannot know the end of any journey until we find ourselves there.\" /><p>A couple years ago I noticed that someone had done a talk at WordCamp Brighton called &#8220;<a href=\"http://wordpress.tv/2016/08/09/tamsin-taylor-a-heros-journey/\">The Hero&#8217;s Journey</a>&#8220;. As you can imagine it immediately caught my eye and I went hunting to find this cool person.  As it turns out it was Tamsin Taylor from Brighton and she had a great story. As I was re-reading it today I was struck by her point that great things are built from the foundation of many smaller things. Experience comes from years of simply doing. Maturity comes from years of growing. Heroism comes from many small acts of goodness.</p>\n<p>There&#8217;s a journey involved in every destination. We face hardship, struggle, pain, and growth, and at the end we&#8217;re a different person in a different place. Often we don&#8217;t realize it until someone says &#8220;Wow, you&#8217;re amazing, how did you get so good at that?&#8221; and you realize you&#8217;ve just been doing it so long that it just feels like who you are.</p>\n<p>Find the good things in life and do them over and over until they become who you are.  Also, read Tamsin&#8217;s excellent essay:</p>\n<blockquote class=\"wp-embedded-content\"><p><a href=\"https://heropress.com/essays/bumpy-journey-becoming/\">The Bumpy Journey of Becoming</a></p></blockquote>\n<p></p>\n<div class=\"rtsocial-container rtsocial-container-align-right rtsocial-horizontal\"><div class=\"rtsocial-twitter-horizontal\"><div class=\"rtsocial-twitter-horizontal-button\"><a title=\"Tweet: The Hero&#8217;s Journey\" class=\"rtsocial-twitter-button\" href=\"https://twitter.com/share?text=The%20Hero%27s%20Journey&via=heropress&url=https%3A%2F%2Fheropress.com%2Fthe-heros-journey%2F\" rel=\"nofollow\" target=\"_blank\"></a></div></div><div class=\"rtsocial-fb-horizontal fb-light\"><div class=\"rtsocial-fb-horizontal-button\"><a title=\"Like: The Hero&#8217;s Journey\" class=\"rtsocial-fb-button rtsocial-fb-like-light\" href=\"https://www.facebook.com/sharer.php?u=https%3A%2F%2Fheropress.com%2Fthe-heros-journey%2F\" rel=\"nofollow\" target=\"_blank\"></a></div></div><div class=\"rtsocial-linkedin-horizontal\"><div class=\"rtsocial-linkedin-horizontal-button\"><a class=\"rtsocial-linkedin-button\" href=\"https://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Fheropress.com%2Fthe-heros-journey%2F&title=The+Hero%26%238217%3Bs+Journey\" rel=\"nofollow\" target=\"_blank\" title=\"Share: The Hero&#8217;s Journey\"></a></div></div><div class=\"rtsocial-pinterest-horizontal\"><div class=\"rtsocial-pinterest-horizontal-button\"><a class=\"rtsocial-pinterest-button\" href=\"https://pinterest.com/pin/create/button/?url=https://heropress.com/the-heros-journey/&media=https://heropress.com/wp-content/uploads/2016/10/100516-2-150x150.jpg&description=The Hero\'s Journey\" rel=\"nofollow\" target=\"_blank\" title=\"Pin: The Hero&#8217;s Journey\"></a></div></div><a rel=\"nofollow\" class=\"perma-link\" href=\"https://heropress.com/the-heros-journey/\" title=\"The Hero&#8217;s Journey\"></a></div><p>The post <a rel=\"nofollow\" href=\"https://heropress.com/the-heros-journey/\">The Hero&#8217;s Journey</a> appeared first on <a rel=\"nofollow\" href=\"https://heropress.com\">HeroPress</a>.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 26 Sep 2018 14:57:46 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:24;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:117:\"WPTavern: Creative Commons Beta Search Tool Adds Access to 13 Content Providers, Improves Metadata with AI Image Tags\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"https://wptavern.com/?p=84213\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:127:\"https://wptavern.com/creative-commons-beta-search-tool-adds-access-to-13-content-providers-improves-metadata-with-ai-image-tags\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:3609:\"<p>In February 2017, Creative Commons <a href=\"https://wptavern.com/creative-commons-new-search-tool-is-now-in-beta-pulls-cc-images-from-multiple-sources\" rel=\"noopener noreferrer\" target=\"_blank\">launched the beta version</a> of its new <a href=\"https://ccsearch.creativecommons.org\" rel=\"noopener noreferrer\" target=\"_blank\">multi-source search tool</a>, built on a lean budget by a single contractor over seven months. Since that time a new tech team has taken over the project to further the mission of finding and indexing all 1.4 billion+ CC-licensed works on the web.</p>\n<p>The first iteration added access to images from Rijksmuseum, Flickr, 500px, the New York Public Library, and the Metropolitan Museum of Art. Today&#8217;s <a href=\"https://creativecommons.org/2018/09/24/big-changes-for-cc-search-beta-updates-released-today/\" rel=\"noopener noreferrer\" target=\"_blank\">update</a> to the search tool adds access to more than 10 million images and a total of 13 content providers, including Behance, Geograph UK, IHA Holiday Ads, several other museums, and a handful of smaller sources.</p>\n<p><a href=\"https://i0.wp.com/wptavern.com/wp-content/uploads/2018/09/screencapture-ccsearch-creativecommons.png?ssl=1\"><img /></a>The search page is also sporting a new design, featuring Creative Commons&#8217; top categories and top images.</p>\n<p>Previously, search results were displayed as a masonry style grid, supporting images of varying sizes and orientations. The updated results are displayed as a slice of a landscape-oriented image on mobile and desktop, which is not optimal for seeing what the image is without clicking on it. This doesn&#8217;t seem like an improvement, but the search tool&#8217;s development team is still working through bugs and the site is in active development.</p>\n<p>This update to the search tool also adds AI image tags generated by <a href=\"https://clarifai.com/\" rel=\"noopener noreferrer\" target=\"_blank\">Clarifai</a>&#8216;s image classification system. More than 10.3 million images have been tagged using the image recognition software, in addition to the user-defined and platform-defined tags gathered from web crawl data. This should make the search results more accurate for users in the future.</p>\n<p>Lists and collections were a feature of the first beta but private lists are no longer available in the beta update. (Users can request they be manually retrieved by emailing Creative Commons.) The feature has been updated to allow users to create public lists of images without having an account. A new shares.cc link shortening system is now available for sharing images and lists.</p>\n<p>The Creative Commons library is an excellent resource for finding images for blogging or for use in WordPress theme and plugin development. Images that are CC0-licensed are GPL-compatible for use within WordPress products. Creative Commons has a recommended implementation for <a href=\"https://wiki.creativecommons.org/wiki/CC0_FAQ#May_I_apply_CC0_to_computer_software.3F_If_so.2C_is_there_a_recommended_implementation.3F\" rel=\"noopener noreferrer\" target=\"_blank\">using CC0 to release software</a>.</p>\n<p>A WordPress plugin for bringing images in from the Creative Commons library does not yet exist but there are many that pull CC-licensed images from resources like Flickr or Pixabay. For now, users will need to search directly on the <a href=\"https://ccsearch.creativecommons.org/\" rel=\"noopener noreferrer\" target=\"_blank\">Creative Commons beta search</a> website. The new search tool allows users to filter by collection, license, and license type.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Tue, 25 Sep 2018 23:45:42 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:25;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:85:\"WPTavern: Gutenberg 3.9 Introduces Reusable, Exportable Templates for Multiple Blocks\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"https://wptavern.com/?p=84179\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:95:\"https://wptavern.com/gutenberg-3-9-introduces-reusable-exportable-templates-for-multiple-blocks\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:3107:\"<p><a href=\"https://make.wordpress.org/core/2018/09/21/whats-new-in-gutenberg/\" rel=\"noopener noreferrer\" target=\"_blank\">Gutenberg 3.9</a> was released last week with a new feature that allows users to group multiple blocks into reusable templates. The templates can also be exported and imported as a JSON file.</p>\n<p>The idea of reusable templates is an expansion of the concept of <a href=\"https://github.com/WordPress/gutenberg/issues/1516\" rel=\"noopener noreferrer\" target=\"_blank\">dynamic reusable blocks</a> that Gutenberg technical lead Matias Ventura proposed in June 2017. Reusability is even more powerful when applied to multiple blocks. The import/export capabilities make it possible for templates to be easily shared across WordPress sites.</p>\n<p><a href=\"https://i2.wp.com/wptavern.com/wp-content/uploads/2018/09/Screen-Shot-2018-09-24-at-1.04.36-PM.png?ssl=1\"><img /></a></p>\n<p>If you want to test it, you can select multiple blocks by selecting the content inside a block and dragging outside the boundaries of the block to extend the selection to multiple blocks. The <a href=\"https://github.com/WordPress/gutenberg/issues/62\" rel=\"noopener noreferrer\" target=\"_blank\">multi-select feature</a> was originally added for the purpose of deleting or moving multiple blocks but it has now become indispensable for creating reusable templates.</p>\n<p>This feature lays the ground work for a full-fledged layout builder in the next phase of Gutenberg development. Reusable templates should make it a breeze to build WordPress sites with pre-defined layouts that users and developers can share. They are much more intuitive to implement than page templates.</p>\n<p>&#8220;Holy wow, imagine this: wp-blueprints.com, where people can group blocks together and share their JSON strings with nice little copy buttons,&#8221; Gutenberg designer Joen Asmussen commented on the PR. &#8220;Categories for top rated, most downloaded, search, etc? This is going to happen because of this magic.&#8221;</p>\n<p>Matias Ventura&#8217;s demo video shows the reusable templates in action. It also highlights a new tool for <a href=\"https://github.com/WordPress/gutenberg/pull/7995\" rel=\"noopener noreferrer\" target=\"_blank\">visually comparing possible ways to convert an invalid block</a>. The editor now includes a diff UI for blocks, which Ventura said could possibly scale in the future to provide an improved UX for revisions as a whole.</p>\n<p></p>\n<p>A few other notable additions in the 3.9 release include improvements to the drag and drop handle, collapsible groups for the block toolbar, and the ability to convert a cover image block to an image and back. <a href=\"https://github.com/WordPress/gutenberg/pull/9683\" rel=\"noopener noreferrer\" target=\"_blank\">Dark editor style support</a> is now available for theme developers, making Gutenberg more friendly for use with dark WordPress themes. Check out the <a href=\"https://make.wordpress.org/core/2018/09/21/whats-new-in-gutenberg/\" rel=\"noopener noreferrer\" target=\"_blank\">3.9 changelog</a> to see a full list of enhancements and bug fixes.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Mon, 24 Sep 2018 23:32:53 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:26;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:82:\"WPTavern: New commonWP Plugin Enables WordPress Sites to Use the Free jsDelivr CDN\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"https://wptavern.com/?p=84046\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:93:\"https://wptavern.com/new-commonwp-plugin-enables-wordpress-sites-to-use-the-free-jsdelivr-cdn\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:5414:\"<p>Milan Dinić, a WordPress developer based in Serbia, has released his <a href=\"https://wordpress.org/plugins/commonwp/\" rel=\"noopener noreferrer\" target=\"_blank\">commonWP</a> plugin that enables WordPress sites to use the free, public <a href=\"https://www.jsdelivr.com/\" rel=\"noopener noreferrer\" target=\"_blank\">jsDelivr</a> CDN. Last year <a href=\"https://www.jsdelivr.com/blog/jsdelivr-reloaded-2017/\" rel=\"noopener noreferrer\" target=\"_blank\">jsDelivr was revamped</a> to allow any file from GitHub and npm to be served by the CDN. WordPress&#8217; mirror on GitHub made it possible for Dinić to create a plugin that works with the CDN.</p>\n<p>commonWP aims to speed up performance by offloading JavaScript and CSS files to jsDelivr, including the following:</p>\n<ul>\n<li>All files from WordPress core (unless development version of WordPress is in use)</li>\n<li>All files from plugins hosted by WordPress.org Plugins Repository (unless author of specific plugin doesn’t use SVN tags for releasing)</li>\n<li>All files from themes hosted by WordPress.org Themes Repository</li>\n<li>All files from plugins and themes hosted on GitHub that support GitHub Updater</li>\n<li>All files marked as available on npm in any type of theme, plugin, or MU plugin</li>\n</ul>\n<p>Dinić said he designed commonWP with a emphasis on keeping it lightweight, easy-to-use, and secure. He claims the approach he used in the plugin is safer than any other plugin that employs a CDN for WordPress files:</p>\n<blockquote><p>First, commonWP will only rewrite file to point to one on jsDelivr if that remote file is identical to local one. Second, during comparison, it generates <a href=\"https://developer.mozilla.org/en-US/docs/Web/Security/Subresource_Integrity\" rel=\"noopener noreferrer\" target=\"_blank\">subresource identity hash</a> of remote jsDelivr file and includes that hash in page’s source code so browser won’t load remote file if it doesn’t have exactly the same hash.</p></blockquote>\n<p>Dinić recommends the plugin for users who are not already using a CDN, have limited budgets, or live in less developed countries.</p>\n<p>&#8220;Using a CDN is generally recommended, and with this one they might get even more speed because some files might be already cached by their visitors,&#8221; he said. &#8220;Imagine if jquery.js, jquery-migrate.min.js (most common files) are always served from one place. You wouldn&#8217;t need to get them from each WordPress site you visit. You would get them once and they would be in your browser&#8217;s cache, and initial page load would be faster.&#8221;</p>\n<p>Dinić referenced a Trac <a href=\"https://core.trac.wordpress.org/ticket/44229\" rel=\"noopener noreferrer\" target=\"_blank\">ticket</a> where using a CDN is proposed for serving assets like jQuery, but no action has been taken on the proposal yet. One benefit he cites for WordPress&#8217; global user base is that a CDN like jsDelivr allows visitors to get files from their own content, country, or even the same city. jsDelivr has a large multi-CDN network with infrastructure built on top of other networks, including StackPath, Cloudflare, Fastly, and Quantil. It also has custom servers in locations like China where other public CDNs have little or no presence.</p>\n<p><a href=\"https://i2.wp.com/wptavern.com/wp-content/uploads/2018/09/Screen-Shot-2018-09-21-at-2.39.40-PM.png?ssl=1\"><img /></a></p>\n<p>commonWP doesn&#8217;t have any settings for users to configure. The plugin fills up its cache in the background after it is activated. Developers can fine tune it for their needs and Dinić has published some <a href=\"https://github.com/dimadin/commonWP#marking-files-that-exist-in-npm\" rel=\"noopener noreferrer\" target=\"_blank\">code examples</a> to GitHub.</p>\n<p>In his release <a href=\"https://milandinic.com/2018/09/18/introducing-commonwp/\" rel=\"noopener noreferrer\" target=\"_blank\">post</a>, Dinić referenced a Serbian site getting a 1-second loading improvement and has done other tests but said he&#8217;s still looking for a good way to present the data. The plugin&#8217;s FAQ outlines which factors influence whether or not commonWP can bring performance improvements:</p>\n<ul>\n<li>How many of your files are available on jsDelivr and can be rewritten &#8211; the more files on jsDelivr, the more speed; the more files used by the page are rewritten to jsDelivr, the more speed.</li>\n<li>The further your site&#8217;s visitors are from the server your site is hosted on, the more speed you can get.</li>\n<li>The slower your server is, the more speed it can get.</li>\n<li>If your visitors already visited WordPress site(s) with commonWP activated, there is more chance that some of the files you use on your site are already cached by them so they can get more speed.</li>\n</ul>\n<p>Not every site will see drastic improvements for site owners testing performance, but visitors from other parts of the world may be able to load certain files faster. Dinić recommends users test their sites using webpagetest.org and select a higher number of tests to get an average. He also recommends testing with different locations and different connection speeds. Test with the plugin activated and deactivated and when the site has a full cache. In general, the further the location is from the server and the larger number of files sent to jsDelivr, the bigger the performance improvement will be.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 21 Sep 2018 20:19:34 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:27;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:71:\"WPTavern: Gutenstats Blog Is Live, Tracking Gutenberg Beta Testing Data\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"https://wptavern.com/?p=84153\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:81:\"https://wptavern.com/gutenstats-blog-is-live-tracking-gutenberg-beta-testing-data\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:1455:\"<p>Matt Mullenweg <a href=\"https://twitter.com/photomatt/status/1042901193679241216\" rel=\"noopener noreferrer\" target=\"_blank\">tweeted</a> out a link to <a href=\"https://gutenstats.blog/\" rel=\"noopener noreferrer\" target=\"_blank\">Gutenstats.blog</a> this evening, a new site dedicated to tracking Gutenberg beta testing data. The site shows there are currently more than 420,000 active installations of Gutenberg, a slightly more precise number than reported on the WordPress.org plugin page (400K+).</p>\n<p>Gutenstats also tracked 213,000 posts written with the new editor and 8,142 posts written yesterday. These numbers were collected from posts made on WordPress.com and Jetpack sites since late August 2018 and a note on the site says the actual number is higher.</p>\n<p>In June, Mullenweg unveiled a <a href=\"https://wptavern.com/matt-mullenweg-unveils-gutenberg-roadmap-at-wceu-wordpress-agencies-and-product-developers-sprint-to-prepare\" rel=\"noopener noreferrer\" target=\"_blank\">roadmap for Gutenberg to land in WordPress 5.0</a>. At that time the plugin was active on just 14,000 sites. He proposed 100K+ sites having made 250K+ posts using Gutenberg as a threshold for adequate pre-5.0 testing.</p>\n<p>Gutenstats tracking shows testing has far exceeded the original goal for active installations and should reach the posts written goal in just a few days. Mullenweg said they plan to add some block stats to the tracking page in the future.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 21 Sep 2018 04:21:59 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:28;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:70:\"WPTavern: ACF 5.0 Released with Updated UI and Gutenberg Compatibility\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"https://wptavern.com/?p=84105\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:81:\"https://wptavern.com/acf-5-0-released-with-updated-ui-and-gutenberg-compatibility\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:2771:\"<p><a href=\"https://www.advancedcustomfields.com/blog/acf-5-0-release/\" rel=\"noopener noreferrer\" target=\"_blank\">ACF version 5.0</a> landed on WordPress.org this week with Gutenberg compatibility now available for more than one million sites where the plugin is active. The release is a welcome update for developers who were concerned about what would happen in real world usage of Gutenberg on sites with ACF-powered customizations. ACF&#8217;s Gutenberg compatibility is arriving well ahead of WordPress 5.0&#8217;s TBD schedule for merging the new editor, giving developers time to get their clients&#8217; sites ready.</p>\n<p>&#8220;You can expect to see lots of Gutenberg related items in our changelogs over the coming months as we edge nearer to WordPress version 5.0,&#8221; the ACF announcement stated. &#8220;You’ll also want to take note that ACF 5 is the only version that will provide Gutenberg support. Previous versions will not be compatible.&#8221;</p>\n<p>The version numbers across ACF Pro and the free version on WordPress.org are somewhat confusing. This particular release is significant in that it brings several years of development from the Pro version into the plugin hosted on WordPress.org. Now both products are technically on v5.7.6.</p>\n<blockquote class=\"twitter-tweet\">\n<p lang=\"en\" dir=\"ltr\">Hi guys. This version 5 release is for our “free plugin” on <a href=\"https://t.co/V7oUQSI5Ei\">https://t.co/V7oUQSI5Ei</a> and does not affect ACF PRO. Now both ACF and ACF PRO are v5.7.6!</p>\n<p>&mdash; Advanced Custom Fields (@wp_acf) <a href=\"https://twitter.com/wp_acf/status/1041590825505849344?ref_src=twsrc%5Etfw\">September 17, 2018</a></p></blockquote>\n<p></p>\n<p>ACF 5.0 introduces a redesigned UI, performance improvements, and the plugin&#8217;s new <a href=\"https://www.advancedcustomfields.com/resources/local-json/\" rel=\"noopener noreferrer\" target=\"_blank\">Local JSON</a> feature, which saves field group and field settings as .json files within the user&#8217;s theme. This reduces database calls and allows for version control of field settings.</p>\n<a href=\"https://i2.wp.com/wptavern.com/wp-content/uploads/2018/09/acf-5-0-fresh-ui.jpg?ssl=1\"><img /></a>image credit: <a href=\"https://www.advancedcustomfields.com/blog/acf-5-0-release/\">ACF</a>\n<p>Version 5.0 adds six new fields, including a link, group, accordion, oEmbed, date time picker, and clone fields (an ACF pro feature). It also introduce a new Tools page where users can export and import field groups as JSON.</p>\n<p>For more information on items related to upgrading ACF and add-on compatibility, check out the official <a href=\"https://www.advancedcustomfields.com/blog/acf-5-0-release/\" rel=\"noopener noreferrer\" target=\"_blank\">5.0 release post</a>.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 20 Sep 2018 17:54:02 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:29;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:61:\"WPTavern: WPForms Acquires Pirate Forms, Plugin to be Retired\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"https://wptavern.com/?p=84108\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:71:\"https://wptavern.com/wpforms-acquires-pirate-forms-plugin-to-be-retired\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:3737:\"<a href=\"https://i1.wp.com/wptavern.com/wp-content/uploads/2018/09/pirates.jpg?ssl=1\"><img /></a>photo credit: Reiterlied <a href=\"http://www.flickr.com/photos/126661502@N05/37773453702\">Plundering San Francisco Bay</a> &#8211; <a href=\"https://creativecommons.org/licenses/by-nc-sa/2.0/\">(license)</a>\n<p><a href=\"https://wpforms.com/wpforms-has-acquired-pirate-forms/\" rel=\"noopener noreferrer\" target=\"_blank\">WPForms has acquired Pirate Forms</a>, a popular WordPress contact form and SMTP plugin originally created by ThemeIsle in 2015. The announcement coincides with International Talk Like a Pirate Day but the pirate branding of the plugin is set to be retired and its users will be given the option to migrate to WPForms.</p>\n<p><a href=\"https://wordpress.org/plugins/pirate-forms/\" rel=\"noopener noreferrer\" target=\"_blank\">Pirate Forms</a> was purchased in what WPForms co-founder and CEO Syed Balkhi describes as &#8220;an all-cash deal.&#8221; Although the plugin currently has more than 300,000 users on WordPress.org, its features and capabilities are inferior to the more modern WPForms and its creators lacked the resources to bring it up to speed.</p>\n<p>Pirate Forms had gained popularity in its earlier days by providing a simple forms plugin (without all the builder functions) for sites that required just one contact form.</p>\n<p>&#8220;Where most of the other plugins aim at &#8216;mega functionality&#8217; with tons of customizations, add-ons and whatnots, Pirate Forms has made a bet on simplicity,&#8221; ThemeIsle representative Karol K said in the plugin&#8217;s <a href=\"https://themeisle.com/blog/pirate-forms-is-now-wpforms/\" rel=\"noopener noreferrer\" target=\"_blank\">farewell post</a>.</p>\n<p>&#8220;In other words, it just works(ed) right after the installation, with no particular setup required (other than adding your form to a contact page). This was a nice refreshment compared to the usual &#8216;get through tons of onboarding wizard screens before you can use the plugin&#8217; -approach.&#8221;</p>\n<p>Pirate Forms could no longer deliver what users expect from a forms plugin in 2018 and ThemeIsle opted to find a buyer in order to free up resources to focus on releasing the <a href=\"https://themeisle.com/blog/hestia-2-0/\" rel=\"noopener noreferrer\" target=\"_blank\">Hestia 2.0</a> theme.</p>\n<p>&#8220;This acquisition further strengthens WPForms&#8217; position in the WordPress ecosystem,&#8221; Balkhi said. The expectation is that a large number of users will migrate their forms to WPForms as the result of Pirate Forms discontinuing active development.</p>\n<p><a href=\"https://wpforms.com/docs/how-to-move-from-pirate-forms-to-wpforms/\" rel=\"noopener noreferrer\" target=\"_blank\">A migration path to WPForms</a> is built into the latest version of Pirate Forms and Balkhi describes the process as a seamless transition. Users are also free to select another forms plugin but they will not have the benefit of the migration tool, which also imports the notification email and confirmation settings from users&#8217; existing forms. Those who have purchased Pirate Forms Pro will receive a free one-year license to WPForms Pro.</p>\n<p><a href=\"https://wordpress.org/plugins/wpforms-lite/\" rel=\"noopener noreferrer\" target=\"_blank\">WPForms</a> has more than 1 million active installs and currently maintains a 4.9 out of 5 star average rating on WordPress.org. The drag-and-drop WordPress form builder is much more advanced than Pirate Forms and the free version allows users to create contact forms, subscription forms, payment forms, offline forms, multi-page forms, and many other types of customized feedback mechanisms. It is also compatible with all of ThemeIsle&#8217;s themes.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 20 Sep 2018 02:50:38 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:30;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:90:\"WPTavern: Big Bite Creative to Launch New Amnesty International Website based on Gutenberg\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"https://wptavern.com/?p=84074\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:100:\"https://wptavern.com/big-bite-creative-launches-new-amnesty-international-website-based-on-gutenberg\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:4776:\"<p><a href=\"https://i1.wp.com/wptavern.com/wp-content/uploads/2018/09/Screen-Shot-2018-09-19-at-10.39.11-AM.png?ssl=1\"><img /></a></p>\n<p>The team at <a href=\"http://bigbitecreative.com\" rel=\"noopener noreferrer\" target=\"_blank\">Big Bite Creative</a> has developed a new website for Amnesty International using Gutenberg, soon to be launched at <a href=\"http://amnesty.eu\" rel=\"noopener noreferrer\" target=\"_blank\">amnesty.eu</a>. The agency worked in partnership with <a href=\"https://vip.wordpress.com\" rel=\"noopener noreferrer\" target=\"_blank\">WordPress.com VIP</a> to provide the London-based human rights organization with the tools to create multiple sites that could be uniquely customized for their editorial needs.</p>\n<p>After successfully using Gutenberg to launch a site for an international bank, Big Bite CTO Jason Agnew said his team gained confidence to use the new editor for the Amnesty site. The client approached Bite Bite around the time of WordCamp Europe when Matt Mullenweg unveiled a roadmap for getting a stable Gutenberg release before the end of the year.</p>\n<p>&#8220;On top of this the Amnesty project suited Gutenberg,&#8221; Agnew said. &#8220;Their brief mentioned 14 components which could be used to build out multiple sites. I honestly think it would have been difficult to build something that required this level of flexibility with a field manager like Fieldmanager, CMB2 or ACF. Perhaps it would have been possible with page builders like Visual Composer, but these platforms are still figuring out how they will work with the WordPress 5.0.&#8221;</p>\n<p>Through the use of a combination of prompts, custom blocks, nested blocks, and predefined styles, Big Bite made it possible for even non-technical editorial staff to create and arrange content to build out websites for various outreach locations.</p>\n<p>&#8220;It&#8217;s been fascinating to give the client full control over the site structure compared to the more traditional development of templates,&#8221; Agnew said. &#8220;We are still in the early stages of launching sites with the new platform, but the client has built up the EU site on their own without much support, which should be going live early October. Now they are in the process building out websites for Mali and Iran, with the goal to launch around 20 sites initially. We&#8217;ve had the editorial team describe the experience as fun &#8211; that&#8217;s from a team who have used WordPress with ACF in the past, which does offer an intuitive UI but still requires a level of training of what fields relate to what pieces of content on the front-end.&#8221;</p>\n<p>As many others have reported, one of the most challenging things Big Bite encountered in extending Gutenberg was the project&#8217;s incomplete documentation.</p>\n<p>&#8220;We&#8217;ve had our challenges, and particularly the Gutenberg documentation is not up to standard, which leads to a lot of time being wasted,&#8221; Agnew said. &#8220;But I have to say once our team get over the first block or two it wasn&#8217;t an issue. It&#8217;s important to say that the Gutenberg team Slack have been a great help when we did run into problems. We did discover IE11 support is still a work in progress, for example, copy &amp; paste didn&#8217;t work, meta boxes wouldn&#8217;t render causing saving issues with posts.&#8221;</p>\n<p>Agnew said for most issues there isn&#8217;t a lot one can do to resolve them apart from waiting for each update as the plugin improves, but it&#8217;s something agencies need to account for when working with clients. The Big Bite team also found that Gutenberg compatibility is still an issue for many of the plugins that they looked at using for the project.</p>\n<p>&#8220;Apart from using Yoast we&#8217;ve mainly custom built the theme due to many plugins still requiring UI changes to work well with Gutenberg,&#8221; Agnew said. &#8220;Probably the most significant feature we wrote was language syndication system.&#8221;</p>\n<p>Big Bite plans to open source Amnesty International&#8217;s full theme, which includes all of the custom blocks. Prior to that they are going to remove all the branding to avoid lots of new sites popping looking like the Amnesty brand. The agency is aiming for publishing the code the same day as WordPress 5.0 is released or earlier if the release is delayed beyond January.</p>\n<p>For a closer look at the Amnesty International project, check out Big Bite&#8217;s announcement <a href=\"https://bigbitecreative.com/investing-gutenberg-amnesty-international/\" rel=\"noopener noreferrer\" target=\"_blank\">post</a>. The video below was created in partnership with WordPress.com VIP and offers a tour of some of the custom Gutenberg blocks they created for Amnesty.</p>\n<p></p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 19 Sep 2018 19:12:43 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:31;a:6:{s:4:\"data\";s:11:\"\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:1:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:46:\"HeroPress: The “India is cheap” Stereotype\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"https://heropress.com/?p=2627\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:125:\"https://heropress.com/the-india-is-cheap-stereotype/#utm_source=rss&utm_medium=rss&utm_campaign=the-india-is-cheap-stereotype\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:3284:\"<img width=\"960\" height=\"480\" src=\"https://s20094.pcdn.co/wp-content/uploads/2015/10/MeasureSuccess-HeroPress-2-1024x512.jpg\" class=\"attachment-large size-large wp-post-image\" alt=\"Pull quote: Measure success in terms of the impact your work is making.\" /><p>In the early days of HeroPress there were quite a few Indian contributors, for a variety of reasons. India has long been a technology powerhouse, but the WordPress community was just beginning to get traction. I got to meet many Indians and even traveled there for <a href=\"https://heropress.com/going-to-wordcamp-pune/\">WordCamp Pune</a>. The stereotype that &#8220;India is cheap&#8221; is a difficult one for Indians to deal with. What does it mean? How should it be responded to?</p>\n<p>In October of 2015 Rahul Bansal, the owner of a world class WordPress agency named rtCamp, did a HeroPress essay where he talks about what it means to run an agency in India, charge properly, and turn our work that rivals any from anywhere else in the world.  Check out Rahul&#8217;s thoughts:</p>\n<blockquote class=\"wp-embedded-content\"><p><a href=\"https://heropress.com/essays/wordpress-continues-inspire/\">WordPress Continues to Inspire</a></p></blockquote>\n<p></p>\n<div class=\"rtsocial-container rtsocial-container-align-right rtsocial-horizontal\"><div class=\"rtsocial-twitter-horizontal\"><div class=\"rtsocial-twitter-horizontal-button\"><a title=\"Tweet: The “India is cheap” Stereotype\" class=\"rtsocial-twitter-button\" href=\"https://twitter.com/share?text=The%20%E2%80%9CIndia%20is%20cheap%E2%80%9D%20Stereotype&via=heropress&url=https%3A%2F%2Fheropress.com%2Fthe-india-is-cheap-stereotype%2F\" rel=\"nofollow\" target=\"_blank\"></a></div></div><div class=\"rtsocial-fb-horizontal fb-light\"><div class=\"rtsocial-fb-horizontal-button\"><a title=\"Like: The “India is cheap” Stereotype\" class=\"rtsocial-fb-button rtsocial-fb-like-light\" href=\"https://www.facebook.com/sharer.php?u=https%3A%2F%2Fheropress.com%2Fthe-india-is-cheap-stereotype%2F\" rel=\"nofollow\" target=\"_blank\"></a></div></div><div class=\"rtsocial-linkedin-horizontal\"><div class=\"rtsocial-linkedin-horizontal-button\"><a class=\"rtsocial-linkedin-button\" href=\"https://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Fheropress.com%2Fthe-india-is-cheap-stereotype%2F&title=The+%E2%80%9CIndia+is+cheap%E2%80%9D+Stereotype\" rel=\"nofollow\" target=\"_blank\" title=\"Share: The “India is cheap” Stereotype\"></a></div></div><div class=\"rtsocial-pinterest-horizontal\"><div class=\"rtsocial-pinterest-horizontal-button\"><a class=\"rtsocial-pinterest-button\" href=\"https://pinterest.com/pin/create/button/?url=https://heropress.com/the-india-is-cheap-stereotype/&media=https://heropress.com/wp-content/uploads/2015/10/MeasureSuccess-HeroPress-2-150x150.jpg&description=The “India is cheap” Stereotype\" rel=\"nofollow\" target=\"_blank\" title=\"Pin: The “India is cheap” Stereotype\"></a></div></div><a rel=\"nofollow\" class=\"perma-link\" href=\"https://heropress.com/the-india-is-cheap-stereotype/\" title=\"The “India is cheap” Stereotype\"></a></div><p>The post <a rel=\"nofollow\" href=\"https://heropress.com/the-india-is-cheap-stereotype/\">The “India is cheap” Stereotype</a> appeared first on <a rel=\"nofollow\" href=\"https://heropress.com\">HeroPress</a>.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 19 Sep 2018 14:59:29 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:32;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:89:\"WPTavern: Gutenberg Cloud: A Cross-Platform Community Library for Custom Gutenberg Blocks\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"https://wptavern.com/?p=84045\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:99:\"https://wptavern.com/gutenberg-cloud-a-cross-platform-community-library-for-custom-gutenberg-blocks\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:8949:\"<p>During their <a href=\"https://wptavern.com/drupal-gutenberg-project-receives-enthusiastic-reception-at-drupal-europe\" rel=\"noopener noreferrer\" target=\"_blank\">presentation at Drupal Europe</a>, the <a href=\"https://www.frontkom.no/\" rel=\"noopener noreferrer\" target=\"_blank\">Frontkom</a> team behind the Drupal Gutenberg project announced that they are working on a block management system called <a href=\"https://gutenbergcloud.org/\" rel=\"noopener noreferrer\" target=\"_blank\">Gutenberg Cloud</a>, a collective library of blocks online.</p>\n<p>The library will offer a content repository for custom Gutenberg blocks, such as forms, a call-to-action section, product grid, or even a web component. Since the blocks are JavaScript-only, they would work across both Drupal and WordPress alike, so developers can build for both platforms simultaneously. The Gutenberg Cloud creators are aiming to facilitate a new level of cross-platform sharing that few envisioned when the Gutenberg project began.</p>\n<p>&#8220;Gutenberg to us is much more than just another module,&#8221; Frontkom CIO Per André Rønsen said during their presentation at Drupal Europe. &#8220;We think of it as a platform for brand new features. We are very excited about the sharing/community aspect and the possibilities here. We want to make it easy to share and reuse custom blocks across pages, across projects, across companies, and even across publishing platforms. Drupal has always been great at sharing backend style of code. Now let&#8217;s make it great at sharing frontend code as well. This is why we&#8217;re working on a block managing system.&#8221;</p>\n<p><a href=\"https://i2.wp.com/wptavern.com/wp-content/uploads/2018/09/gutenberg-cloud.png?ssl=1\"><img /></a></p>\n<p>Gutenberg Cloud would provide a plugin for WordPress and a module for Drupal (and eventually other applications) that would enable users to browse, filter, and discover blocks within the admin and download the ones they select. Early mockups I previewed show an interface similar to the theme and plugin browsers inside the WordPress admin.</p>\n<p>A cloud-based block service solves a few problems that Gutenberg early adopters are already experiencing when hunting for blocks. WordPress theme and plugin shops have have been releasing their own block collections bundled into a plugin, but it&#8217;s not easy to discover or browse the individual blocks. Having blocks available on Gutenberg Cloud would prevent developers from having to create a new module or plugin for each individual block. It also prevents users from having to download an entire collection of blocks in a plugin when they really only need one or two of them.</p>\n<h3>Gutenberg Cloud Will Launch as a Community Project, Developers Contribute by Publishing Packages to NPM</h3>\n<p>Rønsen said they plan to launch Gutenberg Cloud as a community project. Any developer can contribute blocks by creating an NPM package and tagging it with &#8220;gutenberg-cloud.&#8221; The description on the cloud service outlines their intentions: &#8220;Code once, use everywhere: As Gutenberg blocks are CMS-agnostic, we want to provide an ecosystem all systems can connect to.&#8221;</p>\n<a href=\"https://i0.wp.com/wptavern.com/wp-content/uploads/2018/09/Screen-Shot-2018-09-18-at-3.39.54-PM.png?ssl=1\"><img /></a>An example Hero section block published to NPM\n<p>&#8220;We imagine everything from freelancers to big agencies and even community minded non-profits to contribute,&#8221; Rønsen said. &#8220;When people benefit from a better user experience, they tend to want to pay it forward. We have already talked to people in both communities wanting to contribute with code, so that is a great start for the platform.&#8221;</p>\n<p>I asked if his team envisions block creators being able to sell access to their blocks in the future. He said his team is open to finding a payment solution for commercial blocks but only if the community demands it.</p>\n<p>&#8220;Personally, I would be skeptical about committing to a community project that had a very commercial edge,&#8221; Rønsen said. &#8220;I think it&#8217;s important that the project stays focused on open source contributions, with a sharing-is-caring attitude. It&#8217;s the only language we know in Drupal. However, there is nothing wrong in providing high quality content and getting paid to do it. That&#8217;s why it&#8217;s on our roadmap to facilitate a payment solution for premium blocks – if the community wants it. It&#8217;s not central to the success of the platform, but I imagine it could be a great way to make some money for a skilled designer.&#8221;</p>\n<p>Rønsen said his team plans to launch Gutenberg Cloud sometime later this year after completing internal testing and an invitation-only closed beta with a different companies. One of the most challenging aspect of the project is creating a system that can handle updates.</p>\n<p>&#8220;By default users will get the latest stable release for the block from the author,&#8221; Rønsen said. &#8220;There will be a way to lock into a specific version and to version control that in Git, however. The plugin update system is a good analogy, but the infrastructure is completely outside of WordPress core. There are also some issues we haven’t solved yet regarding updates; it’s hard to make a system that doesn’t require a high maintenance effort for block developers.&#8221;</p>\n<p>The Gutenberg Cloud project is contingent upon Gutenberg development continuing on a path towards being a library that is decoupled from WordPress. Last week Rønsen <a href=\"https://wptavern.com/drupal-gutenberg-project-receives-enthusiastic-reception-at-drupal-europe\" rel=\"noopener noreferrer\" target=\"_blank\">told</a> the Tavern that his team hopes &#8220;that Gutenberg core devs will catch onto the vision of Gutenberg as the ‘editor for the open web’ — not just for WordPress.&#8221;</p>\n<p>Gutenberg team member Gary Pendergast indirectly acknowledged this in a recent blog <a href=\"https://pento.net/2018/09/16/the-mission-democratise-publishing/\" rel=\"noopener noreferrer\" target=\"_blank\">post</a> that affirmed the Drupal Gutenberg project and reiterated WordPress&#8217; mission to democratize publishing.</p>\n<p>&#8220;One of the primary philosophies of Gutenberg’s technical architecture is platform agnosticism, and we can see the practical effects of this practice coming to fruition across a variety of projects,&#8221; Pendergast said.</p>\n<p>&#8220;From early experiments in running the block editor as a standalone application, to being able to compile it into a native mobile component, and now seeing it running on Drupal, Gutenberg’s technical goals have always included a radical level of platform agnosticism.&#8221;</p>\n<p>If the Drupal community ends up adopting Gutenberg for its core editor, the shared library presents an unprecedented opportunity for deeper collaboration across the two publishing platforms. As an agency that has done client work for publishers on both CMSs, Frontkom saw the potential before many others and took it upon themselves to fork Gutenberg for Drupal. This is the beauty of open source software in action.</p>\n<p>&#8220;WordPress has many advantages that make it so popular, but hoarding those to ourselves doesn’t help the open web, it just creates more silos,&#8221; Pendergast said. &#8220;The open web is the only platform on which publishing can be democratized, so it makes sense for Gutenberg to work anywhere on the open web, not just inside WordPress. Drupal isn’t a competitor here, we’re all working towards the same goal, the different paths we’ve taken have made the open web stronger as a whole.&#8221;</p>\n<p>Rønsen said he could see other applications and e-commerce platforms like Magento benefitting from better page-building tools. His company has a special interest in publishers and plans to release a set of open source tools for building news front pages later in 2018. Rønsen said he is hopeful the Drupal Gutenberg project can evolve alongside WordPress as it enters into the site building and customization phase of the project.</p>\n<p>&#8220;I&#8217;m hopeful that the Gutenberg project will stay decoupled from WP one way or another,&#8221; Rønsen said. &#8220;This will leave room for Drupal to innovate on top of it. It could even be the case that the page building tools and customizer integration in WP will play nicely into the current architecture. In any case, I believe the basics of the editor and block concept will continue to be a good fit for Drupal. There is already some consensus out there on how to use Gutenberg for page building. A great example, is <a href=\"https://www.youtube.com/watch?v=OgF5ImDlCTw\" rel=\"noopener noreferrer\" target=\"_blank\">Big Bite&#8217;s work with Amnesty</a>. If the continued experience is anything like that, I think we have a perfect match.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Tue, 18 Sep 2018 22:38:31 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:33;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"Matt: CEOs and the Real World\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:22:\"https://ma.tt/?p=48345\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:46:\"https://ma.tt/2018/09/ceos-and-the-real-world/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:4867:\"<blockquote class=\"wp-block-quote\"><p>The downside of Zuckerberg’s exalted status within his company is that it is difficult for him to get genuine, unexpurgated feedback. He has tried, at times, to puncture his own bubble. In 2013, as a New Year’s resolution, he pledged to meet someone new, outside Facebook, every day. In 2017, he travelled to more than thirty states on a “listening tour” that he hoped would better acquaint him with the outside world. David Plouffe, President Obama’s former campaign manager, who is now the head of policy and advocacy at the Chan Zuckerberg Initiative, the family’s philanthropic investment company, attended some events on the tour. He told me, “When a politician goes to one of those, it’s an hour, and they’re talking for fifty of those minutes. He would talk for, like, five, and just ask questions.”</p><p>But the exercise came off as stilted and tone-deaf. Zuckerberg travelled with a professional photographer, who documented him feeding a calf in Wisconsin, ordering barbecue, and working on an assembly line at a Ford plant in Michigan. Online, people joked that the photos made him look like an extraterrestrial exploring the human race for the first time. A former Facebook executive who was involved in the tour told a friend, “No one wanted to tell Mark, and no one did tell Mark, that this really looks just dumb.”</p></blockquote>\n\n<p>There seem to be three communication gaps outlined here in Evan Osnos&#8217;s <a href=\"https://www.newyorker.com/magazine/2018/09/17/can-mark-zuckerberg-fix-facebook-before-it-breaks-democracy\">revealing profile of Mark Zuckerberg</a>: one is getting unvarnished feedback from your employees. Speaking as a fellow CEO and founder, it&#8217;s certainly hard to pop that bubble &#8212; see <a href=\"https://www.youtube.com/watch?v=uAxAVusStCg\">&#8220;the bear is sticky with honey.&#8221;</a> There are a few techniques like skip-level 1:1 meetings, anonymous feedback forms, interviewing new hires, and 360 reviews you can do to try to counter this, but there&#8217;s no panacea and this one requires constant work as you scale.</p>\n\n<p>The second gap is getting the unvarnished truth from your users &#8212; much easier, as they&#8217;re quite happy to tell you what&#8217;s what. I&#8217;ve recently started cold-calling (yes, on the phone!) some of our Jetpack customers just to understand what they love and don&#8217;t love about the experience and about how we can help them solve their business challenges. There&#8217;s a casual intimacy to phone conversations that just can&#8217;t be replicated in other user feedback forums. Pair this with good instrumentation throughout your product so you see what people do and not just what they say and you&#8217;re golden.</p>\n\n<p>The third and last communication gap is the connection to the world as most people experience it. If your status, wealth, or celebrity reach a point that they are shutting you out from &#8220;real&#8221; experiences, take some risks and get outside of your comfort zone. As it turns out, <a href=\"https://www.gq.com/story/the-untold-stories-of-paul-mccartney\">this new GQ profile of Paul McCartney offered a tip on that: </a></p>\n\n<blockquote class=\"wp-block-quote\"><p>McCartney tells me a further such story of a time he took the Hampton Jitney, the slightly upmarket bus service that runs from the Hamptons into Manhattan, because he was deep into Charles Dickens&#8217;s Nicholas Nickleby and he wanted to finish it, and how he then took a local bus uptown, and when a woman blurted from across the bus, &#8220;Hey! Are you Paul McCartney?&#8221; he invited her to sit next to him and chatted all the way uptown. &#8220;It&#8217;s a way of not worrying about your fame,&#8221; he says. &#8220;It&#8217;s a way of not turning into the reclusive rock star. I often say to Nancy: I get in their faces before they get a chance to get in mine.&#8221;</p></blockquote>\n\n<p>Makes me wonder if <a href=\"https://techcrunch.com/2012/09/12/jack-dorsey-bus-bubble/\">Jack Dorsey still rides the bus to work every day</a>. I think this is what Zuckerberg was attempting with his 30-state tour, and hopefully it was helpful even if the optics didn&#8217;t appeal to everyone — the daily habit of his 2013 resolution to meet someone new every day feels more powerful than the touristic 30-state one. But for an entity as large as Facebook maybe it&#8217;s moot, as Casey Newton pointed out <a href=\"https://www.getrevue.co/profile/caseynewton/issues/the-trouble-with-mark-zuckerberg-profiles-133299\">in his newsletter last week</a> it can be quite hard to pin the answers to Facebook&#8217;s real problems, and our democracy&#8217;s real challenges <a href=\"https://ma.tt/2018/09/responsibility-of-technology/\">in the face of targeted online propaganda</a>, to just one person.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Tue, 18 Sep 2018 21:35:20 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:4:\"Matt\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:34;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:95:\"WPTavern: Hybrid Core 5.0 Offers a More Modern, Modular Approach to WordPress Theme Development\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"https://wptavern.com/?p=83987\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:99:\"https://wptavern.com/hybrid-core-5-0-offers-a-more-modern-modular-approach-to-wordpress-development\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:3877:\"<a href=\"https://i1.wp.com/wptavern.com/wp-content/uploads/2018/09/coffee-computer.jpg?ssl=1\"><img /></a>image credit: <a href=\"https://stocksnap.io/photo/JFPYO9HEZR\">Shopify</a>\n<p><a href=\"https://themehybrid.com/weblog/hybrid-core-version-5-0\" rel=\"noopener noreferrer\" target=\"_blank\">Version 5.0</a> of Hybrid Core, one of the longest-running WordPress theme frameworks, is now available. Justin Tadlock celebrated 10 years with his Theme Hybrid community last month and <a href=\"https://wptavern.com/mythic-a-wordpress-starter-theme-by-justin-tadlock-now-in-open-beta\" rel=\"noopener noreferrer\" target=\"_blank\">released his new Mythic starter theme into beta</a>. Mythic was built on top of Hybrid Core and developed in tandem with version 5.0.</p>\n<p>The framework has been rewritten almost entirely from scratch to be a leaner, more modern starting place for theme development. Tadlock describes it as &#8220;a fundamentally different framework, rewritten from the ground up, that supports more modern PHP practices.&#8221;</p>\n<p>&#8220;I started 5.0 with a goal of bringing the framework up to date with more modern PHP practices and code,&#8221; he said. &#8220;The first iteration of the framework was built in 2008, so it was time to get us ready for the next era of theme building.&#8221;</p>\n<p>In nearly a decade of supporting the framework, Tadlock found that users didn&#8217;t always know how to get started building something from scratch. Many copied one of his existing themes and would add and remove things from it based on their own needs.</p>\n<p>Version 5.0 doesn&#8217;t necessarily make it easier to build on top of Hybrid Core with its new, more complicated method of bootstrapping, new <a href=\"https://themehybrid.com/weblog/working-with-the-view-class\" rel=\"noopener noreferrer\" target=\"_blank\">view system for templating</a>, and requirement for using <a href=\"https://getcomposer.org/\" rel=\"noopener noreferrer\" target=\"_blank\">Composer</a>. This is why Tadlock is officially recommending <a href=\"https://themehybrid.com/themes/mythic\" rel=\"noopener noreferrer\" target=\"_blank\">Mythic</a> as the path for building a theme with Hybrid Core in the future. Most of the documentation and tutorials he plans to create in the future will be centered around the Mythic starter theme, which is nearing a 1.0 release.</p>\n<blockquote class=\"twitter-tweet\">\n<p lang=\"en\" dir=\"ltr\">We just closed all tickets on the 1.0.0 milestone for the Mythic starter theme! It feels pretty good.</p>\n<p>Barring any OMGBBQ issues between now and tomorrow, you should see an announcement post from me.<a href=\"https://t.co/J4CGLKa1y5\">https://t.co/J4CGLKa1y5</a></p>\n<p>&mdash; Justin Tadlock (@justintadlock) <a href=\"https://twitter.com/justintadlock/status/1041808697813598208?ref_src=twsrc%5Etfw\">September 17, 2018</a></p></blockquote>\n<p></p>\n<p>For many theme developers, Mythic&#8217;s use of the BEM (Block-Element-Modifier) CSS class-naming system is their first introduction to a system of non-hierarchal, component-based CSS. Because BEM doesn&#8217;t rely on nested selectors, it&#8217;s easier for users to overwrite CSS that they want to change. Tadlock explains the benefit for child themes in a recent post about <a href=\"https://themehybrid.com/weblog/why-mythic-uses-bem\" rel=\"noopener noreferrer\" target=\"_blank\">why Mythic uses BEM</a>.</p>\n<p>A handful of the Hybrid add-ons are now available as Composer packages, including one for breadcrumbs, customizer controls and settings, Google fonts, and a featured image script. Tadlock plans to split more parts of the framework off into packages in the future for an increasingly modular core.</p>\n<p>Hybrid Core 5.0 requires PHP 5.6+ (with 7.0+ recommended) and WordPress 4.9.6+. Tadlock will support Hybrid Core&#8217;s 4.x series for at least another year to give theme authors time to adapt.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Tue, 18 Sep 2018 04:07:44 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:35;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:81:\"WPTavern: Yoast SEO 8.2 Adds How-To and FAQ Gutenberg Blocks with Structured Data\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"https://wptavern.com/?p=83822\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:92:\"https://wptavern.com/yoast-seo-8-2-adds-how-to-and-faq-gutenberg-blocks-with-structured-data\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:2422:\"<p><a href=\"https://yoast.com/yoast-seo-8-2/\" rel=\"noopener noreferrer\" target=\"_blank\">Yoast SEO 8.2</a> was released last week with the plugin&#8217;s first tools designed specifically for Gutenberg. It includes two new How-To and FAQ structured data content blocks for early adopters of the new editor.</p>\n<p>Structured data is content that can be marked up with a shared vocabulary, such as the one provided by <a href=\"http://Schema.org\" rel=\"noopener noreferrer\" target=\"_blank\">Schema.org</a>. Content like products, books, reviews, podcasts, events, and recipes lend themselves well to this specific type of organization. Structured data helps search engines index the site more effectively and communicate results in more compelling ways, such as rich snippets, rich cards, or voice search.</p>\n<p>Structured data is not easy for most WordPress users to implement without the help of a plugin. Now that more content is being created in Gutenberg, users who want their content to display as enhanced search results will need to seek out plugins that make that an automatic part of the content creation process.</p>\n<p>The plugin outlines all the necessary data the users needs to add in order for the How-To and FAQ content blocks to appear as valid pieces of structured data.</p>\n<p><a href=\"https://i0.wp.com/wptavern.com/wp-content/uploads/2018/09/faq-structured-data-yoast-seo.png?ssl=1\"><img /></a></p>\n<p>Alongside this release, Yoast&#8217;s <a href=\"https://yoast.com/wordpress/plugins/local-seo/\" rel=\"noopener noreferrer\" target=\"_blank\">Local SEO</a> and the <a href=\"https://yoast.com/wordpress/plugins/local-seo-for-woocommerce/\" rel=\"noopener noreferrer\" target=\"_blank\">WooCommerce SEO</a> plugins have also added two new structured data Gutenberg blocks: an address block and a Google Maps block.</p>\n<a href=\"https://i2.wp.com/wptavern.com/wp-content/uploads/2018/09/local_seo_content_blocks.jpg?ssl=1\"><img /></a>image credit: <a href=\"https://yoast.com/yoast-seo-8-2/\">Yoast.com</a>\n<p>In the future the Yoast team plans to create many more structured data blocks.</p>\n<p>&#8220;We’ll work first on blocks which we can dogfood on Yoast.com, like Job posting and Event,&#8221; Yoast CTO Omar Reiss <a href=\"https://yoast.com/content-blocks-future-benefit-seo/\" rel=\"noopener noreferrer\" target=\"_blank\">said</a>. &#8220;After that, we’ll just go for the popular ones, like Recipe.&#8221;</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Mon, 17 Sep 2018 17:43:29 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:36;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:41:\"Gary: The Mission: Democratise Publishing\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:25:\"https://pento.net/?p=1909\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:64:\"https://pento.net/2018/09/16/the-mission-democratise-publishing/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:5406:\"<p>It&#8217;s exciting to see the <a href=\"https://drupalgutenberg.org/\">Drupal Gutenberg</a> project getting under way, it makes me proud of the work we&#8217;ve done ensuring the flexibility of the underlying Gutenberg architecture. One of the primary philosophies of Gutenberg&#8217;s technical architecture is platform agnosticism, and we can see the practical effects of this practice coming to fruition across a variety of projects.</p>\n\n<p>Yoast are <a href=\"https://yoast.com/yoast-seo-8-2/\">creating new features for the block editor</a>, as well as <a href=\"https://yoast.com/yoast-seo-8-0-introducing-the-yoast-seo-gutenberg-sidebar-a-revamped-meta-box/\">porting existing features</a>, which they&#8217;re able to <a href=\"https://twitter.com/aaronjorbin/status/1040988210682318848\">reuse in the classic editor</a>.</p>\n\n<p>Outside of WordPress Core, the Automattic teams who work on <a href=\"https://github.com/Automattic/wp-calypso\">Calypso</a> have been <a href=\"https://github.com/Automattic/wp-calypso/search?q=gutenberg\">busy</a> adding Gutenberg support, in order to make the block editor interface available on WordPress.com. Gutenberg and Calypso are large JavaScript applications, built with strong opinions on design direction and technical architecture, and having <a href=\"https://github.com/Automattic/wp-calypso/issues/27034\">significant component overlap</a>. That these two projects can function together at all is something of an obscure engineering feat that&#8217;s both difficult and overwhelming to appreciate.</p>\n\n<p>If we reached the limit of Gutenberg&#8217;s platform agnosticism here, it would still be a successful project.</p>\n\n<p>But that&#8217;s not where the ultimate goals of the Gutenberg project stand. From <a href=\"https://github.com/youknowriad/standalone-gutenberg\">early experiments</a> in running the block editor as a <a href=\"https://gutenberg-standalone.surge.sh/\">standalone application</a>, to being able to compile it into a <a href=\"https://github.com/wordpress-mobile/gutenberg-mobile\">native mobile component</a>, and now seeing it <a href=\"https://www.drupal.org/project/gutenberg\">running on Drupal</a>, Gutenberg&#8217;s technical goals have always included a radical level of platform agnosticism.</p>\n\n<h2>Better Together</h2>\n\n<p>Inside the WordPress world, significant effort and focus has been on ensuring backwards compatibility with existing WordPress sites, plugins, and practices. Given that WordPress is such a hugely popular platform, it&#8217;s exceedingly important to ensure this is done right. With Gutenberg expanding outside of the WordPress world, however, we&#8217;re seeing different focuses and priorities arise.</p>\n\n<p>The <a href=\"https://gutenbergcloud.org/\">Gutenberg Cloud</a> service is a fascinating extension being built as part of the Drupal Gutenberg project, for example. It provides a method for new blocks to be shared and discovered, the <a href=\"https://www.npmjs.com/package/@frontkom/g-hero-section\">sample hero block</a> sets a clear tone of providing practical components that can be rapidly put together into a full site. While we&#8217;ve certainly seen similar services appear for the various site builder plugins, this is the first one (that I&#8217;m aware of, at least) build specifically for Gutenberg.</p>\n\n<p>By making the Gutenberg experience available for everyone, regardless of their technical proficiency, experience, or even <em>preferred platform</em>, we pave the way for a better future for all.</p>\n\n<h2>Democratising Publishing</h2>\n\n<p>You might be able to guess where this is going. <img src=\"https://s.w.org/images/core/emoji/11/72x72/1f609.png\" alt=\"?\" class=\"wp-smiley\" /></p>\n\n<p>WordPress&#8217; mission is to &#8220;democratise publishing&#8221;. It isn&#8217;t to &#8220;be the most popular CMS&#8221;, or to &#8220;run on old versions of PHP&#8221;, though it&#8217;s easy to think that might be the case on the surface. That these statements are true is simply a side effect of the broader principle: All people, regardless of who they are or where they come from, should be able to publish their content as part of a free and open web.</p>\n\n<p>The WordPress mission is not to &#8220;democratise publishing with WordPress&#8221;.</p>\n\n<p>WordPress has many advantages that make it so popular, but hoarding those to ourselves doesn&#8217;t help the open web, it just creates more silos. The open web is the only platform on which publishing can be democratised, so it makes sense for Gutenberg to work anywhere on the open web, not just inside WordPress. Drupal isn&#8217;t a competitor here, we&#8217;re all working towards the same goal, the different paths we&#8217;ve taken have made the open web stronger as a whole.</p>\n\n<p>Much as the block editor has been the first practical implementation of the Gutenberg architecture, WordPress is simply the first practical integration of the block editor into a CMS. The Gutenberg project will expand into site customisation and theming next, and while there&#8217;s no requirement that Drupal make use of these, I&#8217;d be very interested to see what they came up with if they did. Bringing together our many years of experience in tackling these complex problems can only make the end result better.</p>\n\n<p>I know I&#8217;m looking forward to all of us working together for the betterment of the open web.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Sun, 16 Sep 2018 04:48:44 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:4:\"Gary\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:37;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:55:\"WPTavern: Gutenberg 3.8 Released, Adds Full Screen Mode\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"https://wptavern.com/?p=83861\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:65:\"https://wptavern.com/gutenberg-3-8-released-adds-full-screen-mode\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:2254:\"<p>Gutenberg 3.8 is <a href=\"https://wordpress.org/plugins/gutenberg/\">available for download</a>. This release features a full screen mode that hides both the admin bar and the menu. Unlike previous versions of Distraction-Free-Writing mode where things would fade in and out of view, these two items stay hidden until full-screen mode is disabled.</p>\n\n<p>User Interface elements have been added to manage reusable blocks in bulk. Theme authors are now able to <a href=\"https://github.com/WordPress/gutenberg/pull/9008\">register editor styles</a> for blocks by targeting the blocks themselves. This avoids combating CSS specificity and doesn&#8217;t require knowledge of the internal DOM structure for the editor. </p>\n\n<p>The block settings icon has been moved from the right side of blocks to the toolbar. This change sets the foundation for refactoring the toolbar and it reduces clutter by keeping the icons together.<br /></p>\n\n<img />Block Settings Moved to The Right Side of The Toolbar\n\n<p>Gutenberg 3.8 also contains a significant increase in performance thanks to a new <a href=\"https://github.com/WordPress/gutenberg/pull/8083\">hand-coded default</a> block parser. </p>\n\n<blockquote class=\"wp-block-quote\"><p>Having a formal specification of the Gutenberg block grammar has allowed us both to maintain a stable core during the almost 40 releases of the plugin and lately to allow competing parser implementation to evolve and be compared in terms of performance and correctness. </p><p>In concrete terms, we are shipping <a href=\"https://github.com/WordPress/gutenberg/pull/8083\">a new default implementation</a> that is hundreds of times faster than the spec and has been stress tested with really long posts (including Moby Dick). These tests are also available for anyone to run against. Memory consumption has also gone down dramatically for server side operations. I’d like to specially thank Dennis Snell and Ivan Enderlin for their great work improving this area.</p><cite>Matias Ventura </cite></blockquote>\n\n<p>To see a complete list of changes along with links to their corresponding pull requests, check out <a href=\"https://make.wordpress.org/core/2018/09/12/whats-new-in-gutenberg-12th-september/\">the release post.</a> </p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Sat, 15 Sep 2018 00:08:32 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Jeff Chandler\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:38;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:64:\"WPTavern: Gutenberg is Slowly Rolling Out to WordPress.com Users\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"https://wptavern.com/?p=83331\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:75:\"https://wptavern.com/gutenberg-is-slowly-rolling-out-to-wordpress-com-users\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:1483:\"<p>As part of <a href=\"https://wptavern.com/matt-mullenweg-unveils-gutenberg-roadmap-at-wceu-wordpress-agencies-and-product-developers-sprint-to-prepare\">the roadmap</a> unveiled at WordCamp EU earlier this year, WordPress.com has started rolling out Gutenberg to a subset of users. </p>\n\n<div class=\"wp-block-image\"><img />Try Gutenberg Call-out on WordPress.com</div>\n\n<p>According to a <a href=\"https://en.forums.wordpress.com/topic/information-on-gutenberg-implementation/#post-3173840\">WordPress.com Happiness Engineer</a>, the team is testing the implementation to determine the best way and time to enable it. Users will not be able to use Gutenberg unless their theme is updated to support blocks and the various alignment options. </p>\n\n<p>Theme Wranglers are already in the process of adding support to WordPress.com&#8217;s nearly 100 free themes.</p>\n\n<p>A <a href=\"https://en.forums.wordpress.com/search/gutenberg/\">quick search</a> of the WordPress.com support forums for Gutenberg provides some insight into what users think about the new editor. For example, <a href=\"https://en.forums.wordpress.com/topic/new-gutenberg-editing/\">this user provided feedback</a> on the use of so many icons without displaying their textual equivalent. </p>\n\n<p>For now, Gutenberg is opt-in but eventually will be opt-out. Once Gutenberg is made available to a wider audience, support documents and official blog posts will be published to inform users about the new editor. <br /></p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 14 Sep 2018 23:24:52 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Jeff Chandler\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:39;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:83:\"WPTavern: Drupal Gutenberg Project Receives Enthusiastic Reception at Drupal Europe\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"https://wptavern.com/?p=83854\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:94:\"https://wptavern.com/drupal-gutenberg-project-receives-enthusiastic-reception-at-drupal-europe\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:6188:\"<p><a href=\"https://i0.wp.com/wptavern.com/wp-content/uploads/2018/09/Screen-Shot-2018-09-14-at-2.59.59-PM.png?ssl=1\"><img /></a></p>\n<p>The <a href=\"https://wptavern.com/first-look-at-live-demo-of-the-gutenberg-content-editor-for-drupal-8\" rel=\"noopener noreferrer\" target=\"_blank\">Drupal Gutenberg</a> project is gaining momentum after Per André Rønsen and Marco Fernandes gave a presentation at Drupal Europe this week titled &#8220;Introducing the Gutenberg content editor for Drupal 8.&#8221; Rønsen and Fernandes are representatives of Frontkom, a digital services agency based in Norway that has ported WordPress&#8217; Gutenberg editor over to Drupal for use with client projects. They also created the <a href=\"https://drupalgutenberg.org/\" rel=\"noopener noreferrer\" target=\"_blank\">Drupal Gutenberg</a> project, which aims to bring this new publishing experience to Drupal core.</p>\n<blockquote class=\"twitter-tweet\">\n<p lang=\"en\" dir=\"ltr\">Building landing pages in <a href=\"https://twitter.com/hashtag/Drupal?src=hash&ref_src=twsrc%5Etfw\">#Drupal</a> has never been easier. Coming soon to a Drupal site near you! <a href=\"https://twitter.com/hashtag/drupaleurope?src=hash&ref_src=twsrc%5Etfw\">#drupaleurope</a> <a href=\"https://t.co/LLpH91AY9n\">pic.twitter.com/LLpH91AY9n</a></p>\n<p>&mdash; drupalgutenberg (@drupalgutenberg) <a href=\"https://twitter.com/drupalgutenberg/status/1040203765452820480?ref_src=twsrc%5Etfw\">September 13, 2018</a></p></blockquote>\n<p></p>\n<p>The Frontkom team gave a live demo of the Gutenberg module added to the page content type and showed how a few of the core blocks work. They concluded the presentation by hailing Gutenberg as an exciting new tool that will bring companies new business, make happier clients, and inspire more code reuse and sharing among developers.</p>\n<p>&#8220;The reception has been amazing,&#8221; Rønsen said. &#8220;A lot of different speakers have referred to Gutenberg both before and after the session. Bigger organizations and companies have expressed interest in implementation and contributing. I was told the session was one of the most well visited (after the keynotes) in the whole conference.&#8221;</p>\n<blockquote class=\"twitter-tweet\">\n<p lang=\"en\" dir=\"ltr\">Gutenberg for Drupal looks good <img src=\"https://s.w.org/images/core/emoji/11/72x72/1f4a5.png\" alt=\"?\" class=\"wp-smiley\" /><img src=\"https://s.w.org/images/core/emoji/11/72x72/1f4a5.png\" alt=\"?\" class=\"wp-smiley\" /> GoGo <a href=\"https://twitter.com/frontkom?ref_src=twsrc%5Etfw\">@frontkom</a> <a href=\"https://twitter.com/hashtag/DrupalEurope?src=hash&ref_src=twsrc%5Etfw\">#DrupalEurope</a> <a href=\"https://t.co/rV6dRT76Rk\">pic.twitter.com/rV6dRT76Rk</a></p>\n<p>&mdash; Daniel Andersson (@moppedanne) <a href=\"https://twitter.com/moppedanne/status/1039852251173543936?ref_src=twsrc%5Etfw\">September 12, 2018</a></p></blockquote>\n<p></p>\n<p>Overall, the Drupal community gave the Gutenberg editor a positive reception. However, Rønsen said he received feedback from some who are concerned about how it stores data. He said the general consensus was that &#8220;the UI is awesome,&#8221; but that the Drupal Gutenberg project would need to make sure data is stored in way that is as structured and portable as possible.</p>\n<p>&#8220;Some developers are skeptical about storing too much data unstructured like Gutenberg does,&#8221; Rønsen said. &#8220;This also means we might integrate Gutenberg closer to some key Drupal modules used for structured page building today. Gutenberg can serve as a UI for embedding existing structured content, and that is something we are looking into.&#8221;</p>\n<p>Rønsen said the next steps are centered around getting a stable release that will handle the core Gutenberg blocks and the core D8 blocks in a way that is future proof. In order to do this, they are waiting for the project to be merged into WordPress core.</p>\n<p>&#8220;We will delay a stable release until Gutenberg is in WP core,&#8221; Rønsen said. &#8220;Things are moving very fast still with Gutenberg – and that’s a good thing. As soon as we have a stable release, we will introduce tools we have built in top of Gutenberg for publishers. These will be available to WordPress, too.&#8221;</p>\n<h3>Gutenberg as the “editor for the open web” — not just for WordPress</h3>\n<p>One of the most exciting aspects of the Frontkom team&#8217;s presentation was the idea of sharing a project across publishing platforms.</p>\n<p>&#8220;It is key for us that Gutenberg stays decoupled from both CMSs as a library, and our hope is that Gutenberg core devs will catch onto the vision of Gutenberg as the &#8216;editor for the open web&#8217; — not just for WordPress,&#8221; Rønsen said.</p>\n<p>&#8220;Drupal core developers are however planning a React-based revamp of the Drupal admin UI, too. It will take at least two years to release it, and even then, I’m of the opinion that the content edit UI and page building features should be done last, and rather leave room for third party solutions like Gutenberg. This is an open question, but at least the key decisions makers for the new UI will consider how Gutenberg works and learn from it.&#8221;</p>\n<p>Drupal decision makers are also taking interest in Gutenberg and seem open to considering it as viable option for improving the CMS&#8217;s editing experience.</p>\n<p>&#8220;When the Drupal project owner was asked directly in a Q&amp;A what he thought about solutions like Gutenberg coming into Drupal, he said he liked it, and that it’s a good thing for Drupal,&#8221; Rønsen said. &#8220;Dries is very open minded and not afraid of the concept of &#8216;Proudly built elsewhere.\'&#8221;</p>\n<p>Rønsen and Fernandes have <a href=\"https://docs.google.com/presentation/d/1Rm1tiXR9sAVqasT8L8SZCg1LBVuTTuG3otNj_3Sj2r8/edit#slide=id.g321e3b1fbe_0_57\" rel=\"noopener noreferrer\" target=\"_blank\">published the slides</a> for those who want to view them, although most of the session was devoted to the live demo. The official recording has not yet been posted but should be available shortly.</p>\n<p>Update: The official recording has been published:</p>\n<p></p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 14 Sep 2018 22:31:50 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:40;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:48:\"BuddyPress: BuddyPress 3.2.0 Maintenance Release\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:32:\"https://buddypress.org/?p=276415\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:68:\"https://buddypress.org/2018/09/buddypress-3-2-0-maintenance-release/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:463:\"<p>BuddyPress 3.2.0 is now available. This is a maintenance release that fixes 25 bugs and is a recommended upgrade for all BuddyPress installations.</p>\n<p>Update to BuddyPress 3.2.0 today in your WordPress Dashboard, or by <a href=\"https://wordpress.org/plugins/buddypress/\">downloading from the wordpress.org plugin repository</a>. For details on the changes, read the <a href=\"https://codex.buddypress.org/releases/version-3-2-0/\">3.2.0 release notes</a>.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 14 Sep 2018 15:14:20 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:10:\"Paul Gibbs\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:41;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:66:\"WPTavern: WPWeekly Episode 330 – WPShout, Community, and Burnout\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:58:\"https://wptavern.com?p=83932&preview=true&preview_id=83932\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:71:\"https://wptavern.com/wpweekly-episode-330-wpshout-community-and-burnout\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:2001:\"<p>In this episode, <a href=\"http://jjj.me\">John James Jacoby</a> and I are joined by Fred Meyer, David Hayes, and Alex Denning of <a href=\"https://wpshout.com/\">WPShout</a> to learn about <a href=\"https://wpshout.com/announcing-pro-community/\">WPShout&#8217;s Pro Community</a>. This community aims to bring people together to learn from each other and provide one-to-one mentorship opportunities with David and Fred.</p>\n<p>Later in the show, John and I discuss why it&#8217;s a matter of when and not if, Dark Mode will be added to WordPress. We round out the show by discussing burnout and some other personal things.</p>\n<h2>Stories Discussed:</h2>\n<p><a href=\"https://wptavern.com/dark-mode-is-possibly-coming-to-a-wordpress-dashboard-near-you\">Dark Mode is Possibly Coming to a WordPress Dashboard Near You</a></p>\n<p><a href=\"https://wptavern.com/wordpress-coding-standards-1-1-0-released\">WordPress Coding Standards 1.1.0 Released</a></p>\n<p><a href=\"https://wptavern.com/meetup-group-organizers-can-now-earn-a-wordpress-org-user-profile-badge\">Meetup Group Organizers Can Now Earn A WordPress.org User Profile Badge</a></p>\n<p><a href=\"https://wptavern.com/marcel-bootsman-is-walking-700km-to-wordcamp-europe-to-raise-funds-for-donatewc\">Marcel Bootsman is Walking 700km to WordCamp Europe to Raise Funds for DonateWC</a></p>\n<h2>WPWeekly Meta:</h2>\n<p><strong>Next Episode:</strong> Wednesday, September 26th 3:00 P.M. Eastern</p>\n<p>Subscribe to <a href=\"https://itunes.apple.com/us/podcast/wordpress-weekly/id694849738\">WordPress Weekly via Itunes</a></p>\n<p>Subscribe to <a href=\"https://www.wptavern.com/feed/podcast\">WordPress Weekly via RSS</a></p>\n<p>Subscribe to <a href=\"http://www.stitcher.com/podcast/wordpress-weekly-podcast?refid=stpr\">WordPress Weekly via Stitcher Radio</a></p>\n<p>Subscribe to <a href=\"https://play.google.com/music/listen?u=0#/ps/Ir3keivkvwwh24xy7qiymurwpbe\">WordPress Weekly via Google Play</a></p>\n<p><strong>Listen To Episode #330:</strong><br />\n</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 13 Sep 2018 22:24:36 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Jeff Chandler\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:42;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:99:\"WPTavern: WordPress 4.9.9 Release Focus Items Include Site Health Project and Gutenberg Preparation\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"https://wptavern.com/?p=83892\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:110:\"https://wptavern.com/wordpress-4-9-9-release-focus-items-include-site-health-project-and-gutenberg-preparation\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:2819:\"<p>The WordPress 4.9.9 release leads published a <a href=\"https://make.wordpress.org/core/2018/09/12/wordpress-4-9-9-minor-release-roadmap/\" rel=\"noopener noreferrer\" target=\"_blank\">roadmap for the release</a> this week. The minor release will be led by Anthony Burchell and Alain Schlesser. It is targeted for November 5 with the first beta arriving near the end of October.</p>\n<p>The leads identified four key focus areas for the upcoming release: accessibility, internationalization, the Site Health Project, and Gutenberg preparation. The internationalization focus is aimed at improving translations and RTL support, as well as ensuring that date/time values work. The roadmap doesn&#8217;t identify any specific accessibility items but Burchell said the leads see lots of ways they can &#8220;drastically improve the experience for a lot of people with minimal effort.&#8221;</p>\n<p>Contributors to the Site Health Project, previously known by the &#8220;Servehappy&#8221; code name, will be working on resolving issues that will allow users to stay on WordPress 4.9.9 while they prepare for 5.0 and still have access to the important information about how to update their PHP versions.</p>\n<p>&#8220;It will be crucial to get the Servehappy components included: WSOD protection, update dashboard notice, plugin version requirements,&#8221; Burchell said. &#8220;The reason for this focus is because, when 5.0 ships, users who decide not to upgrade will be on 4.9.9 for a potentially extended time period. If we don’t have these Servehappy components included in 4.9.9, getting rid of old PHP versions will only happen after 5.0.&#8221;</p>\n<p>Another major part of WordPress 4.9.9 will be landing items that lay the groundwork for anything necessary for Gutenberg&#8217;s merge into 5.0. Two items identified include <a href=\"https://core.trac.wordpress.org/ticket/44758\" rel=\"noopener noreferrer\" target=\"_blank\">user locale support in REST API endpoints</a> and <a href=\"https://core.trac.wordpress.org/ticket/44862\" rel=\"noopener noreferrer\" target=\"_blank\">endpoints to lock/unlock and release posts</a>.</p>\n<p>With an unusually quick turnaround, WordPress 5.0 could arrive before the end of 2018. Development will kick off in mid-November, one week ahead of the U.S. Thanksgiving holiday.</p>\n<p><strong>UPDATE 9/13/2018 &#8211; 8:13PM:</strong> The wording on the roadmap document has been updated to more accurately reflect the intentions of contributors regarding the work outlined for the Site Health Project. The roadmap now reads:</p>\n<p><em>&#8220;We will investigate the work remaining for the Servehappy project and determine how to get it in people’s hands as soon as possible. WSOD protection, update dashboard notice, plugin version requirements are the hot items pending.&#8221;</em></p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 13 Sep 2018 17:58:37 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:43;a:6:{s:4:\"data\";s:11:\"\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:1:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"HeroPress: Diversity of Thought\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"https://heropress.com/?p=2623\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:107:\"https://heropress.com/diversity-of-thought/#utm_source=rss&utm_medium=rss&utm_campaign=diversity-of-thought\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:3237:\"<img width=\"960\" height=\"480\" src=\"https://s20094.pcdn.co/wp-content/uploads/2018/09/092017-1024x512.jpg\" class=\"attachment-large size-large wp-post-image\" alt=\"Pull Quote: I became completely inspired by the mission of WordPress. I had become a part of something bigger than myself.\" /><p>About a year ago, Christie Chirinos wrote the essay &#8220;<a href=\"https://heropress.com/essays/what-i-do-does-not-define-who-i-am/\">What I Do Does Not Define Who I Am</a>&#8220;. It felt like a big deal at the time, and it was, but like most big deals, it slowly faded from memory. That&#8217;s one of the reasons I do these replays, for the benefit of my own memory as much as anything else.</p>\n<p>As I&#8217;ve mentioned, part of the goal of HeroPress is to speak to those with less privilege and show how WordPress can help overcome that. That message shouldn&#8217;t come from me, a white American male. I simply don&#8217;t have the experience. I can read about it, but I&#8217;ll never actually have the experiences.</p>\n<p>The story really needs to come from someone with experience. Christie has some of that experience, and she does a wonderful job talking about how WordPress helped a little bit. I hope her story helps.</p>\n<blockquote class=\"wp-embedded-content\"><p><a href=\"https://heropress.com/essays/what-i-do-does-not-define-who-i-am/\">What I Do Does Not Define Who I Am</a></p></blockquote>\n<p></p>\n<div class=\"rtsocial-container rtsocial-container-align-right rtsocial-horizontal\"><div class=\"rtsocial-twitter-horizontal\"><div class=\"rtsocial-twitter-horizontal-button\"><a title=\"Tweet: Diversity of Thought\" class=\"rtsocial-twitter-button\" href=\"https://twitter.com/share?text=Diversity%20of%20Thought&via=heropress&url=https%3A%2F%2Fheropress.com%2Fdiversity-of-thought%2F\" rel=\"nofollow\" target=\"_blank\"></a></div></div><div class=\"rtsocial-fb-horizontal fb-light\"><div class=\"rtsocial-fb-horizontal-button\"><a title=\"Like: Diversity of Thought\" class=\"rtsocial-fb-button rtsocial-fb-like-light\" href=\"https://www.facebook.com/sharer.php?u=https%3A%2F%2Fheropress.com%2Fdiversity-of-thought%2F\" rel=\"nofollow\" target=\"_blank\"></a></div></div><div class=\"rtsocial-linkedin-horizontal\"><div class=\"rtsocial-linkedin-horizontal-button\"><a class=\"rtsocial-linkedin-button\" href=\"https://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Fheropress.com%2Fdiversity-of-thought%2F&title=Diversity+of+Thought\" rel=\"nofollow\" target=\"_blank\" title=\"Share: Diversity of Thought\"></a></div></div><div class=\"rtsocial-pinterest-horizontal\"><div class=\"rtsocial-pinterest-horizontal-button\"><a class=\"rtsocial-pinterest-button\" href=\"https://pinterest.com/pin/create/button/?url=https://heropress.com/diversity-of-thought/&media=https://heropress.com/wp-content/uploads/2018/09/092017-150x150.jpg&description=Diversity of Thought\" rel=\"nofollow\" target=\"_blank\" title=\"Pin: Diversity of Thought\"></a></div></div><a rel=\"nofollow\" class=\"perma-link\" href=\"https://heropress.com/diversity-of-thought/\" title=\"Diversity of Thought\"></a></div><p>The post <a rel=\"nofollow\" href=\"https://heropress.com/diversity-of-thought/\">Diversity of Thought</a> appeared first on <a rel=\"nofollow\" href=\"https://heropress.com\">HeroPress</a>.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 13 Sep 2018 16:21:38 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:44;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:54:\"WPTavern: Official WooCommerce Android App Now in Beta\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"https://wptavern.com/?p=83859\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:65:\"https://wptavern.com/official-woocommerce-android-app-now-in-beta\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:3827:\"<p>The first official <a href=\"https://woocommerce.com/mobile/\" rel=\"noopener noreferrer\" target=\"_blank\">WooCommerce Android app</a> is now in open beta. The companion mobile app allows users to manage their WooCommerce stores on the go. Store owners who want to test the unreleased version of the mobile app can <a href=\"https://play.google.com/apps/testing/com.woocommerce.android\" rel=\"noopener noreferrer\" target=\"_blank\">sign up with the Google Play Store</a>. The WooCommerce app <a href=\"https://woocommercehalo.wordpress.com/faq/\" rel=\"noopener noreferrer\" target=\"_blank\">requires Jetpack</a> to connect stores to the app.</p>\n<p><a href=\"https://i2.wp.com/wptavern.com/wp-content/uploads/2018/09/Manage-Orders@2x.jpg?ssl=1\"><img /></a></p>\n<p>The beta introduces a basic set of features for managing orders, viewing store stats, and receiving sales notifications, including the following:</p>\n<ul>\n<li>Check basic orders and revenue statistics with time period selection.</li>\n<li>View orders list in chronological order, with status and total value.</li>\n<li>Review individual orders with all the standard details, and contact customers.</li>\n<li>Perform basic order fulfillment.</li>\n<li>Get notifications about orders and reviews, and the ability to moderate them.</li>\n<li>View a list of the top-selling products on your store.</li>\n</ul>\n<p>The app&#8217;s real-time order alerts even include an optional &#8220;cha-ching&#8221; sounds for new orders.</p>\n<p><a href=\"https://i2.wp.com/wptavern.com/wp-content/uploads/2018/09/Push-Notifications@2x.jpg?ssl=1\"><img /></a></p>\n<p>Over the past few years, the WooCommerce community has demonstrated a demand for mobile apps on both platforms. A <a href=\"http://ideas.woocommerce.com/forums/133476-woocommerce/suggestions/6172593-android-equivalent-of-woocommerce-ios-app\" rel=\"noopener noreferrer\" target=\"_blank\">suggestion for an Android app</a> received 533 upvotes on the WooCommerce ideas board. There is also a motley assortment of unofficial WooCommerce store management apps available on the Google Play Store. Some of the more popular ones include <a href=\"https://play.google.com/store/apps/details?id=com.woostore.wooforce\" rel=\"noopener noreferrer\" target=\"_blank\">StorePep WooCommerce App</a>, <a href=\"https://play.google.com/store/apps/details?id=com.pinta.woocommerce.woocommercemobileadmin\" rel=\"noopener noreferrer\" target=\"_blank\">WooCommerce Mobile Admin</a>, <a href=\"https://play.google.com/store/apps/details?id=com.mstoreapp.wooadmin03\" rel=\"noopener noreferrer\" target=\"_blank\">Admin app for WooCommerce</a>, and <a href=\"https://play.google.com/store/apps/details?id=com.lxrmarketplace.woocommerce\" rel=\"noopener noreferrer\" target=\"_blank\">Dashly &#8211; WooCommerce Dashboard</a>.</p>\n<p>None of the third-party mobile apps seem to be very highly rated, nor are they consistent with the WooCommerce branding. A cursory glance at the reviews for these apps shows that most of them are slow, buggy, and not very well supported. However, they have temporarily fulfilled a need in the absence of an official app from WooCommerce.</p>\n<p>Considering the options currently available, an official WooCommerce app will be a welcome addition to the tools available for store owners. An iOS app is also in the works. At the end of July, the WooCommerce development team put out a <a href=\"https://woocommercehalo.wordpress.com/2018/07/31/call-for-testing-first-ios-beta/\" rel=\"noopener noreferrer\" target=\"_blank\">call for testing the first iOS Beta</a>. Anyone interested to test the apps can check out the <a href=\"https://woocommercehalo.wordpress.com\" rel=\"noopener noreferrer\" target=\"_blank\">Woo Halo</a> site and <a href=\"http://eepurl.com/dv-oo1\" rel=\"noopener noreferrer\" target=\"_blank\">register</a> to be part of the testing group.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 13 Sep 2018 16:19:55 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:45;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:37:\"Post Status: WordPress and Blockchain\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"https://poststatus.com/?p=47409\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:48:\"https://poststatus.com/wordpress-and-blockchain/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:5235:\"<p>WordPress is one of the driving forces and great success stories of the open web to date. As an open source platform, it&#8217;s become a dominant CMS used by 30% of the web to publish content — on websites large and small.</p>\n<p>WordPress has grown up in an era of evolving challenges: ushering in web standards, adapting for publishing and viewing on all device sizes; building for accessibility by all; establishing its place in the era of expansive and centralized social media platforms; and more.</p>\n<p>Today, we’re faced with a new generation of technologies coming down the pipe, ready to disrupt the current ecosystem. These technologies include blockchain, artificial intelligence, augmented reality, the internet of things, and more I&#8217;m sure. It’s the first of these that is the focus of this post and the following conversation.</p>\n<p>I was approached by David Lockie of <a href=\"https://pragmatic.agency/\">Pragmatic</a> to discuss how WordPress and blockchain technology may fit together, and how they may not. David and I have both been interested in the cryptocurrency and blockchain space over the past couple of years, and have over time encountered a lot of projects that aim to disrupt or enhance various elements of the web: from DNS to CMS.</p>\n<p>David gathered a group of people for an initial online, open, honest conversation about how WordPress could be impacted, disrupted or take advantage of distributed ledger and blockchain technologies.</p>\n<p>Examples include:</p>\n<ul>\n<li>Blockchain platforms impacting people’s choice to use WordPress e.g. <a href=\"https://steemit.com/\">Steemit</a></li>\n<li>Blockchain projects impacting people already using WordPress e.g. <a href=\"https://www.basicattentiontoken.org/\">Basic Attention Token</a> or <a href=\"https://www.po.et/\">Po.et</a>, <a href=\"https://vip.wordpress.com/2018/07/11/client-spotlight-civil/\">Civil</a></li>\n<li>Cryptocurrencies’ impact on eCommerce and the wider ecosystem, e.g. the Coinbase Commerce merchant gateway</li>\n<li>What we can learn from blockchain projects’ governance systems and lessons learned</li>\n<li>Ideas for improving security, integrations, etc</li>\n<li>Various identity-based projects</li>\n<li>New environments which may be used to run WordPress, such as decentralized web technologies e.g. <a href=\"https://substratum.net/\">Substratum </a> or <a href=\"https://www.maidsafe.net/\">MaidSafe</a>.</li>\n<li>Impact on the talent pool for WordPress professionals</li>\n<li>General <a href=\"https://speakerdeck.com/dcent/wordpress-and-blockchain-threats-and-opportunities\">threats and opportunities</a></li>\n<li>Discussion of anything new, interesting and relevant in the blockchain/cryptocurrency space</li>\n<li>All of the above as it relates to open source and the web generally, outside of WordPress</li>\n</ul>\n<p>Our aim for the initial conversation, as well as future conversations, <strong>is not</strong> to advocate specifically for any existing project or to necessarily endorse blockchain as appropriate for WordPress to somehow integrate in any way. It&#8217;s to explore what&#8217;s out there now, how it could impact WordPress today and in the future, and down the road perhaps how WordPress may take advantage of potential opportunities. We are approaching this like a discovery phase — not to get overly excited, but to be informed. And we welcome participants in this conversation.</p>\n<p>This first conversation included the following participants:</p>\n<ul>\n<li>David Lockie, <a href=\"https://pragmatic.agency/\">Pragmatic</a></li>\n<li>Brian Krogsgard, Post Status</li>\n<li>Bradford Campeau-Laurion, <a href=\"https://alley.co/\">Alley Interactive</a></li>\n<li>Zac Gordon, <a href=\"https://zacgordon.com/\">Deeply</a></li>\n<li>Christie Chirinos, <a href=\"https://calderalabs.org/\">Caldera Labs</a></li>\n<li>Josh Pollock, <a href=\"https://calderalabs.org/\">Caldera Labs</a></li>\n<li>Brad Williams, <a href=\"https://webdevstudios.com/\">WebDevStudios</a></li>\n</ul>\n<p>I attempted to reiterate it in the call, but I believe it&#8217;s important to address this topic with a skeptic&#8217;s hat on. By no means do any of us think that it&#8217;s a great idea to just go head first in trying to integrate blockchain technology to WordPress. The jury is still very much out in terms of where, how, and even if blockchain brings significant advantages to web applications.</p>\n<p></p>\n<p>If you are interested in future discussions, we welcome you! There is currently a channel (#blockchain) in Post Status Slack where people can discuss, and we&#8217;ll also announce future video-conference discussions. We may make a more independent place to discuss, blog, etc, in the future depending on how these early conversations go.</p>\n<p>We don&#8217;t know exactly where this conversation will go. It may fizzle out, or it could evolve into a much broader community effort. The first thing to do, if you are interested to continue this conversation, is just follow along with future conversations, which will be posted here. If you would like to be on the next video call, please <a href=\"https://pragmatic.agency/contact/\">contact David</a> or <a href=\"https://poststatus.com/contact\">me</a>.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 12 Sep 2018 22:58:40 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:15:\"Brian Krogsgard\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:46;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:65:\"WPTavern: WordCamp Wilmington Cancelled Due to Hurricane Florence\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"https://wptavern.com/?p=83851\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:76:\"https://wptavern.com/wordcamp-wilmington-cancelled-due-to-hurricane-florence\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:2572:\"<p>Hurricane Florence <a href=\"https://www.nhc.noaa.gov/graphics_at1.shtml?cone#contents\">is forecast</a> to make landfall as a major hurricane near Wilmington, North Carolina bringing potentially catastrophic flooding and strong winds to the region. </p>\n\n<img />Hurricane Florence Forecast Track From the National Hurricane Center\n\n<p>Because of the hurricane, <a href=\"https://2018.wilmington.wordcamp.org\">WordCamp Wilmington</a> which was scheduled to take place September 22nd and 23rd <a href=\"https://2018.wilmington.wordcamp.org/2018/09/11/canceled-2018-wordcamp-wilmington/\">has been cancelled</a>. </p>\n\n<p>&#8220;We wish all of our WordCamp Wilmington enthusiasts a minimum of impact from Hurricane Florence,&#8221; Helen Rittersporn, one of the event&#8217;s organizers said. <br /></p>\n\n<p>&#8220;On behalf of my fellow Organizers for 2018 WordCamp Wilmington, we are looking forward to seeing everyone in 2019!&#8221;</p>\n\n<h2>Safety of Attendees, Speakers, and Sponsors Takes Priority<br /></h2>\n\n<p>Peter La Fond, one of the event&#8217;s lead organizers, says the decision to cancel the event has been mentally taxing to him and the team.</p>\n\n<p>&#8220;From the beginning, the decision making was really hard,&#8221; he said. &#8220;How we made the decision about this was very fluid. The entire team has been texting back and forth every several hours on various decisions over many days.</p>\n\n<p>&#8220;We ended up having to set thresholds in advance for canceling.  Then on Monday morning, we started to get inquiries and cancellations of attendees, vendors and speakers so we had to make a call.&#8221; </p>\n\n<p>Although a lot hours were spent by volunteers to organize the event, speaker, attendee, and sponsor safety took priority. <br /></p>\n\n<p>&#8220;The organizing team is totally bummed about canceling the event considering the amount of effort we put into organizing it,&#8221; La Fond said. &#8220;However, we’re more concerned about the safety and security of our family and friends. Especially those who chose to stay.&#8221;</p>\n\n<p>Those who purchased tickets are eligible for a refund. But due to evacuations and the length of time the storm is expected wreak havoc in the area, organizers will not be able to fulfill refund requests until after the storm has passed. <br /></p>\n\n<p>This is the second time a tropical weather system has postponed or cancelled a WordCamp in the US. In 2016, <a href=\"https://wptavern.com/wordcamp-orlando-cancelled-due-to-hurricane\">WordCamp Orlando was postponed</a> due to Hurricane Matthew. </p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 12 Sep 2018 22:05:22 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Jeff Chandler\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:47;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:70:\"WPTavern: MetaSlider Plugin Adds Gutenberg Block for Inserting Sliders\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"https://wptavern.com/?p=83865\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:81:\"https://wptavern.com/metaslider-plugin-adds-gutenberg-block-for-inserting-sliders\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:4203:\"<p>If you <a href=\"https://wordpress.org/plugins/search/slider/\" rel=\"noopener noreferrer\" target=\"_blank\">search for &#8220;slider&#8221;</a> in the WordPress plugins directory, <a href=\"https://wordpress.org/plugins/ml-slider/\" rel=\"noopener noreferrer\" target=\"_blank\">MetaSlider</a> is the first result that comes up. The plugin, created by the team at <a href=\"https://updraftplus.com\" rel=\"noopener noreferrer\" target=\"_blank\">UpdraftPlus</a>, is active on more than 900,000 sites, more than any other free slider plugin, and averages a 4.7-star review. It includes four different types of sliders: Flex 2, Nivo Slider, Responsive Slides, and Coin Slider.</p>\n<p>An update released today introduces Gutenberg support with a block for inserting sliders. Users can access their sliders via the block insertion tool.</p>\n<p><a href=\"https://i2.wp.com/wptavern.com/wp-content/uploads/2018/09/metaslider-gutenberg-block.png?ssl=1\"><img /></a></p>\n<p>Clicking on the MetaSlider block allows users to select from among the sliders that they have already created in the admin.</p>\n<p><a href=\"https://i2.wp.com/wptavern.com/wp-content/uploads/2018/09/Screen-Shot-2018-09-12-at-12.46.10-PM.png?ssl=1\"><img /></a></p>\n<p>After the user selects a slider, a preview will appear instantly in the Gutenberg editor.</p>\n<p><a href=\"https://i0.wp.com/wptavern.com/wp-content/uploads/2018/09/metaslider-in-gutenberg.jpg?ssl=1\"><img /></a></p>\n<p>Previously, the process of inserting a slider into content involved copying and pasting a shortcode. Joe Miles, director of Business Strategy at UpdraftPlus, said the team sees the Gutenberg editor as a major improvement especially for those who are new to WordPress.</p>\n<p>&#8220;I think Gutenberg makes it much easier for novices to web design to make changes and insert sliders,&#8221; Miles said. &#8220;I know people who&#8217;d be comfortable using a Gutenberg block but not comfortable using a shortcode as it looks scary.&#8221;</p>\n<p>Miles said the company is currently working on adding the ability for users to create and edit sliders within Gutenberg and hope to include it in the plugin before WordPress 5.0 lands. The UpdraftPlus team includes 13 developers who are devoted to the company&#8217;s WP-Optimize and MetaSlider products. Miles said adapting to Gutenberg was fairly simple relative to some of the other projects the team is working on.</p>\n<p>UpdraftPlus plans to continue to maintain and improve the shortcode-based slider insertion method, as demonstrated in the changelog. Users who opt to stick with the Classic Editor will still be able to keep their same workflow. Meanwhile, the product&#8217;s development team will be working on integrating all of the pro version&#8217;s front-end features with Gutenberg.</p>\n<p>In addition to Gutenberg support, the team is also going to be <a href=\"https://updraftplus.com/metasliders-bringing-out-new-slider-themes-and-theyre-completely-free/\" rel=\"noopener noreferrer\" target=\"_blank\">adding the concept of themes to sliders</a> so users can build a slider and change its theme in a couple of clicks. They plan to release free and commercial themes and all will be built to be compatible with Gutenberg.</p>\n<p><a href=\"https://wordpress.org/plugins/smart-slider-3/\" rel=\"noopener noreferrer\" target=\"_blank\">Smart Slider 3</a>, MetaSlider&#8217;s next closest competitor with 300,000 installs, is <a href=\"https://smartslider3.com/blog/gutenberg-and-smart-slider-3-how-to-add-sliders-to-wordpress/\" rel=\"noopener noreferrer\" target=\"_blank\">also compatible with Gutenberg</a> with a similar workflow for inserting sliders. Both slider plugins are not yet capable of providing the slider creation and editing process inside the Gutenberg interface but the capabilities should evolve as WordPress gets closer to the 5.0 release.</p>\n<p>&#8220;I personally love the idea of Gutenberg since Matt Mullenweg announced it at WordCamp EU 2017,&#8221; Miles said. &#8220;I understand why experienced developers don&#8217;t want the change, but too many people are going for inferior website solutions like WIX because they&#8217;re used to WYSIWYG. So adapting MetaSlider was a no-brainer.&#8221;</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 12 Sep 2018 20:59:26 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:48;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:89:\"WPTavern: Marcel Bootsman is Walking 700km to WordCamp Europe to Raise Funds for DonateWC\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"https://wptavern.com/?p=83797\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:100:\"https://wptavern.com/marcel-bootsman-is-walking-700km-to-wordcamp-europe-to-raise-funds-for-donatewc\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:3272:\"<p><a href=\"https://i1.wp.com/wptavern.com/wp-content/uploads/2018/09/Screen-Shot-2018-09-11-at-3.37.12-PM.png?ssl=1\"><img /></a></p>\n<p>In May 2019, <a href=\"https://twitter.com/mbootsman\" rel=\"noopener noreferrer\" target=\"_blank\">Marcel Bootsman</a> will be lacing up a pair of hiking boots and walking 700km (435 miles) from his home in Rotterdam to WordCamp Europe in Berlin. Bootsman, a WordPress consultant and WordCamp organizer, is walking to raise funds and awareness for the <a href=\"https://donatewc.org/\" rel=\"noopener noreferrer\" target=\"_blank\">DonateWC</a> organization.</p>\n<p>The DonateWC initiative provides a global fund for helping people in need of financial assistance to attend a big WordCamp. Donations go towards individually-tailored sponsorships that help selected attendees purchase a WordCamp ticket, door-to-door transportation, food and drink, and internet access.</p>\n<p>&#8220;Imagine for a moment that you are not backed by a company that will pay for you to go to a community event,&#8221; DonateWC founder Ines van Essen said. &#8220;You work hard at being a valuable community member but are never able to actually meet the others in your team. This means you are less likely to get a job, less likely to get recognized as a worthwhile member, you’re unlikely to be at the front-end of changes that impact your work significantly.&#8221;</p>\n<p>DonateWC aims to keep the larger WordCamps from being unintentionally exclusive of those with lesser financial means. Bootsman said he believes in the organization because it is community-driven and enables the greater WordPress community to do something for their fellow community members.</p>\n<p>So far, Bootsman&#8217;s walking journey has raised €116.57. He set up a <a href=\"https://walktowc.eu\" rel=\"noopener noreferrer\" target=\"_blank\">walktowc.eu</a> website to track his progress and the <a href=\"https://walktowc.eu/donate/\" rel=\"noopener noreferrer\" target=\"_blank\">donation page</a> displays a live update of donated funds. Contributors have the option to designate their donations for DonateWC or for Bootsman&#8217;s personal needs on the trek. He plans to deliver all of the funds raised for the organization when he arrives in Berlin. In the coming weeks he will also open up sponsor packages to better motivate companies to donate.</p>\n<p>Bootsman does not plan to work during his trek. He will be on the road for approximately 30 days and plans to walk 30km per day. He is traveling light with just a backpack and is looking for places where he can sleep along the way. Bootsman will update the <a href=\"https://walktowc.eu/route/\" rel=\"noopener noreferrer\" target=\"_blank\">Route page</a> on his website with the places where people volunteer a bed for him to spend the night.</p>\n<p>If you want to keep track of his progress, follow the hashtag <a href=\"https://twitter.com/hashtag/walktowceu?src=hash\" rel=\"noopener noreferrer\" target=\"_blank\">#walktwceu</a> on Twitter. Bootsman has published his first vlog about his training sessions (see video below) where you can hear in his own words why his making the long journey on foot. When I asked him if he&#8217;ll be walking home after WordCamp Europe, he said, &#8220;You&#8217;re kidding, right?&#8221;</p>\n<p></p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Tue, 11 Sep 2018 22:25:00 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:49;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:26:\"Matt: WP Dev on Chromebook\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:22:\"https://ma.tt/?p=48342\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:43:\"https://ma.tt/2018/09/wp-dev-on-chromebook/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:256:\"<p>Dan Walmsley has an interesting <a href=\"https://developer.wordpress.com/2018/09/11/developing-wordpress-jetpack-and-calypso-on-chromeos/\">walkthrough on getting set up for WordPress and Calypso development on the new Linux mode on a Chromebook</a>.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Tue, 11 Sep 2018 18:29:48 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:4:\"Matt\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}}}}}}}}}}}}s:4:\"type\";i:128;s:7:\"headers\";O:42:\"Requests_Utility_CaseInsensitiveDictionary\":1:{s:7:\"\0*\0data\";a:8:{s:6:\"server\";s:5:\"nginx\";s:4:\"date\";s:29:\"Wed, 10 Oct 2018 01:32:08 GMT\";s:12:\"content-type\";s:8:\"text/xml\";s:4:\"vary\";s:15:\"Accept-Encoding\";s:13:\"last-modified\";s:29:\"Wed, 10 Oct 2018 01:15:28 GMT\";s:15:\"x-frame-options\";s:10:\"SAMEORIGIN\";s:4:\"x-nc\";s:9:\"HIT ord 2\";s:16:\"content-encoding\";s:4:\"gzip\";}}s:5:\"build\";s:14:\"20181008085313\";}','no'),(482,'_transient_timeout_feed_mod_d117b5738fbd35bd8c0391cda1f2b5d9','1539178328','no'),(483,'_transient_feed_mod_d117b5738fbd35bd8c0391cda1f2b5d9','1539135128','no'),(484,'_transient_timeout_dash_v2_5438fb5baf31c513fff2b9a1067656a6','1539178328','no'),(485,'_transient_dash_v2_5438fb5baf31c513fff2b9a1067656a6','<div class=\"rss-widget\"><ul><li><a class=\'rsswidget\' href=\'https://cn.wordpress.org/2018/02/08/wordpress-4-9-4/\'>WordPress 4.9.4维护更新</a></li></ul></div><div class=\"rss-widget\"><ul><li><a class=\'rsswidget\' href=\'https://wptavern.com/jetpack-6-6-improves-site-verification-tools-asset-cdn-module-now-in-beta-gutenberg-blocks-coming-soon\'>WPTavern: Jetpack 6.6 Improves Site Verification Tools, Asset CDN Module Now in Beta, Gutenberg Blocks Coming Soon</a></li><li><a class=\'rsswidget\' href=\'https://wptavern.com/wordpress-accessibility-team-lead-resigns-cites-political-complications-related-to-gutenberg\'>WPTavern: WordPress Accessibility Team Lead Resigns, Cites Political Complications Related to Gutenberg</a></li><li><a class=\'rsswidget\' href=\'https://wptavern.com/alexis-lloyd-and-riad-benguella-will-lead-phase-two-of-gutenberg\'>WPTavern: Alexis Lloyd and Riad Benguella Will Lead Phase Two of Gutenberg</a></li></ul></div>','no'),(522,'enlighter-settingsupdate-hash','46f6ce85c9','yes'),(523,'enlighter-version','3.8.1','yes'),(627,'_site_transient_update_plugins','O:8:\"stdClass\":5:{s:12:\"last_checked\";i:1539154661;s:7:\"checked\";a:3:{s:19:\"akismet/akismet.php\";s:5:\"4.0.8\";s:23:\"enlighter/Enlighter.php\";s:5:\"3.8.1\";s:31:\"wp-statistics/wp-statistics.php\";s:6:\"12.4.3\";}s:8:\"response\";a:0:{}s:12:\"translations\";a:0:{}s:9:\"no_update\";a:3:{s:19:\"akismet/akismet.php\";O:8:\"stdClass\":9:{s:2:\"id\";s:21:\"w.org/plugins/akismet\";s:4:\"slug\";s:7:\"akismet\";s:6:\"plugin\";s:19:\"akismet/akismet.php\";s:11:\"new_version\";s:5:\"4.0.8\";s:3:\"url\";s:38:\"https://wordpress.org/plugins/akismet/\";s:7:\"package\";s:56:\"https://downloads.wordpress.org/plugin/akismet.4.0.8.zip\";s:5:\"icons\";a:2:{s:2:\"2x\";s:59:\"https://ps.w.org/akismet/assets/icon-256x256.png?rev=969272\";s:2:\"1x\";s:59:\"https://ps.w.org/akismet/assets/icon-128x128.png?rev=969272\";}s:7:\"banners\";a:1:{s:2:\"1x\";s:61:\"https://ps.w.org/akismet/assets/banner-772x250.jpg?rev=479904\";}s:11:\"banners_rtl\";a:0:{}}s:23:\"enlighter/Enlighter.php\";O:8:\"stdClass\":9:{s:2:\"id\";s:23:\"w.org/plugins/enlighter\";s:4:\"slug\";s:9:\"enlighter\";s:6:\"plugin\";s:23:\"enlighter/Enlighter.php\";s:11:\"new_version\";s:5:\"3.8.1\";s:3:\"url\";s:40:\"https://wordpress.org/plugins/enlighter/\";s:7:\"package\";s:58:\"https://downloads.wordpress.org/plugin/enlighter.3.8.1.zip\";s:5:\"icons\";a:2:{s:2:\"2x\";s:62:\"https://ps.w.org/enlighter/assets/icon-256x256.png?rev=1215872\";s:2:\"1x\";s:62:\"https://ps.w.org/enlighter/assets/icon-128x128.png?rev=1215872\";}s:7:\"banners\";a:1:{s:2:\"1x\";s:64:\"https://ps.w.org/enlighter/assets/banner-772x250.png?rev=1396006\";}s:11:\"banners_rtl\";a:0:{}}s:31:\"wp-statistics/wp-statistics.php\";O:8:\"stdClass\":9:{s:2:\"id\";s:27:\"w.org/plugins/wp-statistics\";s:4:\"slug\";s:13:\"wp-statistics\";s:6:\"plugin\";s:31:\"wp-statistics/wp-statistics.php\";s:11:\"new_version\";s:6:\"12.4.3\";s:3:\"url\";s:44:\"https://wordpress.org/plugins/wp-statistics/\";s:7:\"package\";s:63:\"https://downloads.wordpress.org/plugin/wp-statistics.12.4.3.zip\";s:5:\"icons\";a:3:{s:2:\"2x\";s:66:\"https://ps.w.org/wp-statistics/assets/icon-256x256.png?rev=1673578\";s:2:\"1x\";s:58:\"https://ps.w.org/wp-statistics/assets/icon.svg?rev=1860682\";s:3:\"svg\";s:58:\"https://ps.w.org/wp-statistics/assets/icon.svg?rev=1860682\";}s:7:\"banners\";a:1:{s:2:\"1x\";s:68:\"https://ps.w.org/wp-statistics/assets/banner-772x250.png?rev=1673578\";}s:11:\"banners_rtl\";a:0:{}}}}','no'),(630,'code_snippets_version','2.12.0','yes'),(631,'code_snippets_settings','a:3:{s:7:\"general\";a:6:{s:19:\"activate_by_default\";b:1;s:21:\"snippet_scope_enabled\";b:1;s:11:\"enable_tags\";b:1;s:18:\"enable_description\";b:1;s:13:\"disable_prism\";b:0;s:18:\"complete_uninstall\";b:0;}s:18:\"description_editor\";a:3:{s:4:\"rows\";i:5;s:12:\"use_full_mce\";b:0;s:13:\"media_buttons\";b:0;}s:6:\"editor\";a:8:{s:5:\"theme\";s:7:\"default\";s:16:\"indent_with_tabs\";b:1;s:8:\"tab_size\";i:4;s:11:\"indent_unit\";i:2;s:10:\"wrap_lines\";b:1;s:12:\"line_numbers\";b:1;s:19:\"auto_close_brackets\";b:1;s:27:\"highlight_selection_matches\";b:1;}}','yes'),(634,'recently_activated_snippets','a:0:{}','yes'),(647,'enlighter-embedEnlighterCSS','1','yes'),(648,'enlighter-embedEnlighterJS','1','yes'),(649,'enlighter-embedExternalThemes','1','yes'),(650,'enlighter-mootoolsSource','local','yes'),(651,'enlighter-jsType','inline','yes'),(652,'enlighter-jsPosition','footer','yes'),(653,'enlighter-defaultTheme','enlighter','yes'),(654,'enlighter-defaultLanguage','cpp','yes'),(655,'enlighter-indent','4','yes'),(656,'enlighter-linenumbers','','yes'),(657,'enlighter-hoverClass','1','yes'),(658,'enlighter-selector','pre.EnlighterJSRAW','yes'),(659,'enlighter-selectorInline','code.EnlighterJSRAW','yes'),(660,'enlighter-languageShortcode','1','yes'),(661,'enlighter-shortcodeMode','modern','yes'),(662,'enlighter-shortcodeFilterContent','1','yes'),(663,'enlighter-shortcodeFilterExcerpt','','yes'),(664,'enlighter-shortcodeFilterComments','','yes'),(665,'enlighter-shortcodeFilterCommentsExcerpt','','yes'),(666,'enlighter-shortcodeFilterWidgetText','','yes'),(667,'enlighter-gfmDefaultLanguage','generic','yes'),(668,'enlighter-gfmFilterContent','','yes'),(669,'enlighter-gfmFilterExcerpt','','yes'),(670,'enlighter-gfmFilterComments','','yes'),(671,'enlighter-gfmFilterCommentsExcerpt','','yes'),(672,'enlighter-gfmFilterWidgetText','','yes'),(673,'enlighter-compatDefaultLanguage','generic','yes'),(674,'enlighter-compatFilterContent','','yes'),(675,'enlighter-compatFilterExcerpt','','yes'),(676,'enlighter-compatFilterComments','','yes'),(677,'enlighter-compatFilterCommentsExcerpt','','yes'),(678,'enlighter-compatFilterWidgetText','','yes'),(679,'enlighter-editorFontFamily','\"Source Code Pro\", \"Liberation Mono\", \"Courier New\", Courier, monospace','yes'),(680,'enlighter-editorFontSize','1em','yes'),(681,'enlighter-editorLineHeight','1.4em','yes'),(682,'enlighter-editorFontColor','#565b60','yes'),(683,'enlighter-editorBackgroundColor','#f7f7f7','yes'),(684,'enlighter-editorAutowidth','1','yes'),(685,'enlighter-editorQuicktagMode','html','yes'),(686,'enlighter-editorAddStyleFormats','1','yes'),(687,'enlighter-editorTabIndentation','1','yes'),(688,'enlighter-editorKeyboardShortcuts','','yes'),(689,'enlighter-customThemeBase','Enlighter','yes'),(690,'enlighter-customFontFamily','Monaco, Courier, Monospace','yes'),(691,'enlighter-customFontSize','12px','yes'),(692,'enlighter-customLineHeight','16px','yes'),(693,'enlighter-customFontColor','#000000','yes'),(694,'enlighter-customLinenumberFontFamily','Monaco, Courier, Monospace','yes'),(695,'enlighter-customLinenumberFontSize','10px','yes'),(696,'enlighter-customLinenumberFontColor','#000000','yes'),(697,'enlighter-customLineHighlightColor','#f0f0ff','yes'),(698,'enlighter-customLineHoverColor','#f0f0ff','yes'),(699,'enlighter-customRawFontFamily','Monaco, Courier, Monospace','yes'),(700,'enlighter-customRawFontSize','12px','yes'),(701,'enlighter-customRawLineHeight','16px','yes'),(702,'enlighter-customRawFontColor','#000000','yes'),(703,'enlighter-customRawBackgroundColor','#000000','yes'),(704,'enlighter-wpAutoPFilterPriority','default','yes'),(705,'enlighter-enableTranslation','1','yes'),(706,'enlighter-enableTinyMceIntegration','1','yes'),(707,'enlighter-enableFrontendTinyMceIntegration','','yes'),(708,'enlighter-enableQuicktagBackendIntegration','','yes'),(709,'enlighter-enableQuicktagFrontendIntegration','','yes'),(710,'enlighter-rawButton','1','yes'),(711,'enlighter-windowButton','1','yes'),(712,'enlighter-infoButton','1','yes'),(713,'enlighter-rawcodeDoubleclick','','yes'),(714,'enlighter-enableInlineHighlighting','1','yes'),(715,'enlighter-cryptexEnabled','','yes'),(716,'enlighter-cryptexFallbackEmail','mail@example.tld','yes'),(717,'enlighter-extJetpackInfiniteScroll','','yes'),(718,'enlighter-bbpressShortcode','','yes'),(719,'enlighter-bbpressMarkdown','','yes'),(720,'enlighter-dynamicResourceInvocation','','yes'),(721,'enlighter-gutenbergSupport','','yes'),(722,'enlighter-custom-color-kw1','','yes'),(723,'enlighter-custom-bgcolor-kw1','','yes'),(724,'enlighter-custom-fontstyle-kw1','normal','yes'),(725,'enlighter-custom-decoration-kw1','normal','yes'),(726,'enlighter-custom-color-kw2','','yes'),(727,'enlighter-custom-bgcolor-kw2','','yes'),(728,'enlighter-custom-fontstyle-kw2','normal','yes'),(729,'enlighter-custom-decoration-kw2','normal','yes'),(730,'enlighter-custom-color-kw3','','yes'),(731,'enlighter-custom-bgcolor-kw3','','yes'),(732,'enlighter-custom-fontstyle-kw3','normal','yes'),(733,'enlighter-custom-decoration-kw3','normal','yes'),(734,'enlighter-custom-color-kw4','','yes'),(735,'enlighter-custom-bgcolor-kw4','','yes'),(736,'enlighter-custom-fontstyle-kw4','normal','yes'),(737,'enlighter-custom-decoration-kw4','normal','yes'),(738,'enlighter-custom-color-co1','','yes'),(739,'enlighter-custom-bgcolor-co1','','yes'),(740,'enlighter-custom-fontstyle-co1','normal','yes'),(741,'enlighter-custom-decoration-co1','normal','yes'),(742,'enlighter-custom-color-co2','','yes'),(743,'enlighter-custom-bgcolor-co2','','yes'),(744,'enlighter-custom-fontstyle-co2','normal','yes'),(745,'enlighter-custom-decoration-co2','normal','yes'),(746,'enlighter-custom-color-st0','','yes'),(747,'enlighter-custom-bgcolor-st0','','yes'),(748,'enlighter-custom-fontstyle-st0','normal','yes'),(749,'enlighter-custom-decoration-st0','normal','yes'),(750,'enlighter-custom-color-st1','','yes'),(751,'enlighter-custom-bgcolor-st1','','yes'),(752,'enlighter-custom-fontstyle-st1','normal','yes'),(753,'enlighter-custom-decoration-st1','normal','yes'),(754,'enlighter-custom-color-st2','','yes'),(755,'enlighter-custom-bgcolor-st2','','yes'),(756,'enlighter-custom-fontstyle-st2','normal','yes'),(757,'enlighter-custom-decoration-st2','normal','yes'),(758,'enlighter-custom-color-nu0','','yes'),(759,'enlighter-custom-bgcolor-nu0','','yes'),(760,'enlighter-custom-fontstyle-nu0','normal','yes'),(761,'enlighter-custom-decoration-nu0','normal','yes'),(762,'enlighter-custom-color-me0','','yes'),(763,'enlighter-custom-bgcolor-me0','','yes'),(764,'enlighter-custom-fontstyle-me0','normal','yes'),(765,'enlighter-custom-decoration-me0','normal','yes'),(766,'enlighter-custom-color-me1','','yes'),(767,'enlighter-custom-bgcolor-me1','','yes'),(768,'enlighter-custom-fontstyle-me1','normal','yes'),(769,'enlighter-custom-decoration-me1','normal','yes'),(770,'enlighter-custom-color-br0','','yes'),(771,'enlighter-custom-bgcolor-br0','','yes'),(772,'enlighter-custom-fontstyle-br0','normal','yes'),(773,'enlighter-custom-decoration-br0','normal','yes'),(774,'enlighter-custom-color-sy0','','yes'),(775,'enlighter-custom-bgcolor-sy0','','yes'),(776,'enlighter-custom-fontstyle-sy0','normal','yes'),(777,'enlighter-custom-decoration-sy0','normal','yes'),(778,'enlighter-custom-color-es0','','yes'),(779,'enlighter-custom-bgcolor-es0','','yes'),(780,'enlighter-custom-fontstyle-es0','normal','yes'),(781,'enlighter-custom-decoration-es0','normal','yes'),(782,'enlighter-custom-color-re0','','yes'),(783,'enlighter-custom-bgcolor-re0','','yes'),(784,'enlighter-custom-fontstyle-re0','normal','yes'),(785,'enlighter-custom-decoration-re0','normal','yes'),(786,'enlighter-custom-color-de1','','yes'),(787,'enlighter-custom-bgcolor-de1','','yes'),(788,'enlighter-custom-fontstyle-de1','normal','yes'),(789,'enlighter-custom-decoration-de1','normal','yes'),(790,'enlighter-custom-color-de2','','yes'),(791,'enlighter-custom-bgcolor-de2','','yes'),(792,'enlighter-custom-fontstyle-de2','normal','yes'),(793,'enlighter-custom-decoration-de2','normal','yes'),(794,'enlighter-webfontsAnonymousPro','','yes'),(795,'enlighter-webfontsCousine','','yes'),(796,'enlighter-webfontsCutiveMono','','yes'),(797,'enlighter-webfontsFiraMono','','yes'),(798,'enlighter-webfontsIBMPlexMono','','yes'),(799,'enlighter-webfontsInconsolata','','yes'),(800,'enlighter-webfontsNanumGothicCoding','','yes'),(801,'enlighter-webfontsNovaMono','','yes'),(802,'enlighter-webfontsOverpassMono','','yes'),(803,'enlighter-webfontsOxygenMono','','yes'),(804,'enlighter-webfontsPTMono','','yes'),(805,'enlighter-webfontsRobotoMono','','yes'),(806,'enlighter-webfontsShareTechMono','','yes'),(807,'enlighter-webfontsSourceCodePro','','yes'),(808,'enlighter-webfontsSpaceMono','','yes'),(809,'enlighter-webfontsUbuntuMono','','yes'),(810,'enlighter-webfontsVT323','','yes'),(897,'theme_mods_twentysixteen','a:1:{s:18:\"custom_css_post_id\";i:-1;}','yes'),(898,'_transient_twentysixteen_categories','2','yes'),(1092,'_site_transient_timeout_theme_roots','1539156461','no'),(1093,'_site_transient_theme_roots','a:5:{s:6:\"chilly\";s:7:\"/themes\";s:10:\"spicepress\";s:7:\"/themes\";s:13:\"twentyfifteen\";s:7:\"/themes\";s:15:\"twentyseventeen\";s:7:\"/themes\";s:13:\"twentysixteen\";s:7:\"/themes\";}','no'),(1094,'_site_transient_update_themes','O:8:\"stdClass\":4:{s:12:\"last_checked\";i:1539154661;s:7:\"checked\";a:5:{s:6:\"chilly\";s:5:\"1.1.6\";s:10:\"spicepress\";s:5:\"1.5.1\";s:13:\"twentyfifteen\";s:3:\"2.0\";s:15:\"twentyseventeen\";s:3:\"1.5\";s:13:\"twentysixteen\";s:3:\"1.5\";}s:8:\"response\";a:1:{s:15:\"twentyseventeen\";a:4:{s:5:\"theme\";s:15:\"twentyseventeen\";s:11:\"new_version\";s:3:\"1.7\";s:3:\"url\";s:45:\"https://wordpress.org/themes/twentyseventeen/\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/theme/twentyseventeen.1.7.zip\";}}s:12:\"translations\";a:0:{}}','no'),(1178,'category_children','a:0:{}','yes'),(1192,'_transient_timeout_wps_excluded_hostname_to_ip_cache','1539158792','no'),(1193,'_transient_wps_excluded_hostname_to_ip_cache','a:0:{}','no'),(1206,'_transient_timeout_enlighter_userthemes','1539247094','no'),(1207,'_transient_enlighter_userthemes','a:0:{}','no'),(1208,'_transient_is_multi_author','0','yes'),(1209,'_transient_twentyseventeen_categories','2','yes');
/*!40000 ALTER TABLE `wp_options` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_postmeta`
--

DROP TABLE IF EXISTS `wp_postmeta`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_postmeta` (
  `meta_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `post_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  `meta_key` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `meta_value` longtext COLLATE utf8mb4_unicode_ci,
  PRIMARY KEY (`meta_id`),
  KEY `post_id` (`post_id`),
  KEY `meta_key` (`meta_key`(191))
) ENGINE=InnoDB AUTO_INCREMENT=449 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_postmeta`
--

LOCK TABLES `wp_postmeta` WRITE;
/*!40000 ALTER TABLE `wp_postmeta` DISABLE KEYS */;
INSERT INTO `wp_postmeta` VALUES (1,2,'_wp_page_template','default'),(2,3,'_wp_page_template','default'),(3,5,'_customize_draft_post_name','home'),(4,5,'_customize_changeset_uuid','a0d4c087-53c6-4809-9952-a3e6e4596553'),(5,6,'_customize_draft_post_name','about'),(6,6,'_customize_changeset_uuid','a0d4c087-53c6-4809-9952-a3e6e4596553'),(8,7,'_customize_changeset_uuid','2148f89d-6839-4c06-821b-b7897c3e3000'),(10,8,'_customize_changeset_uuid','2148f89d-6839-4c06-821b-b7897c3e3000'),(12,9,'_customize_changeset_uuid','2148f89d-6839-4c06-821b-b7897c3e3000'),(14,10,'_customize_changeset_uuid','2148f89d-6839-4c06-821b-b7897c3e3000'),(16,11,'_customize_changeset_uuid','2148f89d-6839-4c06-821b-b7897c3e3000'),(17,18,'_menu_item_type','custom'),(18,18,'_menu_item_menu_item_parent','0'),(19,18,'_menu_item_object_id','18'),(20,18,'_menu_item_object','custom'),(21,18,'_menu_item_target',''),(22,18,'_menu_item_classes','a:1:{i:0;s:0:\"\";}'),(23,18,'_menu_item_xfn',''),(24,18,'_menu_item_url','http://45.77.202.181/'),(25,19,'_menu_item_type','post_type'),(26,19,'_menu_item_menu_item_parent','0'),(27,19,'_menu_item_object_id','8'),(28,19,'_menu_item_object','page'),(29,19,'_menu_item_target',''),(30,19,'_menu_item_classes','a:1:{i:0;s:0:\"\";}'),(31,19,'_menu_item_xfn',''),(32,19,'_menu_item_url',''),(41,21,'_menu_item_type','post_type'),(42,21,'_menu_item_menu_item_parent','0'),(43,21,'_menu_item_object_id','9'),(44,21,'_menu_item_object','page'),(45,21,'_menu_item_target',''),(46,21,'_menu_item_classes','a:1:{i:0;s:0:\"\";}'),(47,21,'_menu_item_xfn',''),(48,21,'_menu_item_url',''),(81,26,'_menu_item_type','custom'),(82,26,'_menu_item_menu_item_parent','0'),(83,26,'_menu_item_object_id','26'),(84,26,'_menu_item_object','custom'),(85,26,'_menu_item_target',''),(86,26,'_menu_item_classes','a:1:{i:0;s:0:\"\";}'),(87,26,'_menu_item_xfn',''),(88,26,'_menu_item_url','mailto:bxp0805@163.com'),(89,12,'_wp_trash_meta_status','publish'),(90,12,'_wp_trash_meta_time','1538984422'),(91,27,'_edit_last','1'),(92,27,'_edit_lock','1538984667:1'),(93,27,'_wp_trash_meta_status','publish'),(94,27,'_wp_trash_meta_time','1538984810'),(95,27,'_wp_desired_post_slug','test-page'),(96,7,'_edit_lock','1539074650:1'),(97,29,'_edit_last','1'),(98,29,'_edit_lock','1538984779:1'),(104,2,'_edit_lock','1538986901:1'),(105,10,'_edit_lock','1539073956:1'),(106,11,'_edit_lock','1538986853:1'),(107,2,'_edit_last','1'),(139,40,'_wp_trash_meta_status','publish'),(140,40,'_wp_trash_meta_time','1539050654'),(141,41,'_edit_last','1'),(142,41,'_edit_lock','1539136173:1'),(145,43,'_edit_last','1'),(146,43,'_edit_lock','1539136167:1'),(149,46,'_edit_last','1'),(150,46,'_edit_lock','1539136160:1'),(153,48,'_edit_last','1'),(154,48,'_edit_lock','1539136150:1'),(157,50,'_edit_last','1'),(158,50,'_edit_lock','1539136143:1'),(161,52,'_edit_last','1'),(162,52,'_edit_lock','1539064731:1'),(165,54,'_wp_attached_file','2018/10/Capture2.png'),(166,54,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1777;s:6:\"height\";i:1054;s:4:\"file\";s:20:\"2018/10/Capture2.png\";s:5:\"sizes\";a:5:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:20:\"Capture2-150x150.png\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/png\";}s:6:\"medium\";a:4:{s:4:\"file\";s:20:\"Capture2-300x178.png\";s:5:\"width\";i:300;s:6:\"height\";i:178;s:9:\"mime-type\";s:9:\"image/png\";}s:12:\"medium_large\";a:4:{s:4:\"file\";s:20:\"Capture2-768x456.png\";s:5:\"width\";i:768;s:6:\"height\";i:456;s:9:\"mime-type\";s:9:\"image/png\";}s:5:\"large\";a:4:{s:4:\"file\";s:21:\"Capture2-1024x607.png\";s:5:\"width\";i:1024;s:6:\"height\";i:607;s:9:\"mime-type\";s:9:\"image/png\";}s:32:\"twentyseventeen-thumbnail-avatar\";a:4:{s:4:\"file\";s:20:\"Capture2-100x100.png\";s:5:\"width\";i:100;s:6:\"height\";i:100;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),(167,57,'_wp_attached_file','2018/10/Capture.png'),(168,57,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1876;s:6:\"height\";i:948;s:4:\"file\";s:19:\"2018/10/Capture.png\";s:5:\"sizes\";a:5:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:19:\"Capture-150x150.png\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/png\";}s:6:\"medium\";a:4:{s:4:\"file\";s:19:\"Capture-300x152.png\";s:5:\"width\";i:300;s:6:\"height\";i:152;s:9:\"mime-type\";s:9:\"image/png\";}s:12:\"medium_large\";a:4:{s:4:\"file\";s:19:\"Capture-768x388.png\";s:5:\"width\";i:768;s:6:\"height\";i:388;s:9:\"mime-type\";s:9:\"image/png\";}s:5:\"large\";a:4:{s:4:\"file\";s:20:\"Capture-1024x517.png\";s:5:\"width\";i:1024;s:6:\"height\";i:517;s:9:\"mime-type\";s:9:\"image/png\";}s:32:\"twentyseventeen-thumbnail-avatar\";a:4:{s:4:\"file\";s:19:\"Capture-100x100.png\";s:5:\"width\";i:100;s:6:\"height\";i:100;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),(173,60,'_edit_last','1'),(176,60,'_edit_lock','1539154921:1'),(181,62,'_edit_last','1'),(182,62,'_edit_lock','1539136060:1'),(187,65,'_wp_attached_file','2018/10/REP.png'),(188,65,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:684;s:6:\"height\";i:144;s:4:\"file\";s:15:\"2018/10/REP.png\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:15:\"REP-150x144.png\";s:5:\"width\";i:150;s:6:\"height\";i:144;s:9:\"mime-type\";s:9:\"image/png\";}s:6:\"medium\";a:4:{s:4:\"file\";s:14:\"REP-300x63.png\";s:5:\"width\";i:300;s:6:\"height\";i:63;s:9:\"mime-type\";s:9:\"image/png\";}s:32:\"twentyseventeen-thumbnail-avatar\";a:4:{s:4:\"file\";s:15:\"REP-100x100.png\";s:5:\"width\";i:100;s:6:\"height\";i:100;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),(189,66,'_wp_attached_file','2018/10/REQ.png'),(190,66,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:629;s:6:\"height\";i:156;s:4:\"file\";s:15:\"2018/10/REQ.png\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:15:\"REQ-150x150.png\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/png\";}s:6:\"medium\";a:4:{s:4:\"file\";s:14:\"REQ-300x74.png\";s:5:\"width\";i:300;s:6:\"height\";i:74;s:9:\"mime-type\";s:9:\"image/png\";}s:32:\"twentyseventeen-thumbnail-avatar\";a:4:{s:4:\"file\";s:15:\"REQ-100x100.png\";s:5:\"width\";i:100;s:6:\"height\";i:100;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),(193,68,'_edit_last','1'),(194,68,'_edit_lock','1539154864:1'),(197,70,'_edit_last','1'),(200,70,'_edit_lock','1539154733:1'),(201,72,'_edit_last','1'),(202,72,'_edit_lock','1539064538:1'),(205,74,'_edit_last','1'),(206,74,'_edit_lock','1539154205:1'),(209,76,'_edit_last','1'),(210,76,'_edit_lock','1539154154:1'),(213,78,'_edit_last','1'),(214,78,'_edit_lock','1539135945:1'),(217,80,'_edit_last','1'),(220,80,'_edit_lock','1539064904:1'),(221,82,'_edit_last','1'),(222,82,'_edit_lock','1539153727:1'),(225,84,'_edit_last','1'),(228,84,'_edit_lock','1539153185:1'),(229,86,'_edit_last','1'),(230,86,'_edit_lock','1539153036:1'),(237,88,'_wp_trash_meta_status','publish'),(238,88,'_wp_trash_meta_time','1539065461'),(239,89,'_wp_trash_meta_status','publish'),(240,89,'_wp_trash_meta_time','1539066051'),(241,90,'_edit_lock','1539066342:1'),(242,90,'_wp_trash_meta_status','publish'),(243,90,'_wp_trash_meta_time','1539066355'),(244,91,'_edit_lock','1539066463:1'),(245,91,'_wp_trash_meta_status','publish'),(246,91,'_wp_trash_meta_time','1539066465'),(247,92,'_edit_lock','1539068358:1'),(248,92,'_wp_trash_meta_status','publish'),(249,92,'_wp_trash_meta_time','1539068381'),(250,93,'_wp_trash_meta_status','publish'),(251,93,'_wp_trash_meta_time','1539068474'),(252,94,'_edit_lock','1539068538:1'),(253,94,'_wp_trash_meta_status','publish'),(254,94,'_wp_trash_meta_time','1539068585'),(255,95,'_edit_lock','1539068855:1'),(256,95,'_wp_trash_meta_status','publish'),(257,95,'_wp_trash_meta_time','1539068863'),(260,97,'_edit_last','1'),(261,97,'_edit_lock','1539072207:1'),(262,99,'_wp_trash_meta_status','publish'),(263,99,'_wp_trash_meta_time','1539074265'),(264,97,'_wp_trash_meta_status','draft'),(265,97,'_wp_trash_meta_time','1539074601'),(266,97,'_wp_desired_post_slug',''),(267,11,'_wp_trash_meta_status','publish'),(268,11,'_wp_trash_meta_time','1539074607'),(269,11,'_wp_desired_post_slug','a-homepage-section'),(270,10,'_wp_trash_meta_status','publish'),(271,10,'_wp_trash_meta_time','1539074615'),(272,10,'_wp_desired_post_slug','blog'),(273,3,'_wp_trash_meta_status','draft'),(274,3,'_wp_trash_meta_time','1539074622'),(275,3,'_wp_desired_post_slug','privacy-policy'),(276,2,'_wp_trash_meta_status','publish'),(277,2,'_wp_trash_meta_time','1539074626'),(278,2,'_wp_desired_post_slug','sample-page'),(279,29,'_wp_trash_meta_status','publish'),(280,29,'_wp_trash_meta_time','1539074629'),(281,29,'_wp_desired_post_slug','test-page'),(282,102,'_wp_trash_meta_status','publish'),(283,102,'_wp_trash_meta_time','1539074708'),(284,103,'_edit_lock','1539074766:1'),(285,103,'_wp_trash_meta_status','publish'),(286,103,'_wp_trash_meta_time','1539074767'),(311,110,'_wp_trash_meta_status','publish'),(312,110,'_wp_trash_meta_time','1539075582'),(313,111,'_wp_trash_meta_status','publish'),(314,111,'_wp_trash_meta_time','1539075610'),(315,112,'_edit_lock','1539076809:1'),(316,112,'_wp_trash_meta_status','publish'),(317,112,'_wp_trash_meta_time','1539076835'),(318,9,'_edit_lock','1539076781:1'),(319,9,'_edit_last','1'),(320,8,'_edit_lock','1539077070:1'),(321,8,'_edit_last','1'),(376,131,'_edit_last','1'),(377,131,'_edit_lock','1539152538:1'),(378,131,'_wp_trash_meta_status','draft'),(379,131,'_wp_trash_meta_time','1539153159'),(380,131,'_wp_desired_post_slug',''),(403,148,'_edit_last','1'),(404,148,'_edit_lock','1539156302:1'),(407,150,'_edit_last','1'),(408,150,'_edit_lock','1539159542:1'),(411,152,'_edit_last','1'),(412,152,'_edit_lock','1539156944:1'),(415,154,'_edit_last','1'),(416,154,'_edit_lock','1539157150:1'),(417,155,'_edit_last','1'),(418,155,'_edit_lock','1539157255:1'),(423,157,'_edit_last','1'),(424,157,'_edit_lock','1539157496:1'),(429,162,'_edit_last','1'),(430,162,'_edit_lock','1539157700:1'),(433,164,'_edit_last','1'),(434,164,'_edit_lock','1539157778:1'),(437,166,'_edit_last','1'),(438,166,'_edit_lock','1539158233:1'),(439,167,'_edit_last','1'),(440,167,'_edit_lock','1539159523:1'),(441,168,'_wp_attached_file','2018/10/image1.bmp'),(442,168,'_wp_attachment_metadata','a:4:{s:5:\"width\";i:443;s:6:\"height\";i:332;s:4:\"file\";s:18:\"2018/10/image1.bmp\";s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
/*!40000 ALTER TABLE `wp_postmeta` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_posts`
--

DROP TABLE IF EXISTS `wp_posts`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_posts` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `post_author` bigint(20) unsigned NOT NULL DEFAULT '0',
  `post_date` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `post_date_gmt` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `post_content` longtext COLLATE utf8mb4_unicode_ci NOT NULL,
  `post_title` text COLLATE utf8mb4_unicode_ci NOT NULL,
  `post_excerpt` text COLLATE utf8mb4_unicode_ci NOT NULL,
  `post_status` varchar(20) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT 'publish',
  `comment_status` varchar(20) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT 'open',
  `ping_status` varchar(20) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT 'open',
  `post_password` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `post_name` varchar(200) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `to_ping` text COLLATE utf8mb4_unicode_ci NOT NULL,
  `pinged` text COLLATE utf8mb4_unicode_ci NOT NULL,
  `post_modified` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `post_modified_gmt` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `post_content_filtered` longtext COLLATE utf8mb4_unicode_ci NOT NULL,
  `post_parent` bigint(20) unsigned NOT NULL DEFAULT '0',
  `guid` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `menu_order` int(11) NOT NULL DEFAULT '0',
  `post_type` varchar(20) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT 'post',
  `post_mime_type` varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `comment_count` bigint(20) NOT NULL DEFAULT '0',
  PRIMARY KEY (`ID`),
  KEY `post_name` (`post_name`(191)),
  KEY `type_status_date` (`post_type`,`post_status`,`post_date`,`ID`),
  KEY `post_parent` (`post_parent`),
  KEY `post_author` (`post_author`)
) ENGINE=InnoDB AUTO_INCREMENT=171 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_posts`
--

LOCK TABLES `wp_posts` WRITE;
/*!40000 ALTER TABLE `wp_posts` DISABLE KEYS */;
INSERT INTO `wp_posts` VALUES (2,1,'2018-10-08 06:57:17','2018-10-08 06:57:17','This is an example page. It\'s different from a blog post because it will stay in one place and will show up in your site navigation (in most themes). Most people start with an About page that introduces them to potential site visitors. It might say something like this:\r\n<blockquote>Hi there! I\'m a bike messenger by day, aspiring actor by night, and this is my website. I live in Los Angeles, have a great dog named Jack, and I like piña coladas. (And gettin\' caught in the rain.)</blockquote>\r\n...or something like this:\r\n<blockquote>The XYZ Doohickey Company was founded in 1971, and has been providing quality doohickeys to the public ever since. Located in Gotham City, XYZ employs over 2,000 people and does all kinds of awesome things for the Gotham community.</blockquote>\r\nAs a new WordPress user, you should go to <a href=\"http://45.77.202.181/wp-admin/\">your dashboard</a> to delete this page and create new pages for your content. Have fun!','Sample Page','','trash','closed','open','','sample-page__trashed','','','2018-10-09 08:43:46','2018-10-09 08:43:46','',29,'http://45.77.202.181/?page_id=2',0,'page','',0),(3,1,'2018-10-08 06:57:17','2018-10-08 06:57:17','<h2>Who we are</h2><p>Our website address is: http://45.77.202.181.</p><h2>What personal data we collect and why we collect it</h2><h3>Comments</h3><p>When visitors leave comments on the site we collect the data shown in the comments form, and also the visitor&#8217;s IP address and browser user agent string to help spam detection.</p><p>An anonymized string created from your email address (also called a hash) may be provided to the Gravatar service to see if you are using it. The Gravatar service privacy policy is available here: https://automattic.com/privacy/. After approval of your comment, your profile picture is visible to the public in the context of your comment.</p><h3>Media</h3><p>If you upload images to the website, you should avoid uploading images with embedded location data (EXIF GPS) included. Visitors to the website can download and extract any location data from images on the website.</p><h3>Contact forms</h3><h3>Cookies</h3><p>If you leave a comment on our site you may opt-in to saving your name, email address and website in cookies. These are for your convenience so that you do not have to fill in your details again when you leave another comment. These cookies will last for one year.</p><p>If you have an account and you log in to this site, we will set a temporary cookie to determine if your browser accepts cookies. This cookie contains no personal data and is discarded when you close your browser.</p><p>When you log in, we will also set up several cookies to save your login information and your screen display choices. Login cookies last for two days, and screen options cookies last for a year. If you select &quot;Remember Me&quot;, your login will persist for two weeks. If you log out of your account, the login cookies will be removed.</p><p>If you edit or publish an article, an additional cookie will be saved in your browser. This cookie includes no personal data and simply indicates the post ID of the article you just edited. It expires after 1 day.</p><h3>Embedded content from other websites</h3><p>Articles on this site may include embedded content (e.g. videos, images, articles, etc.). Embedded content from other websites behaves in the exact same way as if the visitor has visited the other website.</p><p>These websites may collect data about you, use cookies, embed additional third-party tracking, and monitor your interaction with that embedded content, including tracking your interaction with the embedded content if you have an account and are logged in to that website.</p><h3>Analytics</h3><h2>Who we share your data with</h2><h2>How long we retain your data</h2><p>If you leave a comment, the comment and its metadata are retained indefinitely. This is so we can recognize and approve any follow-up comments automatically instead of holding them in a moderation queue.</p><p>For users that register on our website (if any), we also store the personal information they provide in their user profile. All users can see, edit, or delete their personal information at any time (except they cannot change their username). Website administrators can also see and edit that information.</p><h2>What rights you have over your data</h2><p>If you have an account on this site, or have left comments, you can request to receive an exported file of the personal data we hold about you, including any data you have provided to us. You can also request that we erase any personal data we hold about you. This does not include any data we are obliged to keep for administrative, legal, or security purposes.</p><h2>Where we send your data</h2><p>Visitor comments may be checked through an automated spam detection service.</p><h2>Your contact information</h2><h2>Additional information</h2><h3>How we protect your data</h3><h3>What data breach procedures we have in place</h3><h3>What third parties we receive data from</h3><h3>What automated decision making and/or profiling we do with user data</h3><h3>Industry regulatory disclosure requirements</h3>','Privacy Policy','','trash','closed','open','','privacy-policy__trashed','','','2018-10-09 08:43:42','2018-10-09 08:43:42','',0,'http://45.77.202.181/?page_id=3',0,'page','',0),(4,1,'2018-10-08 07:10:37','0000-00-00 00:00:00','','Auto Draft','','auto-draft','open','open','','','','','2018-10-08 07:10:37','0000-00-00 00:00:00','',0,'http://45.77.202.181/?p=4',0,'post','',0),(5,1,'2018-10-08 07:28:29','0000-00-00 00:00:00','Welcome to your site! This is your homepage, which is what most visitors will see when they come to your site for the first time.','Home','','auto-draft','closed','closed','','','','','2018-10-08 07:28:29','0000-00-00 00:00:00','',0,'http://45.77.202.181/?page_id=5',0,'page','',0),(6,1,'2018-10-08 07:28:49','0000-00-00 00:00:00','You might be an artist who would like to introduce yourself and your work here or maybe you&rsquo;re a business with a mission to describe.','About','','auto-draft','closed','closed','','','','','2018-10-08 07:28:49','0000-00-00 00:00:00','',0,'http://45.77.202.181/?page_id=6',0,'page','',0),(7,1,'2018-10-08 07:40:22','2018-10-08 07:40:22','Welcome to your site! This is your homepage, which is what most visitors will see when they come to your site for the first time.','Home','','publish','closed','closed','','home','','','2018-10-08 07:40:22','2018-10-08 07:40:22','',0,'http://45.77.202.181/?page_id=7',0,'page','',0),(8,1,'2018-10-08 07:40:22','2018-10-08 07:40:22','This is a blog site build for share something.','About','','publish','closed','closed','','about','','','2018-10-09 09:24:30','2018-10-09 09:24:30','',0,'http://45.77.202.181/?page_id=8',0,'page','',0),(9,1,'2018-10-08 07:40:22','2018-10-08 07:40:22','Please reply back to bxp0805@163.com for queries/concerns.','Contact','','publish','closed','closed','','contact','','','2018-10-09 09:21:59','2018-10-09 09:21:59','',0,'http://45.77.202.181/?page_id=9',0,'page','',0),(10,1,'2018-10-08 07:40:22','2018-10-08 07:40:22','','Blog','','trash','closed','closed','','blog__trashed','','','2018-10-09 08:43:35','2018-10-09 08:43:35','',0,'http://45.77.202.181/?page_id=10',0,'page','',0),(11,1,'2018-10-08 07:40:22','2018-10-08 07:40:22','This is an example of a homepage section. Homepage sections can be any page other than the homepage itself, including the page that shows your latest blog posts.','A homepage section','','trash','closed','closed','','a-homepage-section__trashed','','','2018-10-09 08:43:27','2018-10-09 08:43:27','',0,'http://45.77.202.181/?page_id=11',0,'page','',0),(12,1,'2018-10-08 07:40:22','2018-10-08 07:40:22','{\n    \"widget_text[2]\": {\n        \"starter_content\": true,\n        \"value\": {\n            \"encoded_serialized_instance\": \"YTo0OntzOjU6InRpdGxlIjtzOjc6IkZpbmQgVXMiO3M6NDoidGV4dCI7czoxNjg6IjxzdHJvbmc+QWRkcmVzczwvc3Ryb25nPgoxMjMgTWFpbiBTdHJlZXQKTmV3IFlvcmssIE5ZIDEwMDAxCgo8c3Ryb25nPkhvdXJzPC9zdHJvbmc+Ck1vbmRheSZtZGFzaDtGcmlkYXk6IDk6MDBBTSZuZGFzaDs1OjAwUE0KU2F0dXJkYXkgJmFtcDsgU3VuZGF5OiAxMTowMEFNJm5kYXNoOzM6MDBQTSI7czo2OiJmaWx0ZXIiO2I6MTtzOjY6InZpc3VhbCI7YjoxO30=\",\n            \"title\": \"Find Us\",\n            \"is_widget_customizer_js_value\": true,\n            \"instance_hash_key\": \"907231bb8f9357c1e220c619a42345f0\"\n        },\n        \"type\": \"option\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-10-08 07:39:31\"\n    },\n    \"widget_search[3]\": {\n        \"starter_content\": true,\n        \"value\": {\n            \"encoded_serialized_instance\": \"YToxOntzOjU6InRpdGxlIjtzOjY6IlNlYXJjaCI7fQ==\",\n            \"title\": \"Search\",\n            \"is_widget_customizer_js_value\": true,\n            \"instance_hash_key\": \"1200422745016fd31a304804b9d33c83\"\n        },\n        \"type\": \"option\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-10-08 07:39:31\"\n    },\n    \"widget_text[3]\": {\n        \"starter_content\": true,\n        \"value\": {\n            \"encoded_serialized_instance\": \"YTo0OntzOjU6InRpdGxlIjtzOjE1OiJBYm91dCBUaGlzIFNpdGUiO3M6NDoidGV4dCI7czo4NToiVGhpcyBtYXkgYmUgYSBnb29kIHBsYWNlIHRvIGludHJvZHVjZSB5b3Vyc2VsZiBhbmQgeW91ciBzaXRlIG9yIGluY2x1ZGUgc29tZSBjcmVkaXRzLiI7czo2OiJmaWx0ZXIiO2I6MTtzOjY6InZpc3VhbCI7YjoxO30=\",\n            \"title\": \"About This Site\",\n            \"is_widget_customizer_js_value\": true,\n            \"instance_hash_key\": \"de246e2fb9c2c2d5196e139ab91e800b\"\n        },\n        \"type\": \"option\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-10-08 07:39:31\"\n    },\n    \"sidebars_widgets[sidebar-1]\": {\n        \"starter_content\": true,\n        \"value\": [\n            \"text-2\",\n            \"search-3\",\n            \"text-3\"\n        ],\n        \"type\": \"option\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-10-08 07:39:31\"\n    },\n    \"widget_text[4]\": {\n        \"starter_content\": true,\n        \"value\": {\n            \"encoded_serialized_instance\": \"YTo0OntzOjU6InRpdGxlIjtzOjc6IkZpbmQgVXMiO3M6NDoidGV4dCI7czoxNjg6IjxzdHJvbmc+QWRkcmVzczwvc3Ryb25nPgoxMjMgTWFpbiBTdHJlZXQKTmV3IFlvcmssIE5ZIDEwMDAxCgo8c3Ryb25nPkhvdXJzPC9zdHJvbmc+Ck1vbmRheSZtZGFzaDtGcmlkYXk6IDk6MDBBTSZuZGFzaDs1OjAwUE0KU2F0dXJkYXkgJmFtcDsgU3VuZGF5OiAxMTowMEFNJm5kYXNoOzM6MDBQTSI7czo2OiJmaWx0ZXIiO2I6MTtzOjY6InZpc3VhbCI7YjoxO30=\",\n            \"title\": \"Find Us\",\n            \"is_widget_customizer_js_value\": true,\n            \"instance_hash_key\": \"907231bb8f9357c1e220c619a42345f0\"\n        },\n        \"type\": \"option\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-10-08 07:39:31\"\n    },\n    \"sidebars_widgets[sidebar-2]\": {\n        \"starter_content\": true,\n        \"value\": [\n            \"text-4\"\n        ],\n        \"type\": \"option\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-10-08 07:39:31\"\n    },\n    \"widget_text[5]\": {\n        \"starter_content\": true,\n        \"value\": {\n            \"encoded_serialized_instance\": \"YTo0OntzOjU6InRpdGxlIjtzOjE1OiJBYm91dCBUaGlzIFNpdGUiO3M6NDoidGV4dCI7czo4NToiVGhpcyBtYXkgYmUgYSBnb29kIHBsYWNlIHRvIGludHJvZHVjZSB5b3Vyc2VsZiBhbmQgeW91ciBzaXRlIG9yIGluY2x1ZGUgc29tZSBjcmVkaXRzLiI7czo2OiJmaWx0ZXIiO2I6MTtzOjY6InZpc3VhbCI7YjoxO30=\",\n            \"title\": \"About This Site\",\n            \"is_widget_customizer_js_value\": true,\n            \"instance_hash_key\": \"de246e2fb9c2c2d5196e139ab91e800b\"\n        },\n        \"type\": \"option\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-10-08 07:39:31\"\n    },\n    \"widget_search[4]\": {\n        \"starter_content\": true,\n        \"value\": {\n            \"encoded_serialized_instance\": \"YToxOntzOjU6InRpdGxlIjtzOjY6IlNlYXJjaCI7fQ==\",\n            \"title\": \"Search\",\n            \"is_widget_customizer_js_value\": true,\n            \"instance_hash_key\": \"1200422745016fd31a304804b9d33c83\"\n        },\n        \"type\": \"option\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-10-08 07:39:31\"\n    },\n    \"sidebars_widgets[sidebar-3]\": {\n        \"starter_content\": true,\n        \"value\": [\n            \"text-5\",\n            \"search-4\"\n        ],\n        \"type\": \"option\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-10-08 07:39:31\"\n    },\n    \"nav_menus_created_posts\": {\n        \"starter_content\": true,\n        \"value\": [\n            7,\n            8,\n            9,\n            10,\n            11\n        ],\n        \"type\": \"option\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-10-08 07:39:31\"\n    },\n    \"nav_menu[-1]\": {\n        \"value\": {\n            \"name\": \"Top Menu\",\n            \"description\": \"\",\n            \"parent\": 0,\n            \"auto_add\": false\n        },\n        \"type\": \"nav_menu\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-10-08 07:40:22\"\n    },\n    \"nav_menu_item[-1]\": {\n        \"value\": {\n            \"object_id\": 0,\n            \"object\": \"\",\n            \"menu_item_parent\": 0,\n            \"position\": 0,\n            \"type\": \"custom\",\n            \"title\": \"Home\",\n            \"url\": \"http://45.77.202.181/\",\n            \"target\": \"\",\n            \"attr_title\": \"\",\n            \"description\": \"\",\n            \"classes\": \"\",\n            \"xfn\": \"\",\n            \"status\": \"publish\",\n            \"original_title\": \"\",\n            \"nav_menu_term_id\": -1,\n            \"_invalid\": false,\n            \"type_label\": \"Custom Link\"\n        },\n        \"type\": \"nav_menu_item\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-10-08 07:40:22\"\n    },\n    \"nav_menu_item[-2]\": {\n        \"value\": {\n            \"object_id\": 8,\n            \"object\": \"page\",\n            \"menu_item_parent\": 0,\n            \"position\": 1,\n            \"type\": \"post_type\",\n            \"title\": \"About\",\n            \"url\": \"\",\n            \"target\": \"\",\n            \"attr_title\": \"\",\n            \"description\": \"\",\n            \"classes\": \"\",\n            \"xfn\": \"\",\n            \"status\": \"publish\",\n            \"original_title\": \"About\",\n            \"nav_menu_term_id\": -1,\n            \"_invalid\": false,\n            \"type_label\": \"Page\"\n        },\n        \"type\": \"nav_menu_item\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-10-08 07:40:22\"\n    },\n    \"nav_menu_item[-3]\": {\n        \"value\": {\n            \"object_id\": 10,\n            \"object\": \"page\",\n            \"menu_item_parent\": 0,\n            \"position\": 2,\n            \"type\": \"post_type\",\n            \"title\": \"Blog\",\n            \"url\": \"\",\n            \"target\": \"\",\n            \"attr_title\": \"\",\n            \"description\": \"\",\n            \"classes\": \"\",\n            \"xfn\": \"\",\n            \"status\": \"publish\",\n            \"original_title\": \"Blog\",\n            \"nav_menu_term_id\": -1,\n            \"_invalid\": false,\n            \"type_label\": \"Page\"\n        },\n        \"type\": \"nav_menu_item\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-10-08 07:40:22\"\n    },\n    \"nav_menu_item[-4]\": {\n        \"value\": {\n            \"object_id\": 9,\n            \"object\": \"page\",\n            \"menu_item_parent\": 0,\n            \"position\": 3,\n            \"type\": \"post_type\",\n            \"title\": \"Contact\",\n            \"url\": \"\",\n            \"target\": \"\",\n            \"attr_title\": \"\",\n            \"description\": \"\",\n            \"classes\": \"\",\n            \"xfn\": \"\",\n            \"status\": \"publish\",\n            \"original_title\": \"Contact\",\n            \"nav_menu_term_id\": -1,\n            \"_invalid\": false,\n            \"type_label\": \"Page\"\n        },\n        \"type\": \"nav_menu_item\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-10-08 07:40:22\"\n    },\n    \"twentyseventeen::nav_menu_locations[top]\": {\n        \"starter_content\": true,\n        \"value\": -1,\n        \"type\": \"theme_mod\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-10-08 07:39:31\"\n    },\n    \"nav_menu[-5]\": {\n        \"value\": {\n            \"name\": \"Social Links Menu\",\n            \"description\": \"\",\n            \"parent\": 0,\n            \"auto_add\": false\n        },\n        \"type\": \"nav_menu\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-10-08 07:40:22\"\n    },\n    \"nav_menu_item[-5]\": {\n        \"value\": {\n            \"object_id\": 0,\n            \"object\": \"\",\n            \"menu_item_parent\": 0,\n            \"position\": 0,\n            \"type\": \"custom\",\n            \"title\": \"Yelp\",\n            \"url\": \"https://www.yelp.com\",\n            \"target\": \"\",\n            \"attr_title\": \"\",\n            \"description\": \"\",\n            \"classes\": \"\",\n            \"xfn\": \"\",\n            \"status\": \"publish\",\n            \"original_title\": \"\",\n            \"nav_menu_term_id\": -5,\n            \"_invalid\": false,\n            \"type_label\": \"Custom Link\"\n        },\n        \"type\": \"nav_menu_item\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-10-08 07:40:22\"\n    },\n    \"nav_menu_item[-6]\": {\n        \"value\": {\n            \"object_id\": 0,\n            \"object\": \"\",\n            \"menu_item_parent\": 0,\n            \"position\": 1,\n            \"type\": \"custom\",\n            \"title\": \"Facebook\",\n            \"url\": \"https://www.facebook.com/wordpress\",\n            \"target\": \"\",\n            \"attr_title\": \"\",\n            \"description\": \"\",\n            \"classes\": \"\",\n            \"xfn\": \"\",\n            \"status\": \"publish\",\n            \"original_title\": \"\",\n            \"nav_menu_term_id\": -5,\n            \"_invalid\": false,\n            \"type_label\": \"Custom Link\"\n        },\n        \"type\": \"nav_menu_item\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-10-08 07:40:22\"\n    },\n    \"nav_menu_item[-7]\": {\n        \"value\": {\n            \"object_id\": 0,\n            \"object\": \"\",\n            \"menu_item_parent\": 0,\n            \"position\": 2,\n            \"type\": \"custom\",\n            \"title\": \"Twitter\",\n            \"url\": \"https://twitter.com/wordpress\",\n            \"target\": \"\",\n            \"attr_title\": \"\",\n            \"description\": \"\",\n            \"classes\": \"\",\n            \"xfn\": \"\",\n            \"status\": \"publish\",\n            \"original_title\": \"\",\n            \"nav_menu_term_id\": -5,\n            \"_invalid\": false,\n            \"type_label\": \"Custom Link\"\n        },\n        \"type\": \"nav_menu_item\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-10-08 07:40:22\"\n    },\n    \"nav_menu_item[-8]\": {\n        \"value\": {\n            \"object_id\": 0,\n            \"object\": \"\",\n            \"menu_item_parent\": 0,\n            \"position\": 3,\n            \"type\": \"custom\",\n            \"title\": \"Instagram\",\n            \"url\": \"https://www.instagram.com/explore/tags/wordcamp/\",\n            \"target\": \"\",\n            \"attr_title\": \"\",\n            \"description\": \"\",\n            \"classes\": \"\",\n            \"xfn\": \"\",\n            \"status\": \"publish\",\n            \"original_title\": \"\",\n            \"nav_menu_term_id\": -5,\n            \"_invalid\": false,\n            \"type_label\": \"Custom Link\"\n        },\n        \"type\": \"nav_menu_item\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-10-08 07:40:22\"\n    },\n    \"nav_menu_item[-9]\": {\n        \"value\": {\n            \"object_id\": 0,\n            \"object\": \"\",\n            \"menu_item_parent\": 0,\n            \"position\": 4,\n            \"type\": \"custom\",\n            \"title\": \"Email\",\n            \"url\": \"mailto:wordpress@example.com\",\n            \"target\": \"\",\n            \"attr_title\": \"\",\n            \"description\": \"\",\n            \"classes\": \"\",\n            \"xfn\": \"\",\n            \"status\": \"publish\",\n            \"original_title\": \"\",\n            \"nav_menu_term_id\": -5,\n            \"_invalid\": false,\n            \"type_label\": \"Custom Link\"\n        },\n        \"type\": \"nav_menu_item\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-10-08 07:40:22\"\n    },\n    \"twentyseventeen::nav_menu_locations[social]\": {\n        \"starter_content\": true,\n        \"value\": -5,\n        \"type\": \"theme_mod\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-10-08 07:39:31\"\n    },\n    \"show_on_front\": {\n        \"starter_content\": true,\n        \"value\": \"page\",\n        \"type\": \"option\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-10-08 07:39:31\"\n    },\n    \"page_on_front\": {\n        \"starter_content\": true,\n        \"value\": 7,\n        \"type\": \"option\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-10-08 07:39:31\"\n    },\n    \"page_for_posts\": {\n        \"starter_content\": true,\n        \"value\": 10,\n        \"type\": \"option\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-10-08 07:39:31\"\n    },\n    \"twentyseventeen::panel_1\": {\n        \"starter_content\": true,\n        \"value\": 11,\n        \"type\": \"theme_mod\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-10-08 07:39:31\"\n    },\n    \"twentyseventeen::panel_2\": {\n        \"starter_content\": true,\n        \"value\": 8,\n        \"type\": \"theme_mod\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-10-08 07:39:31\"\n    },\n    \"twentyseventeen::panel_3\": {\n        \"starter_content\": true,\n        \"value\": 10,\n        \"type\": \"theme_mod\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-10-08 07:39:31\"\n    },\n    \"twentyseventeen::panel_4\": {\n        \"starter_content\": true,\n        \"value\": 9,\n        \"type\": \"theme_mod\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-10-08 07:39:31\"\n    },\n    \"blogdescription\": {\n        \"value\": \"keep life easier\",\n        \"type\": \"option\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-10-08 07:40:22\"\n    }\n}','','','trash','closed','closed','','2148f89d-6839-4c06-821b-b7897c3e3000','','','2018-10-08 07:40:22','2018-10-08 07:40:22','',0,'http://45.77.202.181/?p=12',0,'customize_changeset','',0),(13,1,'2018-10-08 07:40:22','2018-10-08 07:40:22','Welcome to your site! This is your homepage, which is what most visitors will see when they come to your site for the first time.','Home','','inherit','closed','closed','','7-revision-v1','','','2018-10-08 07:40:22','2018-10-08 07:40:22','',7,'http://45.77.202.181/index.php/2018/10/08/7-revision-v1/',0,'revision','',0),(14,1,'2018-10-08 07:40:22','2018-10-08 07:40:22','You might be an artist who would like to introduce yourself and your work here or maybe you&rsquo;re a business with a mission to describe.','About','','inherit','closed','closed','','8-revision-v1','','','2018-10-08 07:40:22','2018-10-08 07:40:22','',8,'http://45.77.202.181/index.php/2018/10/08/8-revision-v1/',0,'revision','',0),(15,1,'2018-10-08 07:40:22','2018-10-08 07:40:22','This is a page with some basic contact information, such as an address and phone number. You might also try a plugin to add a contact form.','Contact','','inherit','closed','closed','','9-revision-v1','','','2018-10-08 07:40:22','2018-10-08 07:40:22','',9,'http://45.77.202.181/index.php/2018/10/08/9-revision-v1/',0,'revision','',0),(16,1,'2018-10-08 07:40:22','2018-10-08 07:40:22','','Blog','','inherit','closed','closed','','10-revision-v1','','','2018-10-08 07:40:22','2018-10-08 07:40:22','',10,'http://45.77.202.181/index.php/2018/10/08/10-revision-v1/',0,'revision','',0),(17,1,'2018-10-08 07:40:22','2018-10-08 07:40:22','This is an example of a homepage section. Homepage sections can be any page other than the homepage itself, including the page that shows your latest blog posts.','A homepage section','','inherit','closed','closed','','11-revision-v1','','','2018-10-08 07:40:22','2018-10-08 07:40:22','',11,'http://45.77.202.181/index.php/2018/10/08/11-revision-v1/',0,'revision','',0),(18,1,'2018-10-08 07:40:22','2018-10-08 07:40:22','','Home','','publish','closed','closed','','home','','','2018-10-08 08:29:02','2018-10-08 08:29:02','',0,'http://45.77.202.181/index.php/2018/10/08/home/',1,'nav_menu_item','',0),(19,1,'2018-10-08 07:40:22','2018-10-08 07:40:22',' ','','','publish','closed','closed','','19','','','2018-10-08 08:29:02','2018-10-08 08:29:02','',0,'http://45.77.202.181/index.php/2018/10/08/19/',2,'nav_menu_item','',0),(21,1,'2018-10-08 07:40:22','2018-10-08 07:40:22',' ','','','publish','closed','closed','','21','','','2018-10-08 08:29:02','2018-10-08 08:29:02','',0,'http://45.77.202.181/index.php/2018/10/08/21/',4,'nav_menu_item','',0),(26,1,'2018-10-08 07:40:22','2018-10-08 07:40:22','','Email','','publish','closed','closed','','email','','','2018-10-09 06:25:55','2018-10-09 06:25:55','',0,'http://45.77.202.181/index.php/2018/10/08/email/',1,'nav_menu_item','',0),(27,1,'2018-10-08 07:41:49','2018-10-08 07:41:49','this is a test page','test page','','trash','closed','closed','','test-page__trashed','','','2018-10-08 07:46:50','2018-10-08 07:46:50','',10,'http://45.77.202.181/?page_id=27',0,'page','',0),(28,1,'2018-10-08 07:41:49','2018-10-08 07:41:49','this is a test page','test page','','inherit','closed','closed','','27-revision-v1','','','2018-10-08 07:41:49','2018-10-08 07:41:49','',27,'http://45.77.202.181/index.php/2018/10/08/27-revision-v1/',0,'revision','',0),(29,1,'2018-10-08 07:48:09','2018-10-08 07:48:09','this is a test page','test page','','trash','closed','closed','','test-page__trashed','','','2018-10-09 08:43:49','2018-10-09 08:43:49','',0,'http://45.77.202.181/?page_id=29',0,'page','',0),(30,1,'2018-10-08 07:48:09','2018-10-08 07:48:09','this is a test page','test page','','inherit','closed','closed','','29-revision-v1','','','2018-10-08 07:48:09','2018-10-08 07:48:09','',29,'http://45.77.202.181/index.php/2018/10/08/29-revision-v1/',0,'revision','',0),(33,1,'2018-10-08 08:23:53','2018-10-08 08:23:53','This is an example page. It\'s different from a blog post because it will stay in one place and will show up in your site navigation (in most themes). Most people start with an About page that introduces them to potential site visitors. It might say something like this:\r\n<blockquote>Hi there! I\'m a bike messenger by day, aspiring actor by night, and this is my website. I live in Los Angeles, have a great dog named Jack, and I like piña coladas. (And gettin\' caught in the rain.)</blockquote>\r\n...or something like this:\r\n<blockquote>The XYZ Doohickey Company was founded in 1971, and has been providing quality doohickeys to the public ever since. Located in Gotham City, XYZ employs over 2,000 people and does all kinds of awesome things for the Gotham community.</blockquote>\r\nAs a new WordPress user, you should go to <a href=\"http://45.77.202.181/wp-admin/\">your dashboard</a> to delete this page and create new pages for your content. Have fun!','Sample Page','','inherit','closed','closed','','2-revision-v1','','','2018-10-08 08:23:53','2018-10-08 08:23:53','',2,'http://45.77.202.181/index.php/2018/10/08/2-revision-v1/',0,'revision','',0),(40,1,'2018-10-09 02:04:14','2018-10-09 02:04:14','{\n    \"blogdescription\": {\n        \"value\": \"keep life easier~\",\n        \"type\": \"option\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-10-09 02:04:14\"\n    }\n}','','','trash','closed','closed','','fac78ce8-d0cd-4b92-97eb-bd6f418ec11e','','','2018-10-09 02:04:14','2018-10-09 02:04:14','',0,'http://45.77.202.181/index.php/2018/10/09/fac78ce8-d0cd-4b92-97eb-bd6f418ec11e/',0,'customize_changeset','',0),(41,1,'2018-10-09 05:10:04','2018-10-09 05:10:04','<h2 id=\"CompileCodeandrunonasik-1.background\">1.   background</h2>\r\n1.1 How to compile a application which can be run on LINSEE or ASIK?\r\n\r\n1.2 How can we found the header file or the lib path that application coupling?\r\n<h2 id=\"CompileCodeandrunonasik-2.Procedure\">2.   Procedure</h2>\r\nPlease follow me and you can do it\r\n\r\n2.1   First you need down the env code\r\n<p align=\"left\">the env script can help you to establish the prefix root. what’s the prefix root, I think it can be explained that a environment which contained all needed tools(e.g gcc), header files and libraries.</p>\r\n\r\n<div class=\"table-wrap\">\r\n<table class=\"confluenceTable\"><colgroup><col /></colgroup>\r\n<tbody>\r\n<tr>\r\n<td class=\"confluenceTd\">git clone <a href=\"ssh://xibo@gerrit.ext.net.nokia.com:29418/MN/5G/COMMON/env\" rel=\"nofollow\">ssh://xibo@gerrit.ext.net.nokia.com:29418/MN/5G/COMMON/env</a></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n2.2   Generate prefix root\r\n<p align=\"left\">For asik ,we can do that, The folder prefix_root_asik is our prefix root. Then, we need source it.</p>\r\n\r\n<div class=\"table-wrap\">\r\n<table class=\"confluenceTable\"><colgroup><col /></colgroup>\r\n<tbody>\r\n<tr>\r\n<td class=\"confluenceTd\">\r\n<p align=\"left\">./env/prefix-root-gen-script.d/asik-x86_64-ps_lfs prefix_root_asik</p>\r\n<p align=\"left\">source prefix_root_asik/environment-setup.sh</p>\r\n</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n<p align=\"left\">Ok , now the basic prefix root is down, but we found it is short of some header files and libraries such as boost header files. This is depend on what you need, so it is down by you project’s prepare_sdk script.</p>\r\n2.3   Prepare-sdk\r\n<p align=\"left\">Here we use syscom-proxy’s prepare_sdk script.</p>\r\n\r\n<div class=\"table-wrap\">\r\n<table class=\"confluenceTable\"><colgroup><col /></colgroup>\r\n<tbody>\r\n<tr>\r\n<td class=\"confluenceTd\">\r\n<p align=\"left\">goto <a class=\"external-link\" href=\"https://gerrit.ext.net.nokia.com/gerrit/#/admin/projects/MN/5G/COMMON/syscom-proxy\" rel=\"nofollow\">https://gerrit.ext.net.nokia.com/gerrit/#/admin/projects/MN/5G/COMMON/syscom-proxy</a> and git clone</p>\r\n<p align=\"left\">./syscom-proxy/buildscript/syscom-proxy/prepare_sdk.sh</p>\r\n</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n2.4   Compile you code\r\n<p align=\"left\">Now the prefix root is ok for compile you code.</p>\r\n\r\n<div class=\"table-wrap\">\r\n<table class=\"confluenceTable\"><colgroup><col /></colgroup>\r\n<tbody>\r\n<tr>\r\n<td class=\"confluenceTd\">\r\n<p align=\"left\">mkdir build</p>\r\n<p align=\"left\">cd build</p>\r\n<p align=\"left\">cmake ..</p>\r\n<p align=\"left\">make</p>\r\n</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n<h2 id=\"CompileCodeandrunonasik-3.down\">3.   down</h2>\r\n<p align=\"left\">now，you can run program on asik. Help yourself to enjoy it</p>','Compile Code and run on asik','','publish','open','open','','compile-code-and-run-on-asik','','','2018-10-10 01:49:33','2018-10-10 01:49:33','',0,'http://45.77.202.181/?p=41',0,'post','',0),(42,1,'2018-10-09 05:10:04','2018-10-09 05:10:04','<h2 id=\"CompileCodeandrunonasik-1.background\">1.   background</h2>\r\n1.1 How to compile a application which can be run on LINSEE or ASIK?\r\n\r\n1.2 How can we found the header file or the lib path that application coupling?\r\n<h2 id=\"CompileCodeandrunonasik-2.Procedure\">2.   Procedure</h2>\r\nPlease follow me and you can do it\r\n\r\n2.1   First you need down the env code\r\n<p align=\"left\">the env script can help you to establish the prefix root. what’s the prefix root, I think it can be explained that a environment which contained all needed tools(e.g gcc), header files and libraries.</p>\r\n\r\n<div class=\"table-wrap\">\r\n<table class=\"confluenceTable\"><colgroup><col /></colgroup>\r\n<tbody>\r\n<tr>\r\n<td class=\"confluenceTd\">git clone <a href=\"ssh://xibo@gerrit.ext.net.nokia.com:29418/MN/5G/COMMON/env\" rel=\"nofollow\">ssh://xibo@gerrit.ext.net.nokia.com:29418/MN/5G/COMMON/env</a></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n2.2   Generate prefix root\r\n<p align=\"left\">For asik ,we can do that, The folder prefix_root_asik is our prefix root. Then, we need source it.</p>\r\n\r\n<div class=\"table-wrap\">\r\n<table class=\"confluenceTable\"><colgroup><col /></colgroup>\r\n<tbody>\r\n<tr>\r\n<td class=\"confluenceTd\">\r\n<p align=\"left\">./env/prefix-root-gen-script.d/asik-x86_64-ps_lfs prefix_root_asik</p>\r\n<p align=\"left\">source prefix_root_asik/environment-setup.sh</p>\r\n</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n<p align=\"left\">Ok , now the basic prefix root is down, but we found it is short of some header files and libraries such as boost header files. This is depend on what you need, so it is down by you project’s prepare_sdk script.</p>\r\n2.3   Prepare-sdk\r\n<p align=\"left\">Here we use syscom-proxy’s prepare_sdk script.</p>\r\n\r\n<div class=\"table-wrap\">\r\n<table class=\"confluenceTable\"><colgroup><col /></colgroup>\r\n<tbody>\r\n<tr>\r\n<td class=\"confluenceTd\">\r\n<p align=\"left\">goto <a class=\"external-link\" href=\"https://gerrit.ext.net.nokia.com/gerrit/#/admin/projects/MN/5G/COMMON/syscom-proxy\" rel=\"nofollow\">https://gerrit.ext.net.nokia.com/gerrit/#/admin/projects/MN/5G/COMMON/syscom-proxy</a> and git clone</p>\r\n<p align=\"left\">./syscom-proxy/buildscript/syscom-proxy/prepare_sdk.sh</p>\r\n</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n2.4   Compile you code\r\n<p align=\"left\">Now the prefix root is ok for compile you code.</p>\r\n\r\n<div class=\"table-wrap\">\r\n<table class=\"confluenceTable\"><colgroup><col /></colgroup>\r\n<tbody>\r\n<tr>\r\n<td class=\"confluenceTd\">\r\n<p align=\"left\">mkdir build</p>\r\n<p align=\"left\">cd build</p>\r\n<p align=\"left\">cmake ..</p>\r\n<p align=\"left\">make</p>\r\n</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n<h2 id=\"CompileCodeandrunonasik-3.down\">3.   down</h2>\r\n<p align=\"left\">now，you can run program on asik. Help yourself to enjoy it</p>','Compile Code and run on asik','','inherit','closed','closed','','41-revision-v1','','','2018-10-09 05:10:04','2018-10-09 05:10:04','',41,'http://45.77.202.181/index.php/2018/10/09/41-revision-v1/',0,'revision','',0),(43,1,'2018-10-09 05:11:40','2018-10-09 05:11:40','关于平台库的头文件查找和动态库的依赖问题，我们是使用CMake中的FindPkgConfig实现的，\r\nFindPkgConfig支持linux的pkgconfig机制。可以使用pkg_check_modules帮助我们找到需要的文件和动态库路径\r\n当我们source一个prefix_root的environment-setup.sh时，会设定一个环境变量，比如：\r\nPKG_CONFIG_PATH=\r\n/var/fpwork/fish/prefix_root/asik-x86_64-ps_lfs/usr/share/pkgconfig:\r\n/var/fpwork/fish/prefix_root/asik-x86_64-ps_lfs/usr/lib/pkgconfig:\r\n/var/fpwork/fish/prefix_root/asik-x86_64-ps_lfs/toolchain/sysroots/core2-64-pc-linux-gnu/usr/lib64/pkgconfig\r\n于是当我们cmake中使用\r\npkg_check_modules(GLOBAL_ENV REQUIRED global-env)\r\npkg_check_modules(LIBCCS REQUIRED libccs)\r\n会在/var/fpwork/fish/prefix_root/asik-x86_64-ps_lfs/toolchain/sysroots/core2-64-pc-linux-gnu/usr/lib64/pkgconfig目录中找到libccs.pc和global-env.pc两个文件，里面包含了头文件和动态库的路径，如\r\nlibccs.pc里面有\r\nCflags:\r\n-I/var/fpwork/fish/prefix_root/asik-x86_64-ps_lfs/toolchain/sysroots/core2-64-pc-linux-gnu/usr/include/Platform_Env/CCS_ENV/MCU/Definitions\r\n-I/var/fpwork/fish/prefix_root/asik-x86_64-ps_lfs/toolchain/sysroots/core2-64-pc-linux-gnu/usr/include/Platform_Env/CCS_ENV/MCU/Messages\r\n-I/var/fpwork/fish/prefix_root/asik-x86_64-ps_lfs/toolchain/sysroots/core2-64-pc-linux-gnu/usr/include/Platform_Env/CCS_ENV/MCU/ServiceInterface\r\n-I/var/fpwork/fish/prefix_root/asik-x86_64-ps_lfs/toolchain/sysroots/core2-64-pc-linux-gnu/usr/include/Platform_Env/CCS_ENV/COMMON/Definitions\r\n-I/var/fpwork/fish/prefix_root/asik-x86_64-ps_lfs/toolchain/sysroots/core2-64-pc-linux-gnu/usr/include/Platform_Env/CCS_ENV/COMMON/Messages\r\n-I/var/fpwork/fish/prefix_root/asik-x86_64-ps_lfs/toolchain/sysroots/core2-64-pc-linux-gnu/usr/include/Platform_Env/CCS_ENV/COMMON/ServiceInterface\r\n-DCCS_LINUX -DLINUX_STACK -DCCS_LITTLE_ENDIAN\r\n库路径为：\r\nLibs: -L/var/fpwork/fish/prefix_root/asik-x86_64-ps_lfs/toolchain/sysroots/core2-64-pc-linux-gnu/usr/lib64 -lCCS\r\n\r\nglobal-env.pc里面包含了\r\nCflags:\r\n-I/var/fpwork/fish/prefix_root/asik-x86_64-ps_lfs/toolchain/sysroots/core2-64-pc-linux-gnu/usr/include/Global_Env/Messages\r\n-I/var/fpwork/fish/prefix_root/asik-x86_64-ps_lfs/toolchain/sysroots/core2-64-pc-linux-gnu/usr/include/Global_Env/Definitions','平台动态库和头文件的依赖','','publish','open','open','','%e5%b9%b3%e5%8f%b0%e5%8a%a8%e6%80%81%e5%ba%93%e5%92%8c%e5%a4%b4%e6%96%87%e4%bb%b6%e7%9a%84%e4%be%9d%e8%b5%96','','','2018-10-10 01:49:27','2018-10-10 01:49:27','',0,'http://45.77.202.181/?p=43',0,'post','',0),(44,1,'2018-10-09 05:11:09','2018-10-09 05:11:09','关于平台库的头文件查找和动态库的依赖问题，我们是使用CMake中的FindPkgConfig实现的，\r\nFindPkgConfig支持linux的pkgconfig机制。可以使用pkg_check_modules帮助我们找到需要的文件和动态库路径\r\n当我们source一个prefix_root的environment-setup.sh时，会设定一个环境变量，比如：\r\nPKG_CONFIG_PATH=\r\n/var/fpwork/fish/prefix_root/asik-x86_64-ps_lfs/usr/share/pkgconfig:\r\n/var/fpwork/fish/prefix_root/asik-x86_64-ps_lfs/usr/lib/pkgconfig:\r\n/var/fpwork/fish/prefix_root/asik-x86_64-ps_lfs/toolchain/sysroots/core2-64-pc-linux-gnu/usr/lib64/pkgconfig\r\n于是当我们cmake中使用\r\npkg_check_modules(GLOBAL_ENV REQUIRED global-env)\r\npkg_check_modules(LIBCCS REQUIRED libccs)\r\n会在/var/fpwork/fish/prefix_root/asik-x86_64-ps_lfs/toolchain/sysroots/core2-64-pc-linux-gnu/usr/lib64/pkgconfig目录中找到libccs.pc和global-env.pc两个文件，里面包含了头文件和动态库的路径，如\r\nlibccs.pc里面有\r\nCflags:\r\n-I/var/fpwork/fish/prefix_root/asik-x86_64-ps_lfs/toolchain/sysroots/core2-64-pc-linux-gnu/usr/include/Platform_Env/CCS_ENV/MCU/Definitions\r\n-I/var/fpwork/fish/prefix_root/asik-x86_64-ps_lfs/toolchain/sysroots/core2-64-pc-linux-gnu/usr/include/Platform_Env/CCS_ENV/MCU/Messages\r\n-I/var/fpwork/fish/prefix_root/asik-x86_64-ps_lfs/toolchain/sysroots/core2-64-pc-linux-gnu/usr/include/Platform_Env/CCS_ENV/MCU/ServiceInterface\r\n-I/var/fpwork/fish/prefix_root/asik-x86_64-ps_lfs/toolchain/sysroots/core2-64-pc-linux-gnu/usr/include/Platform_Env/CCS_ENV/COMMON/Definitions\r\n-I/var/fpwork/fish/prefix_root/asik-x86_64-ps_lfs/toolchain/sysroots/core2-64-pc-linux-gnu/usr/include/Platform_Env/CCS_ENV/COMMON/Messages\r\n-I/var/fpwork/fish/prefix_root/asik-x86_64-ps_lfs/toolchain/sysroots/core2-64-pc-linux-gnu/usr/include/Platform_Env/CCS_ENV/COMMON/ServiceInterface\r\n-DCCS_LINUX -DLINUX_STACK -DCCS_LITTLE_ENDIAN\r\n库路径为：\r\nLibs: -L/var/fpwork/fish/prefix_root/asik-x86_64-ps_lfs/toolchain/sysroots/core2-64-pc-linux-gnu/usr/lib64 -lCCS\r\n\r\nglobal-env.pc里面包含了\r\nCflags:\r\n-I/var/fpwork/fish/prefix_root/asik-x86_64-ps_lfs/toolchain/sysroots/core2-64-pc-linux-gnu/usr/include/Global_Env/Messages\r\n-I/var/fpwork/fish/prefix_root/asik-x86_64-ps_lfs/toolchain/sysroots/core2-64-pc-linux-gnu/usr/include/Global_Env/Definitions','平台动态库和头文件的依赖','','inherit','closed','closed','','43-revision-v1','','','2018-10-09 05:11:09','2018-10-09 05:11:09','',43,'http://45.77.202.181/index.php/2018/10/09/43-revision-v1/',0,'revision','',0),(45,1,'2018-10-09 05:12:11','0000-00-00 00:00:00','','自动草稿','','auto-draft','open','open','','','','','2018-10-09 05:12:11','0000-00-00 00:00:00','',0,'http://45.77.202.181/?p=45',0,'post','',0),(46,1,'2018-10-09 05:12:44','2018-10-09 05:12:44','一、库文件的搜索路径：\r\n\r\n1、在配置文件/etc/ld.so.conf中指定动态库搜索路径（需要添加其它库文件的路径，在文件的最后添加具体的路径即可 [ 如：/usr/local/lib ]，添加后保存退出，然后在命令行ldconfig\r\n\r\n2、通过环境变量LD_LIBRARY_PATH指定动态库搜索路径（当通过该环境变量指定多个动态库搜索路径时，路径之间用冒号\"：\"分隔）\r\n\r\n3、在编译目标代码时指定该程序的动态库搜索路径（还可以在编译目标代码时指定程序的动态库搜索路径。 这是通过gcc 的参数\"-Wl,-rpath,\"指定,当指定多个动态库搜索路径时，路径之间用冒号\"：\"分隔）\r\n\r\n4、默认的动态库搜索路径/lib\r\n\r\n5、默认的动态库搜索路径/usr/lib\r\n\r\n搜索的先后顺序是：\r\n\r\n1.编译目标代码时指定的动态库搜索路径；\r\n\r\n2.环境变量LD_LIBRARY_PATH指定的动态库搜索路径；\r\n\r\n3.配置文件/etc/ld.so.conf中指定的动态库搜索路径；\r\n\r\n4.默认的动态库搜索路径/lib；\r\n\r\n5.默认的动态库搜索路径/usr/lib。','Linux 动态库的搜索路径','','publish','open','open','','linux-%e5%8a%a8%e6%80%81%e5%ba%93%e7%9a%84%e6%90%9c%e7%b4%a2%e8%b7%af%e5%be%84','','','2018-10-10 01:49:20','2018-10-10 01:49:20','',0,'http://45.77.202.181/?p=46',0,'post','',0),(47,1,'2018-10-09 05:12:44','2018-10-09 05:12:44','一、库文件的搜索路径：\r\n\r\n1、在配置文件/etc/ld.so.conf中指定动态库搜索路径（需要添加其它库文件的路径，在文件的最后添加具体的路径即可 [ 如：/usr/local/lib ]，添加后保存退出，然后在命令行ldconfig\r\n\r\n2、通过环境变量LD_LIBRARY_PATH指定动态库搜索路径（当通过该环境变量指定多个动态库搜索路径时，路径之间用冒号\"：\"分隔）\r\n\r\n3、在编译目标代码时指定该程序的动态库搜索路径（还可以在编译目标代码时指定程序的动态库搜索路径。 这是通过gcc 的参数\"-Wl,-rpath,\"指定,当指定多个动态库搜索路径时，路径之间用冒号\"：\"分隔）\r\n\r\n4、默认的动态库搜索路径/lib\r\n\r\n5、默认的动态库搜索路径/usr/lib\r\n\r\n搜索的先后顺序是：\r\n\r\n1.编译目标代码时指定的动态库搜索路径；\r\n\r\n2.环境变量LD_LIBRARY_PATH指定的动态库搜索路径；\r\n\r\n3.配置文件/etc/ld.so.conf中指定的动态库搜索路径；\r\n\r\n4.默认的动态库搜索路径/lib；\r\n\r\n5.默认的动态库搜索路径/usr/lib。','Linux 动态库的搜索路径','','inherit','closed','closed','','46-revision-v1','','','2018-10-09 05:12:44','2018-10-09 05:12:44','',46,'http://45.77.202.181/index.php/2018/10/09/46-revision-v1/',0,'revision','',0),(48,1,'2018-10-09 05:13:13','2018-10-09 05:13:13','1.   变量使用\r\n使用set语句命令显示定义及赋值，使用${}使用，在if语句中，直接使用变量名\r\n\r\nset(var a;b;c) <=> set(var a b c) 定义变量为 a b c这样一个string list\r\n\r\nif(var)\r\n\r\nelse()\r\n\r\nendif(var)\r\n\r\n在cmake命令后面设定变量\r\n\r\ncmake命令中可以 cmake -DBUILD_SHARE_LIBS=OFF\r\n\r\n打印\r\n\r\nmessage\r\n\r\n2.   获取路径\r\n可以指定project(cm)\r\n\r\n获取编译路径\r\n\r\ncm_BINARY_DIR\r\n\r\nPROJECT_BINARY_DIR\r\n\r\nCMAKE_BINARY_DIR\r\n\r\n获取源文件路径\r\n\r\ncm_SOURCE_DIR\r\n\r\nPROJECT_SOURCE_DIR\r\n\r\nCMAKE_SOURCE_DIR\r\n\r\n3.   指定源文件\r\naux_source_directory(<dir> <var>)\r\n\r\n4.   指定目录\r\n指定头文件目录\r\n\r\ninclude_directories(${PROJECT_SOURCE_DIR}/libhello)\r\n\r\n指定链接库目录\r\n\r\nlink_directories(${PROJECT_SOURCE_DIR}/libhello)\r\n\r\n指定包含的子目录\r\n\r\nadd_subdirectory(hello)包含目录\r\n\r\n指定输出目录\r\n\r\nset(EXECUTABLE_OUTPUT_PATH ${PROJECT_BINARY_DIR}/bin)\r\n\r\nset(LIBRARY_OUTPUT_PATH ${PROJECT_BINARY_DIR}/lib)\r\n\r\n指定安装目录\r\n\r\nCMAKE_INSTALL_PREFIX\r\n\r\n5.   指定选项\r\n指定编译器\r\n\r\nset(CMAKE_CXX_COMPILER \"g++\")\r\n\r\n指定编译选项\r\n\r\nadd_definitions(_DDEBUG) 添加编译参禅\r\n\r\nCMAKE_CXX_FLAGS\r\n\r\nCMAKE_CXX_FLAGS_DEBUG\r\n\r\nCMAKE_CXX_FLAGS_RELEASE\r\n\r\nset_target_properties(muduo_base_cpp11 PROPERTIES COMPILE_FLAGS \"-std=c++0x\")\r\n\r\n指定链接选项\r\n\r\ntarget_link_libraries(hello libhello)\r\n\r\nlink_libraries(libhello)\r\n\r\n指定输出名\r\n\r\nset_target_properties(libhello PROPERTIES OUTPUT_NAME \"hello\")\r\n\r\n指定编译版本\r\n\r\nCMAKE_BUILD_TYPE  = Debug/Release\r\n\r\n6.   编译目标\r\n编译库\r\n\r\nadd_library(libhello SHARED/STATIC ${LIB_SRC})\r\n\r\n编译可执行文件\r\n\r\nadd_executable(hello ${APP_SRC})\r\n\r\n7.   安装目标\r\n安装库\r\n\r\nadd_library(HeadTool xxxxxxx)\r\n\r\ninstall(TARGETS HeadTool DESTINATION lib)\r\n\r\n安装头文件\r\n\r\nset(HEADERS FrameHead.h FrameHeadDescriptor.h)\r\n\r\ninstall(FILES ${HEADERS} DESTINATION include)\r\n\r\n8.   执行命令\r\nexecute_process(COMMAND protoc --proto_path=../ --cpp_out=../ addressbook.proto)','cmake学习笔记','','publish','open','open','','cmake%e5%ad%a6%e4%b9%a0%e7%ac%94%e8%ae%b0','','','2018-10-10 01:49:10','2018-10-10 01:49:10','',0,'http://45.77.202.181/?p=48',0,'post','',0),(49,1,'2018-10-09 05:13:13','2018-10-09 05:13:13','1.   变量使用\r\n使用set语句命令显示定义及赋值，使用${}使用，在if语句中，直接使用变量名\r\n\r\nset(var a;b;c) <=> set(var a b c) 定义变量为 a b c这样一个string list\r\n\r\nif(var)\r\n\r\nelse()\r\n\r\nendif(var)\r\n\r\n在cmake命令后面设定变量\r\n\r\ncmake命令中可以 cmake -DBUILD_SHARE_LIBS=OFF\r\n\r\n打印\r\n\r\nmessage\r\n\r\n2.   获取路径\r\n可以指定project(cm)\r\n\r\n获取编译路径\r\n\r\ncm_BINARY_DIR\r\n\r\nPROJECT_BINARY_DIR\r\n\r\nCMAKE_BINARY_DIR\r\n\r\n获取源文件路径\r\n\r\ncm_SOURCE_DIR\r\n\r\nPROJECT_SOURCE_DIR\r\n\r\nCMAKE_SOURCE_DIR\r\n\r\n3.   指定源文件\r\naux_source_directory(<dir> <var>)\r\n\r\n4.   指定目录\r\n指定头文件目录\r\n\r\ninclude_directories(${PROJECT_SOURCE_DIR}/libhello)\r\n\r\n指定链接库目录\r\n\r\nlink_directories(${PROJECT_SOURCE_DIR}/libhello)\r\n\r\n指定包含的子目录\r\n\r\nadd_subdirectory(hello)包含目录\r\n\r\n指定输出目录\r\n\r\nset(EXECUTABLE_OUTPUT_PATH ${PROJECT_BINARY_DIR}/bin)\r\n\r\nset(LIBRARY_OUTPUT_PATH ${PROJECT_BINARY_DIR}/lib)\r\n\r\n指定安装目录\r\n\r\nCMAKE_INSTALL_PREFIX\r\n\r\n5.   指定选项\r\n指定编译器\r\n\r\nset(CMAKE_CXX_COMPILER \"g++\")\r\n\r\n指定编译选项\r\n\r\nadd_definitions(_DDEBUG) 添加编译参禅\r\n\r\nCMAKE_CXX_FLAGS\r\n\r\nCMAKE_CXX_FLAGS_DEBUG\r\n\r\nCMAKE_CXX_FLAGS_RELEASE\r\n\r\nset_target_properties(muduo_base_cpp11 PROPERTIES COMPILE_FLAGS \"-std=c++0x\")\r\n\r\n指定链接选项\r\n\r\ntarget_link_libraries(hello libhello)\r\n\r\nlink_libraries(libhello)\r\n\r\n指定输出名\r\n\r\nset_target_properties(libhello PROPERTIES OUTPUT_NAME \"hello\")\r\n\r\n指定编译版本\r\n\r\nCMAKE_BUILD_TYPE  = Debug/Release\r\n\r\n6.   编译目标\r\n编译库\r\n\r\nadd_library(libhello SHARED/STATIC ${LIB_SRC})\r\n\r\n编译可执行文件\r\n\r\nadd_executable(hello ${APP_SRC})\r\n\r\n7.   安装目标\r\n安装库\r\n\r\nadd_library(HeadTool xxxxxxx)\r\n\r\ninstall(TARGETS HeadTool DESTINATION lib)\r\n\r\n安装头文件\r\n\r\nset(HEADERS FrameHead.h FrameHeadDescriptor.h)\r\n\r\ninstall(FILES ${HEADERS} DESTINATION include)\r\n\r\n8.   执行命令\r\nexecute_process(COMMAND protoc --proto_path=../ --cpp_out=../ addressbook.proto)','cmake学习笔记','','inherit','closed','closed','','48-revision-v1','','','2018-10-09 05:13:13','2018-10-09 05:13:13','',48,'http://45.77.202.181/index.php/2018/10/09/48-revision-v1/',0,'revision','',0),(50,1,'2018-10-09 05:13:44','2018-10-09 05:13:44','Git学习笔记\r\nTable of Contents\r\n\r\nGit学习笔记... 1\r\n\r\n1     配置... 1\r\n\r\n2     基本操作... 1\r\n\r\n2.1      提交... 1\r\n\r\n2.2      回退... 2\r\n\r\n2.3      其他... 2\r\n\r\n3     分支操作... 2\r\n\r\n3.1      本地... 2\r\n\r\n3.2      合并分支... 3\r\n\r\n \r\n\r\n \r\n\r\n1      配置\r\n1.1 本地配置用户\r\n\r\ngit config --global user.name prettybxp\r\n\r\ngit config --global user.email bxp0805@163.com\r\n\r\ngit config --global alias.co checkout\r\n\r\ngit config –list\r\n\r\n \r\n\r\n1.2 生成秘钥\r\n\r\nssh-keygen -t rsa -C email\r\n\r\n \r\n\r\n1.3 第一次建仓库\r\n\r\necho \"# baofish\" >> README.md\r\n\r\ngit init\r\n\r\ngit add README.md\r\n\r\ngit commit -m \"first commit\"\r\n\r\ngit remote add origin git@github.com:prettybxp/baofish.git\r\n\r\ngit push -u origin master\r\n\r\n \r\n\r\n1.4 克隆\r\n\r\ngit clone git@github.com:prettybxp/hello-world.git\r\n\r\n \r\n\r\n1.5 更新外部\r\n\r\ngit submodule update --init --recursive\r\n\r\n \r\n\r\n2      基本操作\r\n2.1    提交\r\n2.1.1工作区到stage区\r\n\r\ngit add filename\r\n\r\ngit add .\r\n\r\n2.1.2 stage到仓库\r\n\r\ngit commit -m “c1”\r\n\r\n2.1.3 删除未add过的文件\r\n\r\ngit clean –fd\r\n\r\n \r\n\r\n2.2    回退\r\n2.2.1 Stage到工作区\r\n\r\ngit checkout –- filename    //--不能少，少了就是切换版本了\r\n\r\n2.2.2 仓库到stage\r\n\r\ngit reset --hard HEAD^  // --hard参数可以同时恢复工作区\r\n\r\ngit reset --hard abc4e3d80d79\r\n\r\n \r\n\r\n2.3    其他\r\n2.3.1 比较\r\n\r\ngit diff filename\r\n\r\n2.3.2 查看日志\r\n\r\ngit log --graph --pretty=oneline --abbrev-commit\r\n\r\n--graph带图形显示，--pretty=oneline显示一行，--abbrev-commit 缩写\r\n\r\n2.3.3 查看状态\r\n\r\ngit status\r\n\r\n2.3.4 查看操作记录\r\n\r\ngit reflog\r\n\r\n2.3.5 远程操作\r\n\r\ngit remote add origin git@github.com:prettybxp/hello-world.git\r\n\r\ngit remote -v\r\n\r\ngit remote remove origin\r\n\r\n2.3.6推送\r\n\r\ngit push origin master\r\n\r\ngit push origin HEAD:refs/for/master\r\n\r\n2.3.7拉取\r\n\r\ngit pull\r\n\r\n2.3.8使用同一个commit id提交\r\n\r\ngit commit --amend\r\n\r\n \r\n\r\n3      分支操作\r\n3.1    本地\r\n3.1.1 查看分支\r\n\r\ngit branch -a\r\n\r\n3.1.2 删除分支\r\n\r\ngit branch -d dev\r\n\r\n3.1.3 创建+切换分支\r\n\r\ngit checkout -b dev\r\n\r\n3.1.4切换分支\r\n\r\ngit checkout dev\r\n\r\n切换分支钱缓存工作区\r\n\r\ngit stash \r\n\r\n查看工作区缓存\r\n\r\ngit stash list\r\n\r\n恢复工作区\r\n\r\ngit stash pop\r\n\r\n3.2    合并分支\r\n3.2.1 git merge dev\r\n\r\n并分支时，加上--no-ff参数就可以用普通模式合并，合并后的历史有分支，能看出来曾经做过合并，而fast forward合并就看不出来曾经做过合并\r\n\r\ngit merge --no-ff -m \"message\" dev\r\n\r\n3.2.2 合并过程可能有冲突\r\n\r\n冲突解决后可以再提交，解决冲突就是直接编辑文件，然后git add\r\n\r\n如果提交前，远程已经有跟新，要先git pull, 本地会自动产生一个merge动作，如果没有冲突则merge正常，如果有冲突，要先解决冲突，git add，在git commit\r\n\r\n3.2.3 git rebase\r\n\r\n上面提的分支合并都会有一个岔路，可以使用git rebase消除，将本地的提交作为patch 打到remote上，Rebase过程又可能有冲突，解决后git add一下，再使用git rebase --continue','git 学习笔记','','publish','open','open','','git-%e5%ad%a6%e4%b9%a0%e7%ac%94%e8%ae%b0','','','2018-10-10 01:49:03','2018-10-10 01:49:03','',0,'http://45.77.202.181/?p=50',0,'post','',0),(51,1,'2018-10-09 05:13:44','2018-10-09 05:13:44','Git学习笔记\r\nTable of Contents\r\n\r\nGit学习笔记... 1\r\n\r\n1     配置... 1\r\n\r\n2     基本操作... 1\r\n\r\n2.1      提交... 1\r\n\r\n2.2      回退... 2\r\n\r\n2.3      其他... 2\r\n\r\n3     分支操作... 2\r\n\r\n3.1      本地... 2\r\n\r\n3.2      合并分支... 3\r\n\r\n \r\n\r\n \r\n\r\n1      配置\r\n1.1 本地配置用户\r\n\r\ngit config --global user.name prettybxp\r\n\r\ngit config --global user.email bxp0805@163.com\r\n\r\ngit config --global alias.co checkout\r\n\r\ngit config –list\r\n\r\n \r\n\r\n1.2 生成秘钥\r\n\r\nssh-keygen -t rsa -C email\r\n\r\n \r\n\r\n1.3 第一次建仓库\r\n\r\necho \"# baofish\" >> README.md\r\n\r\ngit init\r\n\r\ngit add README.md\r\n\r\ngit commit -m \"first commit\"\r\n\r\ngit remote add origin git@github.com:prettybxp/baofish.git\r\n\r\ngit push -u origin master\r\n\r\n \r\n\r\n1.4 克隆\r\n\r\ngit clone git@github.com:prettybxp/hello-world.git\r\n\r\n \r\n\r\n1.5 更新外部\r\n\r\ngit submodule update --init --recursive\r\n\r\n \r\n\r\n2      基本操作\r\n2.1    提交\r\n2.1.1工作区到stage区\r\n\r\ngit add filename\r\n\r\ngit add .\r\n\r\n2.1.2 stage到仓库\r\n\r\ngit commit -m “c1”\r\n\r\n2.1.3 删除未add过的文件\r\n\r\ngit clean –fd\r\n\r\n \r\n\r\n2.2    回退\r\n2.2.1 Stage到工作区\r\n\r\ngit checkout –- filename    //--不能少，少了就是切换版本了\r\n\r\n2.2.2 仓库到stage\r\n\r\ngit reset --hard HEAD^  // --hard参数可以同时恢复工作区\r\n\r\ngit reset --hard abc4e3d80d79\r\n\r\n \r\n\r\n2.3    其他\r\n2.3.1 比较\r\n\r\ngit diff filename\r\n\r\n2.3.2 查看日志\r\n\r\ngit log --graph --pretty=oneline --abbrev-commit\r\n\r\n--graph带图形显示，--pretty=oneline显示一行，--abbrev-commit 缩写\r\n\r\n2.3.3 查看状态\r\n\r\ngit status\r\n\r\n2.3.4 查看操作记录\r\n\r\ngit reflog\r\n\r\n2.3.5 远程操作\r\n\r\ngit remote add origin git@github.com:prettybxp/hello-world.git\r\n\r\ngit remote -v\r\n\r\ngit remote remove origin\r\n\r\n2.3.6推送\r\n\r\ngit push origin master\r\n\r\ngit push origin HEAD:refs/for/master\r\n\r\n2.3.7拉取\r\n\r\ngit pull\r\n\r\n2.3.8使用同一个commit id提交\r\n\r\ngit commit --amend\r\n\r\n \r\n\r\n3      分支操作\r\n3.1    本地\r\n3.1.1 查看分支\r\n\r\ngit branch -a\r\n\r\n3.1.2 删除分支\r\n\r\ngit branch -d dev\r\n\r\n3.1.3 创建+切换分支\r\n\r\ngit checkout -b dev\r\n\r\n3.1.4切换分支\r\n\r\ngit checkout dev\r\n\r\n切换分支钱缓存工作区\r\n\r\ngit stash \r\n\r\n查看工作区缓存\r\n\r\ngit stash list\r\n\r\n恢复工作区\r\n\r\ngit stash pop\r\n\r\n3.2    合并分支\r\n3.2.1 git merge dev\r\n\r\n并分支时，加上--no-ff参数就可以用普通模式合并，合并后的历史有分支，能看出来曾经做过合并，而fast forward合并就看不出来曾经做过合并\r\n\r\ngit merge --no-ff -m \"message\" dev\r\n\r\n3.2.2 合并过程可能有冲突\r\n\r\n冲突解决后可以再提交，解决冲突就是直接编辑文件，然后git add\r\n\r\n如果提交前，远程已经有跟新，要先git pull, 本地会自动产生一个merge动作，如果没有冲突则merge正常，如果有冲突，要先解决冲突，git add，在git commit\r\n\r\n3.2.3 git rebase\r\n\r\n上面提的分支合并都会有一个岔路，可以使用git rebase消除，将本地的提交作为patch 打到remote上，Rebase过程又可能有冲突，解决后git add一下，再使用git rebase --continue','git 学习笔记','','inherit','closed','closed','','50-revision-v1','','','2018-10-09 05:13:44','2018-10-09 05:13:44','',50,'http://45.77.202.181/index.php/2018/10/09/50-revision-v1/',0,'revision','',0),(52,1,'2018-10-09 05:33:16','2018-10-09 05:33:16','不想比较细节，想直观看提交记录可以使用gitk，这里使用beyondcompare是为了比较细节\r\n\r\n<img class=\"alignleft size-full wp-image-54\" src=\"http://45.77.202.181/wp-content/uploads/2018/10/Capture2.png\" alt=\"\" width=\"1777\" height=\"1054\" />\r\n\r\n1、安装beyond compare3\r\n\r\nyum install LINSEE_beyondcompare_v41320814-4.1.3.20814-3.x86_64\r\n\r\nyum intall LINSEE_beyondcompare-license_v40-4.0-3.noarch\r\n\r\n2、修改git配置\r\n\r\nvi ~/.gitconfig\r\n\r\n增加\r\n\r\n[diff]\r\ntool = bc3\r\n[difftool]\r\nprompt = false\r\n\r\n3、使用\r\n\r\n比较当前目录所有文件修改记录\r\n\r\ngit difftool\r\n\r\n比较add但没有commit的\r\n\r\ngit difftool --cached\r\n\r\n已经commit的输入两个commmit号\r\n\r\ngit difftool 669497994 c9ed29afb\r\n\r\ngit difftool 669497994 c9ed29afb -- src/SeverityLevelParse.cpp\r\n\r\n<img class=\"alignleft size-full wp-image-57\" src=\"http://45.77.202.181/wp-content/uploads/2018/10/Capture.png\" alt=\"\" width=\"1876\" height=\"948\" />','EEcloud上使用git diff 图形化界面','','publish','open','open','','eecloud%e4%b8%8a%e4%bd%bf%e7%94%a8git-diff-%e5%9b%be%e5%bd%a2%e5%8c%96%e7%95%8c%e9%9d%a2','','','2018-10-09 05:35:43','2018-10-09 05:35:43','',0,'http://45.77.202.181/?p=52',0,'post','',0),(54,1,'2018-10-09 05:25:26','2018-10-09 05:25:26','','Capture2','','inherit','open','closed','','capture2','','','2018-10-09 05:25:26','2018-10-09 05:25:26','',52,'http://45.77.202.181/wp-content/uploads/2018/10/Capture2.png',0,'attachment','image/png',0),(55,1,'2018-10-09 05:30:38','2018-10-09 05:30:38','不想比较细节，想直观看提交记录可以使用gitk，这里使用beyondcompare是为了比较细节\r\n\r\n&nbsp;\r\n\r\n[gallery ids=\"54\"]\r\n\r\n1、安装beyond compare3\r\n\r\nyum install LINSEE_beyondcompare_v41320814-4.1.3.20814-3.x86_64\r\n\r\nyum intall LINSEE_beyondcompare-license_v40-4.0-3.noarch\r\n\r\n2、修改git配置\r\n\r\nvi ~/.gitconfig\r\n\r\n增加\r\n\r\n[diff]\r\ntool = bc3\r\n[difftool]\r\nprompt = false\r\n\r\n3、使用\r\n\r\n比较当前目录所有文件修改记录\r\n\r\ngit difftool\r\n\r\n比较add但没有commit的\r\n\r\ngit difftool --cached\r\n\r\n已经commit的输入两个commmit号\r\n\r\ngit difftool 669497994 c9ed29afb\r\n\r\ngit difftool 669497994 c9ed29afb -- src/SeverityLevelParse.cpp','EEcloud上使用git diff 图形化界面','','inherit','closed','closed','','52-revision-v1','','','2018-10-09 05:30:38','2018-10-09 05:30:38','',52,'http://45.77.202.181/index.php/2018/10/09/52-revision-v1/',0,'revision','',0),(56,1,'2018-10-09 05:31:35','2018-10-09 05:31:35','不想比较细节，想直观看提交记录可以使用gitk，这里使用beyondcompare是为了比较细节\r\n\r\n&nbsp;\r\n\r\n[gallery size=\"full\" ids=\"54\"]\r\n\r\n1、安装beyond compare3\r\n\r\nyum install LINSEE_beyondcompare_v41320814-4.1.3.20814-3.x86_64\r\n\r\nyum intall LINSEE_beyondcompare-license_v40-4.0-3.noarch\r\n\r\n2、修改git配置\r\n\r\nvi ~/.gitconfig\r\n\r\n增加\r\n\r\n[diff]\r\ntool = bc3\r\n[difftool]\r\nprompt = false\r\n\r\n3、使用\r\n\r\n比较当前目录所有文件修改记录\r\n\r\ngit difftool\r\n\r\n比较add但没有commit的\r\n\r\ngit difftool --cached\r\n\r\n已经commit的输入两个commmit号\r\n\r\ngit difftool 669497994 c9ed29afb\r\n\r\ngit difftool 669497994 c9ed29afb -- src/SeverityLevelParse.cpp','EEcloud上使用git diff 图形化界面','','inherit','closed','closed','','52-revision-v1','','','2018-10-09 05:31:35','2018-10-09 05:31:35','',52,'http://45.77.202.181/index.php/2018/10/09/52-revision-v1/',0,'revision','',0),(57,1,'2018-10-09 05:32:48','2018-10-09 05:32:48','','Capture','','inherit','open','closed','','capture','','','2018-10-09 05:32:48','2018-10-09 05:32:48','',52,'http://45.77.202.181/wp-content/uploads/2018/10/Capture.png',0,'attachment','image/png',0),(58,1,'2018-10-09 05:33:16','2018-10-09 05:33:16','不想比较细节，想直观看提交记录可以使用gitk，这里使用beyondcompare是为了比较细节\r\n\r\n[gallery size=\"full\" ids=\"54\"]\r\n\r\n1、安装beyond compare3\r\n\r\nyum install LINSEE_beyondcompare_v41320814-4.1.3.20814-3.x86_64\r\n\r\nyum intall LINSEE_beyondcompare-license_v40-4.0-3.noarch\r\n\r\n2、修改git配置\r\n\r\nvi ~/.gitconfig\r\n\r\n增加\r\n\r\n[diff]\r\ntool = bc3\r\n[difftool]\r\nprompt = false\r\n\r\n3、使用\r\n\r\n比较当前目录所有文件修改记录\r\n\r\ngit difftool\r\n\r\n比较add但没有commit的\r\n\r\ngit difftool --cached\r\n\r\n已经commit的输入两个commmit号\r\n\r\ngit difftool 669497994 c9ed29afb\r\n\r\ngit difftool 669497994 c9ed29afb -- src/SeverityLevelParse.cpp\r\n\r\n<img class=\"alignleft size-large wp-image-57\" src=\"http://45.77.202.181/wp-content/uploads/2018/10/Capture-1024x517.png\" alt=\"\" width=\"525\" height=\"265\" />','EEcloud上使用git diff 图形化界面','','inherit','closed','closed','','52-revision-v1','','','2018-10-09 05:33:16','2018-10-09 05:33:16','',52,'http://45.77.202.181/index.php/2018/10/09/52-revision-v1/',0,'revision','',0),(59,1,'2018-10-09 05:34:19','2018-10-09 05:34:19','不想比较细节，想直观看提交记录可以使用gitk，这里使用beyondcompare是为了比较细节\r\n\r\n<img class=\"alignleft size-full wp-image-54\" src=\"http://45.77.202.181/wp-content/uploads/2018/10/Capture2.png\" alt=\"\" width=\"1777\" height=\"1054\" />\r\n\r\n1、安装beyond compare3\r\n\r\nyum install LINSEE_beyondcompare_v41320814-4.1.3.20814-3.x86_64\r\n\r\nyum intall LINSEE_beyondcompare-license_v40-4.0-3.noarch\r\n\r\n2、修改git配置\r\n\r\nvi ~/.gitconfig\r\n\r\n增加\r\n\r\n[diff]\r\ntool = bc3\r\n[difftool]\r\nprompt = false\r\n\r\n3、使用\r\n\r\n比较当前目录所有文件修改记录\r\n\r\ngit difftool\r\n\r\n比较add但没有commit的\r\n\r\ngit difftool --cached\r\n\r\n已经commit的输入两个commmit号\r\n\r\ngit difftool 669497994 c9ed29afb\r\n\r\ngit difftool 669497994 c9ed29afb -- src/SeverityLevelParse.cpp\r\n\r\n<img class=\"alignleft size-full wp-image-57\" src=\"http://45.77.202.181/wp-content/uploads/2018/10/Capture.png\" alt=\"\" width=\"1876\" height=\"948\" />','EEcloud上使用git diff 图形化界面','','inherit','closed','closed','','52-revision-v1','','','2018-10-09 05:34:19','2018-10-09 05:34:19','',52,'http://45.77.202.181/index.php/2018/10/09/52-revision-v1/',0,'revision','',0),(60,1,'2018-10-09 05:35:14','2018-10-09 05:35:14','打印输出\r\n\r\nc语言\r\n\r\n% - 0 m.n l或h 格式字符\r\n下面对组成格式说明的各项加以说明：\r\n①%:表示格式说明的起始符号，不可缺少。\r\n②-:有-表示左对齐输出，如省略表示右对齐输出。\r\n③0:有0表示指定空位填0,如省略表示指定空位不填。\r\n④m.n:m指域宽，即对应的输出项在输出设备上所占的字符数。N指精度。用于说明输出的实型数的小数位数。对数值型的来说，未指定n时，隐含的精度为n=6位。\r\n⑤l或h:l对整型指long型，对实型指double型。h用于将整型的格式字符修正为short型。\r\n---------------------------------------\r\n\r\nprintf(\"0x%08x\\n\", 1);\r\n\r\nc++可以用操作符\r\n\r\nstd::cout&lt;&lt;\"0x\"&lt;&lt;std::hex&lt;&lt;std::setw(8)&lt;&lt;std::setfill(\'0\')&lt;&lt;1&lt;&lt;std::endl;\r\n\r\n都输出：0x00000001\r\n\r\n//重载operator&lt;&lt; ,使得可以输出enum class\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"cpp\">#include &lt;iostream&gt;\r\n template&lt;typename T&gt;\r\n std::ostream&amp; operator&lt;&lt;(typename std::enable_if&lt;std::is_enum&lt;T&gt;\r\n ::value, std::ostream&gt;::type&amp; stream, const T&amp; e)\r\n {\r\n return stream &lt;&lt; static_cast&lt;typename std::underlying_type&lt;T&gt;::type&gt;(e);\r\n }</pre>\r\n&nbsp;\r\n\r\n<time class=\"date-past handy-date-time\" datetime=\"2018-07-27\"><span class=\"handy-date-value\">2018-7-27</span></time> 通过类型名获取protobuf message类型\r\n\r\nfor detail：<a class=\"external-link\" href=\"https://blog.csdn.net/solstice/article/details/6300108\" rel=\"nofollow\">https://blog.csdn.net/solstice/article/details/6300108</a>\r\n\r\nusing namespace ::google::protobuf;\r\n<pre class=\"prettyprint\">Message* createMessage(const std::string&amp; typeName)\r\n{\r\n  Message* message = NULL;\r\n  const Descriptor* descriptor = DescriptorPool::generated_pool()-&gt;FindMessageTypeByName(typeName);\r\n  if (descriptor)\r\n  {\r\n    const Message* prototype = MessageFactory::generated_factory()-&gt;GetPrototype(descriptor);\r\n    if (prototype)\r\n    {\r\n      message = prototype-&gt;New();\r\n    }\r\n  }\r\n  return message;\r\n}</pre>','代码赏析','','publish','open','open','','%e4%bb%a3%e7%a0%81%e8%b5%8f%e6%9e%90','','','2018-10-10 07:04:17','2018-10-10 07:04:17','',0,'http://45.77.202.181/?p=60',0,'post','',0),(61,1,'2018-10-09 05:35:14','2018-10-09 05:35:14','打印输出\r\n\r\nc语言\r\n\r\n% - 0 m.n l或h 格式字符\r\n下面对组成格式说明的各项加以说明：\r\n①%:表示格式说明的起始符号，不可缺少。\r\n②-:有-表示左对齐输出，如省略表示右对齐输出。\r\n③0:有0表示指定空位填0,如省略表示指定空位不填。\r\n④m.n:m指域宽，即对应的输出项在输出设备上所占的字符数。N指精度。用于说明输出的实型数的小数位数。对数值型的来说，未指定n时，隐含的精度为n=6位。\r\n⑤l或h:l对整型指long型，对实型指double型。h用于将整型的格式字符修正为short型。\r\n---------------------------------------\r\n\r\nprintf(\"0x%08x\\n\", 1);\r\n\r\nc++可以用操作符\r\n\r\nstd::cout&lt;&lt;\"0x\"&lt;&lt;std::hex&lt;&lt;std::setw(8)&lt;&lt;std::setfill(\'0\')&lt;&lt;1&lt;&lt;std::endl;\r\n\r\n都输出：0x00000001\r\n\r\n//重载operator&lt;&lt; ,使得可以输出enum class\r\n\r\n#include &lt;iostream&gt;\r\ntemplate&lt;typename T&gt;\r\nstd::ostream&amp; operator&lt;&lt;(typename std::enable_if&lt;std::is_enum&lt;T&gt;\r\n::value, std::ostream&gt;::type&amp; stream, const T&amp; e)\r\n{\r\nreturn stream &lt;&lt; static_cast&lt;typename std::underlying_type&lt;T&gt;::type&gt;(e);\r\n}\r\n\r\n<time class=\"date-past handy-date-time\" datetime=\"2018-07-30\"><span class=\"handy-date-value\">2018-7-30</span></time>\r\n\r\n//重载operator&lt;&lt; ,使得可以输出std::tuple\r\ntemplate&lt;size_t N, typename Tuple&gt;\r\nvoid tuple_print(std::ostream&amp; os, const Tuple&amp; t)\r\n{\r\nif (N != 1)\r\ntuple_print&lt; (N &gt; 1? N-1: 0)&gt;(os, t);\r\nos &lt;&lt; std::get&lt;(N &gt; 1? N-1: 0)&gt;(t)&lt;&lt;\",\";\r\n}\r\n\r\n// operator&lt;&lt;\r\ntemplate&lt;typename... Args&gt;\r\nstd::ostream&amp; operator&lt;&lt;(std::ostream&amp; os, const std::tuple&lt;Args...&gt;&amp; t)\r\n{\r\nos&lt;&lt;\"(\";\r\ntuple_print&lt;sizeof...(Args)&gt;(os, t);\r\nreturn os &lt;&lt; \")\";\r\n}\r\n\r\n<time class=\"date-past handy-date-time\" datetime=\"2018-07-27\"><span class=\"handy-date-value\">2018-7-27</span></time> 通过类型名获取protobuf message类型\r\n\r\nfor detail：<a class=\"external-link\" href=\"https://blog.csdn.net/solstice/article/details/6300108\" rel=\"nofollow\">https://blog.csdn.net/solstice/article/details/6300108</a>\r\n\r\nusing namespace ::google::protobuf;\r\n<pre class=\"prettyprint\">Message* createMessage(const std::string&amp; typeName)\r\n{\r\n  Message* message = NULL;\r\n  const Descriptor* descriptor = DescriptorPool::generated_pool()-&gt;FindMessageTypeByName(typeName);\r\n  if (descriptor)\r\n  {\r\n    const Message* prototype = MessageFactory::generated_factory()-&gt;GetPrototype(descriptor);\r\n    if (prototype)\r\n    {\r\n      message = prototype-&gt;New();\r\n    }\r\n  }\r\n  return message;\r\n}</pre>','代码赏析','','inherit','closed','closed','','60-revision-v1','','','2018-10-09 05:35:14','2018-10-09 05:35:14','',60,'http://45.77.202.181/index.php/2018/10/09/60-revision-v1/',0,'revision','',0),(62,1,'2018-10-09 05:36:30','2018-10-09 05:36:30','参考：\r\n\r\n<a class=\"external-link\" href=\"http://www.360doc.com/content/18/0727/13/58175288_773603054.shtml\" rel=\"nofollow\">http://www.360doc.com/content/18/0727/13/58175288_773603054.shtml</a>\r\n\r\n<a class=\"external-link\" href=\"http://www.360doc.com/content/16/0701/17/7534118_572234850.shtml\" rel=\"nofollow\">http://www.360doc.com/content/16/0701/17/7534118_572234850.shtml</a>\r\n\r\n<a class=\"external-link\" href=\"http://www.360doc.com/content/16/0701/15/7534118_572195718.shtml\" rel=\"nofollow\">http://www.360doc.com/content/16/0701/15/7534118_572195718.shtml</a>\r\n\r\nZMQ looks like an embeddable networking library but acts like a concurrency framework.\r\nZMQ看起来像是一套嵌入式的网络链接库，但工作起来更像是一个并发式的框架。\r\n\r\nIt gives you sockets that carry atomic messages across various transports like in-process, inter-process, TCP, and multicast\r\n它提供的套接字可以在多种协议中传输消息，如线程间、进程间、TCP、广播等。\r\n\r\nYou can connect sockets N-to-N with patterns like fanout, pub-sub, task distribution, and request-reply.\r\n你可以使用套接字构建多对多的连接模式，如扇出、发布-订阅、任务分发、请求-应答等\r\n\r\nLet\'s look at the main differences between TCP sockets and 0MQ sockets when it comes to carrying data:\r\n* 0MQ sockets carry messages, rather than bytes (as in TCP) or frames (as in UDP). A message is a length-specified blob of binary data. We\'ll come to messages shortly, their design is optimized for performance and thus somewhat tricky to understand.\r\n* 0MQ sockets do their I/O in a background thread. This means that messages arrive in a local input queue, and are sent from a local output queue, no matter what your application is busy doing. These are configurable memory queues, by the way.\r\n* 0MQ sockets can, depending on the socket type, be connected to (or from, it\'s the same) many other sockets. Where TCP emulates a one-to-one phone call, 0MQ implements one-to-many (like a radio broadcast), many-to-many (like a post office), many-to-one (like a mail box), and even one-to-one.\r\n* 0MQ sockets can send to many endpoints (creating a fan-out model), or receive from many endpoints (creating a fan-in model)!figref().\r\n* ZMQ套接字传输的是消息，而不是字节（TCP）或帧（UDP）。消息指的是一段指定长度的二进制数据块，我们下文会讲到消息，这种设计是为了性能优化而考虑的，所以可能会比较难以理解。\r\n* ZMQ套接字在后台进行I/O操作，也就是说无论是接收还是发送消息，它都会先传送到一个本地的缓冲队列，这个内存队列的大小是可以配置的。\r\n* ZMQ套接字可以和多个套接字进行连接（如果套接字类型允许的话）。TCP协议只能进行点对点的连接，而ZMQ则可以进行一对多（类似于无线广播）、多对多（类似于邮局）、多对一（类似于信箱），当然也包括一对一的情况。\r\n* ZMQ套接字可以发送消息给多个端点（扇出模型），或从多个端点中接收消息（扇入模型）\r\n\r\nThe REQ-REP socket pair is lockstep. The client does zmq_msg_send[3] and then zmq_msg_recv[3], in a loop (or once if that\'s all it needs). Doing any other sequence (e.g. sending two messages in a row) will result in a return code of -1 from the send or recv call. Similarly the service does zmq_msg_recv[3] and then zmq_msg_send[3] in that order, and as often as it needs to.\r\n使用REQ-REP套接字发送和接受消息是需要遵循一定规律的。客户端首先使用zmq_send()发送消息，再用zmq_recv()接收，如此循环。如果打乱了这个顺序（如连续发送两次）则会报错。类似地，服务端必须先进行接收，后进行发送。\r\n\r\nNote that when you use a SUB socket you **must** set a subscription using zmq_setsockopt[3] and SUBSCRIBE, as in this code. If you don\'t set any subscription, you won\'t get any messages. It\'s a common mistake for beginners.\r\nThe subscriber can set many subscriptions, which are added together. That is, if a update matches ANY subscription, the subscriber receives it.The subscriber can also unsubscribe specific subscriptions. Subscriptions are length-specified blobs. See zmq_setsockopt[3] for how this works.\r\n需要注意的是，在使用SUB套接字时，必须使用zmq_setsockopt()方法来设置订阅的内容。如果你不设置订阅内容，那将什么消息都收不到，新手很容易犯这个错误。订阅信息可以是任何字符串，可以设置多次。只要消息满足其中一条订阅信息，SUB套接字就会收到。订阅者可以选择不接收某类消息，也是通过zmq_setsockopt()方法实现的。\r\n\r\nThe PUB-SUB socket pair is asynchronous. The client does zmq_msg_recv[3], in a loop (or once if that\'s all it needs). Trying to send a message to a SUB socket will cause an error. Similarly the service does zmq_msg_send[3] as often as it needs to, but must not do zmq_msg_recv[3] on a PUB socket.\r\nPUB-SUB套接字组合是异步的。客户端在一个循环体中使用zmq_recv()接收消息，如果向SUB套接字发送消息则会报错；类似地，服务端可以不断地使用zmq_send()发送消息，但不能再PUB套接字上使用zme_recv()。\r\n\r\n* The ventilator\'s PUSH socket distributes tasks to workers (assuming they are all connected //before// the batch starts going out) evenly. This is called //load-balancing// and it\'s something we\'ll look at again in more detail.\r\n* The sink\'s PULL socket collects results from workers evenly. This is called //fair-queuing//!figref().\r\n* 任务分发器使用PUSH套接字向worker均匀地分发任务（假设所有的worker都已经连接上了），这种机制称为_负载均衡_，以后我们会见得更多。\r\n* 结果收集器的PULL套接字会均匀地从worker处收集消息，这种机制称为_公平队列_\r\n\r\n0MQ applications always start by creating a //context//, and then using that for creating sockets. In C, it\'s the zmq_ctx_new[3] call. You should create and use exactly one context in your process.Technically, the context is the container for all sockets in a single process, and acts as the transport for {{inproc}} sockets, which are the fastest way to connect threads in one process.If at runtime a process has two contexts, these are like separate 0MQ instances.If that\'s explicitly what you want, OK, but otherwise remember:\r\n**Do one zmq_ctx_new[3] at the start of your main line code, and one zmq_ctx_destroy[3] at the end.**\r\nZMQ应用程序的一开始总是会先创建一个上下文，并用它来创建套接字。在C语言中，创建上下文的函数是zmq_init()。一个进程中只应该创建一个上下文。从技术的角度来说，上下文是一个容器，包含了该进程下所有的套接字，并为inproc协议提供实现，用以高速连接进程内不同的线程。如果一个进程中创建了两个上下文，那就相当于启动了两个ZMQ实例。如果这正是你需要的，那没有问题，但一般情况下：\r\n**在一个进程中使用zmq_init()函数创建一个上下文，并在结束时使用zmq_term()函数关闭它**\r\n\r\nMemory leaks are one thing, but 0MQ is quite finicky about how you exit an application. The reasons are technical and painful but the upshot is that if you leave any sockets open,the zmq_ctx_destroy[3] function will hang forever.\r\nAnd even if you close all sockets, zmq_ctx_destroy[3] will by default wait forever if there are pending connects or sends.Unless you set the LINGER to zero on those sockets before closing them.\r\n内存泄露只是问题之一，其实ZMQ是很在意程序的退出方式的。个中原因比较复杂，但简单的来说，如果仍有套接字处于打开状态，调用zmq_term()时会导致程序挂起；就算关闭了所有的套接字，如果仍有消息处于待发送状态，zmq_term()也会造成程序的等待。只有当套接字的LINGER选项设为0时才能避免。\r\n\r\n* Always close a message the moment you are done with it, using zmq_msg_close[3].\r\n* If you are opening and closing a lot of sockets, that\'s probably a sign you need to redesign your application.\r\n* When you exit the program, close your sockets and then call zmq_ctx_destroy[3]. This destroys the context.\r\n* 处理完消息后，记得用zmq_msg_close()函数关闭消息；\r\n* 如果你同时打开或关闭了很多套接字，那可能需要重新规划一下程序的结构了；\r\n* 退出程序时，应该先关闭所有的套接字，最后调用zmq_term()函数，销毁上下文对象。\r\n\r\nZMQ套接字可以connect多个目标，不像原始套接字只能连一个，说明内部管理了多个连接\r\n\r\n相应的也可以被连接多次，而原始套接字每次接收一个连接会产生一个新的套接字\r\n\r\n在发生连接的时候，会相互向对方发送ready，有截图为证\r\n\r\n&nbsp;\r\n\r\n<img class=\"alignleft size-full wp-image-66\" src=\"http://45.77.202.181/wp-content/uploads/2018/10/REQ.png\" alt=\"\" width=\"629\" height=\"156\" /> <img class=\"alignleft size-full wp-image-65\" src=\"http://45.77.202.181/wp-content/uploads/2018/10/REP.png\" alt=\"\" width=\"684\" height=\"144\" />\r\n\r\n对个1对多发送所谓的负载均衡，round-robin，实际上就是轮训发送给每一个接受者，即使对方没有recive\r\n\r\n对弈1对多的接收所谓的公平附列，fair-quened，实际是从遍历所有数据接收队列公平接收，对于没有数据的队列也是会跳过的。','zmq学习笔记','','publish','open','open','','zmq%e5%ad%a6%e4%b9%a0%e7%ac%94%e8%ae%b0','','','2018-10-10 01:47:39','2018-10-10 01:47:39','',0,'http://45.77.202.181/?p=62',0,'post','',0),(63,1,'2018-10-09 05:36:30','2018-10-09 05:36:30','参考：\r\n\r\n<a class=\"external-link\" href=\"http://www.360doc.com/content/18/0727/13/58175288_773603054.shtml\" rel=\"nofollow\">http://www.360doc.com/content/18/0727/13/58175288_773603054.shtml</a>\r\n\r\n<a class=\"external-link\" href=\"http://www.360doc.com/content/16/0701/17/7534118_572234850.shtml\" rel=\"nofollow\">http://www.360doc.com/content/16/0701/17/7534118_572234850.shtml</a>\r\n\r\n<a class=\"external-link\" href=\"http://www.360doc.com/content/16/0701/15/7534118_572195718.shtml\" rel=\"nofollow\">http://www.360doc.com/content/16/0701/15/7534118_572195718.shtml</a>\r\n\r\nZMQ looks like an embeddable networking library but acts like a concurrency framework.\r\nZMQ看起来像是一套嵌入式的网络链接库，但工作起来更像是一个并发式的框架。\r\n\r\nIt gives you sockets that carry atomic messages across various transports like in-process, inter-process, TCP, and multicast\r\n它提供的套接字可以在多种协议中传输消息，如线程间、进程间、TCP、广播等。\r\n\r\nYou can connect sockets N-to-N with patterns like fanout, pub-sub, task distribution, and request-reply.\r\n你可以使用套接字构建多对多的连接模式，如扇出、发布-订阅、任务分发、请求-应答等\r\n\r\nLet\'s look at the main differences between TCP sockets and 0MQ sockets when it comes to carrying data:\r\n* 0MQ sockets carry messages, rather than bytes (as in TCP) or frames (as in UDP). A message is a length-specified blob of binary data. We\'ll come to messages shortly, their design is optimized for performance and thus somewhat tricky to understand.\r\n* 0MQ sockets do their I/O in a background thread. This means that messages arrive in a local input queue, and are sent from a local output queue, no matter what your application is busy doing. These are configurable memory queues, by the way.\r\n* 0MQ sockets can, depending on the socket type, be connected to (or from, it\'s the same) many other sockets. Where TCP emulates a one-to-one phone call, 0MQ implements one-to-many (like a radio broadcast), many-to-many (like a post office), many-to-one (like a mail box), and even one-to-one.\r\n* 0MQ sockets can send to many endpoints (creating a fan-out model), or receive from many endpoints (creating a fan-in model)!figref().\r\n* ZMQ套接字传输的是消息，而不是字节（TCP）或帧（UDP）。消息指的是一段指定长度的二进制数据块，我们下文会讲到消息，这种设计是为了性能优化而考虑的，所以可能会比较难以理解。\r\n* ZMQ套接字在后台进行I/O操作，也就是说无论是接收还是发送消息，它都会先传送到一个本地的缓冲队列，这个内存队列的大小是可以配置的。\r\n* ZMQ套接字可以和多个套接字进行连接（如果套接字类型允许的话）。TCP协议只能进行点对点的连接，而ZMQ则可以进行一对多（类似于无线广播）、多对多（类似于邮局）、多对一（类似于信箱），当然也包括一对一的情况。\r\n* ZMQ套接字可以发送消息给多个端点（扇出模型），或从多个端点中接收消息（扇入模型）\r\n\r\nThe REQ-REP socket pair is lockstep. The client does zmq_msg_send[3] and then zmq_msg_recv[3], in a loop (or once if that\'s all it needs). Doing any other sequence (e.g. sending two messages in a row) will result in a return code of -1 from the send or recv call. Similarly the service does zmq_msg_recv[3] and then zmq_msg_send[3] in that order, and as often as it needs to.\r\n使用REQ-REP套接字发送和接受消息是需要遵循一定规律的。客户端首先使用zmq_send()发送消息，再用zmq_recv()接收，如此循环。如果打乱了这个顺序（如连续发送两次）则会报错。类似地，服务端必须先进行接收，后进行发送。\r\n\r\nNote that when you use a SUB socket you **must** set a subscription using zmq_setsockopt[3] and SUBSCRIBE, as in this code. If you don\'t set any subscription, you won\'t get any messages. It\'s a common mistake for beginners.\r\nThe subscriber can set many subscriptions, which are added together. That is, if a update matches ANY subscription, the subscriber receives it.The subscriber can also unsubscribe specific subscriptions. Subscriptions are length-specified blobs. See zmq_setsockopt[3] for how this works.\r\n需要注意的是，在使用SUB套接字时，必须使用zmq_setsockopt()方法来设置订阅的内容。如果你不设置订阅内容，那将什么消息都收不到，新手很容易犯这个错误。订阅信息可以是任何字符串，可以设置多次。只要消息满足其中一条订阅信息，SUB套接字就会收到。订阅者可以选择不接收某类消息，也是通过zmq_setsockopt()方法实现的。\r\n\r\n\r\nThe PUB-SUB socket pair is asynchronous. The client does zmq_msg_recv[3], in a loop (or once if that\'s all it needs). Trying to send a message to a SUB socket will cause an error. Similarly the service does zmq_msg_send[3] as often as it needs to, but must not do zmq_msg_recv[3] on a PUB socket.\r\nPUB-SUB套接字组合是异步的。客户端在一个循环体中使用zmq_recv()接收消息，如果向SUB套接字发送消息则会报错；类似地，服务端可以不断地使用zmq_send()发送消息，但不能再PUB套接字上使用zme_recv()。\r\n\r\n\r\n* The ventilator\'s PUSH socket distributes tasks to workers (assuming they are all connected //before// the batch starts going out) evenly. This is called //load-balancing// and it\'s something we\'ll look at again in more detail.\r\n* The sink\'s PULL socket collects results from workers evenly. This is called //fair-queuing//!figref().\r\n* 任务分发器使用PUSH套接字向worker均匀地分发任务（假设所有的worker都已经连接上了），这种机制称为_负载均衡_，以后我们会见得更多。\r\n* 结果收集器的PULL套接字会均匀地从worker处收集消息，这种机制称为_公平队列_\r\n\r\n0MQ applications always start by creating a //context//, and then using that for creating sockets. In C, it\'s the zmq_ctx_new[3] call. You should create and use exactly one context in your process.Technically, the context is the container for all sockets in a single process, and acts as the transport for {{inproc}} sockets, which are the fastest way to connect threads in one process.If at runtime a process has two contexts, these are like separate 0MQ instances.If that\'s explicitly what you want, OK, but otherwise remember:\r\n**Do one zmq_ctx_new[3] at the start of your main line code, and one zmq_ctx_destroy[3] at the end.**\r\nZMQ应用程序的一开始总是会先创建一个上下文，并用它来创建套接字。在C语言中，创建上下文的函数是zmq_init()。一个进程中只应该创建一个上下文。从技术的角度来说，上下文是一个容器，包含了该进程下所有的套接字，并为inproc协议提供实现，用以高速连接进程内不同的线程。如果一个进程中创建了两个上下文，那就相当于启动了两个ZMQ实例。如果这正是你需要的，那没有问题，但一般情况下：\r\n**在一个进程中使用zmq_init()函数创建一个上下文，并在结束时使用zmq_term()函数关闭它**\r\n\r\nMemory leaks are one thing, but 0MQ is quite finicky about how you exit an application. The reasons are technical and painful but the upshot is that if you leave any sockets open,the zmq_ctx_destroy[3] function will hang forever.\r\nAnd even if you close all sockets, zmq_ctx_destroy[3] will by default wait forever if there are pending connects or sends.Unless you set the LINGER to zero on those sockets before closing them.\r\n内存泄露只是问题之一，其实ZMQ是很在意程序的退出方式的。个中原因比较复杂，但简单的来说，如果仍有套接字处于打开状态，调用zmq_term()时会导致程序挂起；就算关闭了所有的套接字，如果仍有消息处于待发送状态，zmq_term()也会造成程序的等待。只有当套接字的LINGER选项设为0时才能避免。\r\n\r\n\r\n* Always close a message the moment you are done with it, using zmq_msg_close[3].\r\n* If you are opening and closing a lot of sockets, that\'s probably a sign you need to redesign your application.\r\n* When you exit the program, close your sockets and then call zmq_ctx_destroy[3]. This destroys the context.\r\n* 处理完消息后，记得用zmq_msg_close()函数关闭消息；\r\n* 如果你同时打开或关闭了很多套接字，那可能需要重新规划一下程序的结构了；\r\n* 退出程序时，应该先关闭所有的套接字，最后调用zmq_term()函数，销毁上下文对象。\r\n\r\nZMQ套接字可以connect多个目标，不像原始套接字只能连一个，说明内部管理了多个连接\r\n\r\n相应的也可以被连接多次，而原始套接字每次接收一个连接会产生一个新的套接字\r\n\r\n在发生连接的时候，会相互向对方发送ready，有截图为证\r\n\r\n<span class=\"confluence-embedded-file-wrapper confluence-embedded-manual-size\"><img class=\"confluence-embedded-image\" src=\"https://confluence.int.net.nokia.com/download/attachments/692155094/REP.png?version=1&amp;modificationDate=1536224485000&amp;api=v2\" height=\"144\" data-image-src=\"/download/attachments/692155094/REP.png?version=1&amp;modificationDate=1536224485000&amp;api=v2\" data-unresolved-comment-count=\"0\" data-linked-resource-id=\"717614667\" data-linked-resource-version=\"1\" data-linked-resource-type=\"attachment\" data-linked-resource-default-alias=\"REP.png\" data-base-url=\"https://confluence.int.net.nokia.com\" data-linked-resource-content-type=\"image/png\" data-linked-resource-container-id=\"692155094\" data-linked-resource-container-version=\"2\" /></span><span class=\"confluence-embedded-file-wrapper confluence-embedded-manual-size\"><img class=\"confluence-embedded-image\" src=\"https://confluence.int.net.nokia.com/download/attachments/692155094/REQ.png?version=1&amp;modificationDate=1536224485000&amp;api=v2\" height=\"156\" data-image-src=\"/download/attachments/692155094/REQ.png?version=1&amp;modificationDate=1536224485000&amp;api=v2\" data-unresolved-comment-count=\"0\" data-linked-resource-id=\"717614668\" data-linked-resource-version=\"1\" data-linked-resource-type=\"attachment\" data-linked-resource-default-alias=\"REQ.png\" data-base-url=\"https://confluence.int.net.nokia.com\" data-linked-resource-content-type=\"image/png\" data-linked-resource-container-id=\"692155094\" data-linked-resource-container-version=\"2\" /></span>\r\n\r\n对个1对多发送所谓的负载均衡，round-robin，实际上就是轮训发送给每一个接受者，即使对方没有recive\r\n\r\n对弈1对多的接收所谓的公平附列，fair-quened，实际是从遍历所有数据接收队列公平接收，对于没有数据的队列也是会跳过的。','zmq学习笔记','','inherit','closed','closed','','62-revision-v1','','','2018-10-09 05:36:30','2018-10-09 05:36:30','',62,'http://45.77.202.181/index.php/2018/10/09/62-revision-v1/',0,'revision','',0),(64,1,'2018-10-09 05:42:32','2018-10-09 05:42:32','参考：\n\n<a class=\"external-link\" href=\"http://www.360doc.com/content/18/0727/13/58175288_773603054.shtml\" rel=\"nofollow\">http://www.360doc.com/content/18/0727/13/58175288_773603054.shtml</a>\n\n<a class=\"external-link\" href=\"http://www.360doc.com/content/16/0701/17/7534118_572234850.shtml\" rel=\"nofollow\">http://www.360doc.com/content/16/0701/17/7534118_572234850.shtml</a>\n\n<a class=\"external-link\" href=\"http://www.360doc.com/content/16/0701/15/7534118_572195718.shtml\" rel=\"nofollow\">http://www.360doc.com/content/16/0701/15/7534118_572195718.shtml</a>\n\nZMQ looks like an embeddable networking library but acts like a concurrency framework.\nZMQ看起来像是一套嵌入式的网络链接库，但工作起来更像是一个并发式的框架。\n\nIt gives you sockets that carry atomic messages across various transports like in-process, inter-process, TCP, and multicast\n它提供的套接字可以在多种协议中传输消息，如线程间、进程间、TCP、广播等。\n\nYou can connect sockets N-to-N with patterns like fanout, pub-sub, task distribution, and request-reply.\n你可以使用套接字构建多对多的连接模式，如扇出、发布-订阅、任务分发、请求-应答等\n\nLet\'s look at the main differences between TCP sockets and 0MQ sockets when it comes to carrying data:\n* 0MQ sockets carry messages, rather than bytes (as in TCP) or frames (as in UDP). A message is a length-specified blob of binary data. We\'ll come to messages shortly, their design is optimized for performance and thus somewhat tricky to understand.\n* 0MQ sockets do their I/O in a background thread. This means that messages arrive in a local input queue, and are sent from a local output queue, no matter what your application is busy doing. These are configurable memory queues, by the way.\n* 0MQ sockets can, depending on the socket type, be connected to (or from, it\'s the same) many other sockets. Where TCP emulates a one-to-one phone call, 0MQ implements one-to-many (like a radio broadcast), many-to-many (like a post office), many-to-one (like a mail box), and even one-to-one.\n* 0MQ sockets can send to many endpoints (creating a fan-out model), or receive from many endpoints (creating a fan-in model)!figref().\n* ZMQ套接字传输的是消息，而不是字节（TCP）或帧（UDP）。消息指的是一段指定长度的二进制数据块，我们下文会讲到消息，这种设计是为了性能优化而考虑的，所以可能会比较难以理解。\n* ZMQ套接字在后台进行I/O操作，也就是说无论是接收还是发送消息，它都会先传送到一个本地的缓冲队列，这个内存队列的大小是可以配置的。\n* ZMQ套接字可以和多个套接字进行连接（如果套接字类型允许的话）。TCP协议只能进行点对点的连接，而ZMQ则可以进行一对多（类似于无线广播）、多对多（类似于邮局）、多对一（类似于信箱），当然也包括一对一的情况。\n* ZMQ套接字可以发送消息给多个端点（扇出模型），或从多个端点中接收消息（扇入模型）\n\nThe REQ-REP socket pair is lockstep. The client does zmq_msg_send[3] and then zmq_msg_recv[3], in a loop (or once if that\'s all it needs). Doing any other sequence (e.g. sending two messages in a row) will result in a return code of -1 from the send or recv call. Similarly the service does zmq_msg_recv[3] and then zmq_msg_send[3] in that order, and as often as it needs to.\n使用REQ-REP套接字发送和接受消息是需要遵循一定规律的。客户端首先使用zmq_send()发送消息，再用zmq_recv()接收，如此循环。如果打乱了这个顺序（如连续发送两次）则会报错。类似地，服务端必须先进行接收，后进行发送。\n\nNote that when you use a SUB socket you **must** set a subscription using zmq_setsockopt[3] and SUBSCRIBE, as in this code. If you don\'t set any subscription, you won\'t get any messages. It\'s a common mistake for beginners.\nThe subscriber can set many subscriptions, which are added together. That is, if a update matches ANY subscription, the subscriber receives it.The subscriber can also unsubscribe specific subscriptions. Subscriptions are length-specified blobs. See zmq_setsockopt[3] for how this works.\n需要注意的是，在使用SUB套接字时，必须使用zmq_setsockopt()方法来设置订阅的内容。如果你不设置订阅内容，那将什么消息都收不到，新手很容易犯这个错误。订阅信息可以是任何字符串，可以设置多次。只要消息满足其中一条订阅信息，SUB套接字就会收到。订阅者可以选择不接收某类消息，也是通过zmq_setsockopt()方法实现的。\n\nThe PUB-SUB socket pair is asynchronous. The client does zmq_msg_recv[3], in a loop (or once if that\'s all it needs). Trying to send a message to a SUB socket will cause an error. Similarly the service does zmq_msg_send[3] as often as it needs to, but must not do zmq_msg_recv[3] on a PUB socket.\nPUB-SUB套接字组合是异步的。客户端在一个循环体中使用zmq_recv()接收消息，如果向SUB套接字发送消息则会报错；类似地，服务端可以不断地使用zmq_send()发送消息，但不能再PUB套接字上使用zme_recv()。\n\n* The ventilator\'s PUSH socket distributes tasks to workers (assuming they are all connected //before// the batch starts going out) evenly. This is called //load-balancing// and it\'s something we\'ll look at again in more detail.\n* The sink\'s PULL socket collects results from workers evenly. This is called //fair-queuing//!figref().\n* 任务分发器使用PUSH套接字向worker均匀地分发任务（假设所有的worker都已经连接上了），这种机制称为_负载均衡_，以后我们会见得更多。\n* 结果收集器的PULL套接字会均匀地从worker处收集消息，这种机制称为_公平队列_\n\n0MQ applications always start by creating a //context//, and then using that for creating sockets. In C, it\'s the zmq_ctx_new[3] call. You should create and use exactly one context in your process.Technically, the context is the container for all sockets in a single process, and acts as the transport for {{inproc}} sockets, which are the fastest way to connect threads in one process.If at runtime a process has two contexts, these are like separate 0MQ instances.If that\'s explicitly what you want, OK, but otherwise remember:\n**Do one zmq_ctx_new[3] at the start of your main line code, and one zmq_ctx_destroy[3] at the end.**\nZMQ应用程序的一开始总是会先创建一个上下文，并用它来创建套接字。在C语言中，创建上下文的函数是zmq_init()。一个进程中只应该创建一个上下文。从技术的角度来说，上下文是一个容器，包含了该进程下所有的套接字，并为inproc协议提供实现，用以高速连接进程内不同的线程。如果一个进程中创建了两个上下文，那就相当于启动了两个ZMQ实例。如果这正是你需要的，那没有问题，但一般情况下：\n**在一个进程中使用zmq_init()函数创建一个上下文，并在结束时使用zmq_term()函数关闭它**\n\nMemory leaks are one thing, but 0MQ is quite finicky about how you exit an application. The reasons are technical and painful but the upshot is that if you leave any sockets open,the zmq_ctx_destroy[3] function will hang forever.\nAnd even if you close all sockets, zmq_ctx_destroy[3] will by default wait forever if there are pending connects or sends.Unless you set the LINGER to zero on those sockets before closing them.\n内存泄露只是问题之一，其实ZMQ是很在意程序的退出方式的。个中原因比较复杂，但简单的来说，如果仍有套接字处于打开状态，调用zmq_term()时会导致程序挂起；就算关闭了所有的套接字，如果仍有消息处于待发送状态，zmq_term()也会造成程序的等待。只有当套接字的LINGER选项设为0时才能避免。\n\n* Always close a message the moment you are done with it, using zmq_msg_close[3].\n* If you are opening and closing a lot of sockets, that\'s probably a sign you need to redesign your application.\n* When you exit the program, close your sockets and then call zmq_ctx_destroy[3]. This destroys the context.\n* 处理完消息后，记得用zmq_msg_close()函数关闭消息；\n* 如果你同时打开或关闭了很多套接字，那可能需要重新规划一下程序的结构了；\n* 退出程序时，应该先关闭所有的套接字，最后调用zmq_term()函数，销毁上下文对象。\n\nZMQ套接字可以connect多个目标，不像原始套接字只能连一个，说明内部管理了多个连接\n\n相应的也可以被连接多次，而原始套接字每次接收一个连接会产生一个新的套接字\n\n在发生连接的时候，会相互向对方发送ready，有截图为证\n\n&nbsp;\n\n&nbsp;\n\n对个1对多发送所谓的负载均衡，round-robin，实际上就是轮训发送给每一个接受者，即使对方没有recive\n\n对弈1对多的接收所谓的公平附列，fair-quened，实际是从遍历所有数据接收队列公平接收，对于没有数据的队列也是会跳过的。','zmq学习笔记','','inherit','closed','closed','','62-autosave-v1','','','2018-10-09 05:42:32','2018-10-09 05:42:32','',62,'http://45.77.202.181/index.php/2018/10/09/62-autosave-v1/',0,'revision','',0),(65,1,'2018-10-09 05:42:44','2018-10-09 05:42:44','','REP','','inherit','open','closed','','rep','','','2018-10-09 05:42:44','2018-10-09 05:42:44','',62,'http://45.77.202.181/wp-content/uploads/2018/10/REP.png',0,'attachment','image/png',0),(66,1,'2018-10-09 05:42:45','2018-10-09 05:42:45','','REQ','','inherit','open','closed','','req','','','2018-10-09 05:42:45','2018-10-09 05:42:45','',62,'http://45.77.202.181/wp-content/uploads/2018/10/REQ.png',0,'attachment','image/png',0),(67,1,'2018-10-09 05:43:12','2018-10-09 05:43:12','参考：\r\n\r\n<a class=\"external-link\" href=\"http://www.360doc.com/content/18/0727/13/58175288_773603054.shtml\" rel=\"nofollow\">http://www.360doc.com/content/18/0727/13/58175288_773603054.shtml</a>\r\n\r\n<a class=\"external-link\" href=\"http://www.360doc.com/content/16/0701/17/7534118_572234850.shtml\" rel=\"nofollow\">http://www.360doc.com/content/16/0701/17/7534118_572234850.shtml</a>\r\n\r\n<a class=\"external-link\" href=\"http://www.360doc.com/content/16/0701/15/7534118_572195718.shtml\" rel=\"nofollow\">http://www.360doc.com/content/16/0701/15/7534118_572195718.shtml</a>\r\n\r\nZMQ looks like an embeddable networking library but acts like a concurrency framework.\r\nZMQ看起来像是一套嵌入式的网络链接库，但工作起来更像是一个并发式的框架。\r\n\r\nIt gives you sockets that carry atomic messages across various transports like in-process, inter-process, TCP, and multicast\r\n它提供的套接字可以在多种协议中传输消息，如线程间、进程间、TCP、广播等。\r\n\r\nYou can connect sockets N-to-N with patterns like fanout, pub-sub, task distribution, and request-reply.\r\n你可以使用套接字构建多对多的连接模式，如扇出、发布-订阅、任务分发、请求-应答等\r\n\r\nLet\'s look at the main differences between TCP sockets and 0MQ sockets when it comes to carrying data:\r\n* 0MQ sockets carry messages, rather than bytes (as in TCP) or frames (as in UDP). A message is a length-specified blob of binary data. We\'ll come to messages shortly, their design is optimized for performance and thus somewhat tricky to understand.\r\n* 0MQ sockets do their I/O in a background thread. This means that messages arrive in a local input queue, and are sent from a local output queue, no matter what your application is busy doing. These are configurable memory queues, by the way.\r\n* 0MQ sockets can, depending on the socket type, be connected to (or from, it\'s the same) many other sockets. Where TCP emulates a one-to-one phone call, 0MQ implements one-to-many (like a radio broadcast), many-to-many (like a post office), many-to-one (like a mail box), and even one-to-one.\r\n* 0MQ sockets can send to many endpoints (creating a fan-out model), or receive from many endpoints (creating a fan-in model)!figref().\r\n* ZMQ套接字传输的是消息，而不是字节（TCP）或帧（UDP）。消息指的是一段指定长度的二进制数据块，我们下文会讲到消息，这种设计是为了性能优化而考虑的，所以可能会比较难以理解。\r\n* ZMQ套接字在后台进行I/O操作，也就是说无论是接收还是发送消息，它都会先传送到一个本地的缓冲队列，这个内存队列的大小是可以配置的。\r\n* ZMQ套接字可以和多个套接字进行连接（如果套接字类型允许的话）。TCP协议只能进行点对点的连接，而ZMQ则可以进行一对多（类似于无线广播）、多对多（类似于邮局）、多对一（类似于信箱），当然也包括一对一的情况。\r\n* ZMQ套接字可以发送消息给多个端点（扇出模型），或从多个端点中接收消息（扇入模型）\r\n\r\nThe REQ-REP socket pair is lockstep. The client does zmq_msg_send[3] and then zmq_msg_recv[3], in a loop (or once if that\'s all it needs). Doing any other sequence (e.g. sending two messages in a row) will result in a return code of -1 from the send or recv call. Similarly the service does zmq_msg_recv[3] and then zmq_msg_send[3] in that order, and as often as it needs to.\r\n使用REQ-REP套接字发送和接受消息是需要遵循一定规律的。客户端首先使用zmq_send()发送消息，再用zmq_recv()接收，如此循环。如果打乱了这个顺序（如连续发送两次）则会报错。类似地，服务端必须先进行接收，后进行发送。\r\n\r\nNote that when you use a SUB socket you **must** set a subscription using zmq_setsockopt[3] and SUBSCRIBE, as in this code. If you don\'t set any subscription, you won\'t get any messages. It\'s a common mistake for beginners.\r\nThe subscriber can set many subscriptions, which are added together. That is, if a update matches ANY subscription, the subscriber receives it.The subscriber can also unsubscribe specific subscriptions. Subscriptions are length-specified blobs. See zmq_setsockopt[3] for how this works.\r\n需要注意的是，在使用SUB套接字时，必须使用zmq_setsockopt()方法来设置订阅的内容。如果你不设置订阅内容，那将什么消息都收不到，新手很容易犯这个错误。订阅信息可以是任何字符串，可以设置多次。只要消息满足其中一条订阅信息，SUB套接字就会收到。订阅者可以选择不接收某类消息，也是通过zmq_setsockopt()方法实现的。\r\n\r\nThe PUB-SUB socket pair is asynchronous. The client does zmq_msg_recv[3], in a loop (or once if that\'s all it needs). Trying to send a message to a SUB socket will cause an error. Similarly the service does zmq_msg_send[3] as often as it needs to, but must not do zmq_msg_recv[3] on a PUB socket.\r\nPUB-SUB套接字组合是异步的。客户端在一个循环体中使用zmq_recv()接收消息，如果向SUB套接字发送消息则会报错；类似地，服务端可以不断地使用zmq_send()发送消息，但不能再PUB套接字上使用zme_recv()。\r\n\r\n* The ventilator\'s PUSH socket distributes tasks to workers (assuming they are all connected //before// the batch starts going out) evenly. This is called //load-balancing// and it\'s something we\'ll look at again in more detail.\r\n* The sink\'s PULL socket collects results from workers evenly. This is called //fair-queuing//!figref().\r\n* 任务分发器使用PUSH套接字向worker均匀地分发任务（假设所有的worker都已经连接上了），这种机制称为_负载均衡_，以后我们会见得更多。\r\n* 结果收集器的PULL套接字会均匀地从worker处收集消息，这种机制称为_公平队列_\r\n\r\n0MQ applications always start by creating a //context//, and then using that for creating sockets. In C, it\'s the zmq_ctx_new[3] call. You should create and use exactly one context in your process.Technically, the context is the container for all sockets in a single process, and acts as the transport for {{inproc}} sockets, which are the fastest way to connect threads in one process.If at runtime a process has two contexts, these are like separate 0MQ instances.If that\'s explicitly what you want, OK, but otherwise remember:\r\n**Do one zmq_ctx_new[3] at the start of your main line code, and one zmq_ctx_destroy[3] at the end.**\r\nZMQ应用程序的一开始总是会先创建一个上下文，并用它来创建套接字。在C语言中，创建上下文的函数是zmq_init()。一个进程中只应该创建一个上下文。从技术的角度来说，上下文是一个容器，包含了该进程下所有的套接字，并为inproc协议提供实现，用以高速连接进程内不同的线程。如果一个进程中创建了两个上下文，那就相当于启动了两个ZMQ实例。如果这正是你需要的，那没有问题，但一般情况下：\r\n**在一个进程中使用zmq_init()函数创建一个上下文，并在结束时使用zmq_term()函数关闭它**\r\n\r\nMemory leaks are one thing, but 0MQ is quite finicky about how you exit an application. The reasons are technical and painful but the upshot is that if you leave any sockets open,the zmq_ctx_destroy[3] function will hang forever.\r\nAnd even if you close all sockets, zmq_ctx_destroy[3] will by default wait forever if there are pending connects or sends.Unless you set the LINGER to zero on those sockets before closing them.\r\n内存泄露只是问题之一，其实ZMQ是很在意程序的退出方式的。个中原因比较复杂，但简单的来说，如果仍有套接字处于打开状态，调用zmq_term()时会导致程序挂起；就算关闭了所有的套接字，如果仍有消息处于待发送状态，zmq_term()也会造成程序的等待。只有当套接字的LINGER选项设为0时才能避免。\r\n\r\n* Always close a message the moment you are done with it, using zmq_msg_close[3].\r\n* If you are opening and closing a lot of sockets, that\'s probably a sign you need to redesign your application.\r\n* When you exit the program, close your sockets and then call zmq_ctx_destroy[3]. This destroys the context.\r\n* 处理完消息后，记得用zmq_msg_close()函数关闭消息；\r\n* 如果你同时打开或关闭了很多套接字，那可能需要重新规划一下程序的结构了；\r\n* 退出程序时，应该先关闭所有的套接字，最后调用zmq_term()函数，销毁上下文对象。\r\n\r\nZMQ套接字可以connect多个目标，不像原始套接字只能连一个，说明内部管理了多个连接\r\n\r\n相应的也可以被连接多次，而原始套接字每次接收一个连接会产生一个新的套接字\r\n\r\n在发生连接的时候，会相互向对方发送ready，有截图为证\r\n\r\n&nbsp;\r\n\r\n<img class=\"alignleft size-full wp-image-66\" src=\"http://45.77.202.181/wp-content/uploads/2018/10/REQ.png\" alt=\"\" width=\"629\" height=\"156\" /> <img class=\"alignleft size-full wp-image-65\" src=\"http://45.77.202.181/wp-content/uploads/2018/10/REP.png\" alt=\"\" width=\"684\" height=\"144\" />\r\n\r\n对个1对多发送所谓的负载均衡，round-robin，实际上就是轮训发送给每一个接受者，即使对方没有recive\r\n\r\n对弈1对多的接收所谓的公平附列，fair-quened，实际是从遍历所有数据接收队列公平接收，对于没有数据的队列也是会跳过的。','zmq学习笔记','','inherit','closed','closed','','62-revision-v1','','','2018-10-09 05:43:12','2018-10-09 05:43:12','',62,'http://45.77.202.181/index.php/2018/10/09/62-revision-v1/',0,'revision','',0),(68,1,'2018-10-09 05:43:56','2018-10-09 05:43:56','我的方法，非常傻\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">template&lt;class T1&gt;\r\nvoid tuple_print(std::ostream&amp; os, const std::tuple&lt;T1&gt;&amp; t)\r\n{\r\n    os &lt;&lt; std::get&lt;(0)&gt;(t);\r\n}\r\n\r\ntemplate&lt;class T1, class T2&gt;\r\nvoid tuple_print(std::ostream&amp; os, const std::tuple&lt;T1, T2&gt;&amp; t)\r\n{\r\n    os &lt;&lt; std::get&lt;(0)&gt;(t)&lt;&lt;\",\"&lt;&lt;std::get&lt;(1)&gt;(t);\r\n}\r\n\r\ntemplate&lt;class T1, class T2, class T3&gt;\r\nvoid tuple_print(std::ostream&amp; os, const std::tuple&lt;T1, T2, T3&gt;&amp; t)\r\n{\r\n    os &lt;&lt; std::get&lt;(0)&gt;(t)&lt;&lt;\",\"&lt;&lt;std::get&lt;(1)&gt;(t)&lt;&lt;\",\"&lt;&lt;std::get&lt;(2)&gt;(t);\r\n}\r\n\r\n// operator&lt;&lt;\r\ntemplate&lt;typename... Args&gt;\r\nstd::ostream&amp; operator&lt;&lt;(std::ostream&amp; os, const std::tuple&lt;Args...&gt;&amp; t)\r\n{\r\n    os&lt;&lt;\"(\";\r\n    tuple_print(os, t);\r\n    return os &lt;&lt; \")\";\r\n}</pre>\r\n&nbsp;\r\n\r\n然后又看的别人的\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">#if 0\r\ntemplate&lt;size_t N, typename Tuple&gt;\r\nvoid tuple_print(std::ostream&amp; os, const Tuple&amp; t)\r\n{\r\n    if (N != 1)\r\n    tuple_print&lt; (N &gt; 1? N-1: 0)&gt;(os, t);\r\n    os &lt;&lt; std::get&lt;(N &gt; 1? N-1: 0)&gt;(t)&lt;&lt;\",\";\r\n}\r\n\r\n// operator&lt;&lt;\r\ntemplate&lt;typename... Args&gt;\r\nstd::ostream&amp; operator&lt;&lt;(std::ostream&amp; os, const std::tuple&lt;Args...&gt;&amp; t)\r\n{\r\n    os&lt;&lt;\"(\";\r\n    tuple_print&lt;sizeof...(Args)&gt;(os, t);\r\n    return os &lt;&lt; \")\";\r\n}\r\n\r\n#else\r\n\r\ntemplate&lt;typename Tuple, size_t N&gt;\r\nstruct tuple_print\r\n{\r\n    static void print(const Tuple&amp; t, std::ostream&amp; os)\r\n    {\r\n        tuple_print&lt;Tuple, N-1&gt;::print(t, os);\r\n        os &lt;&lt; \", \" &lt;&lt; std::get&lt;N-1&gt;(t);\r\n    }\r\n};\r\n// 类模板的特化版本\r\ntemplate&lt;typename Tuple&gt;\r\nstruct tuple_print&lt;Tuple, 1&gt;\r\n{\r\n    static void print(const Tuple&amp; t, std::ostream&amp; os)\r\n    {\r\n        os &lt;&lt; \"(\" &lt;&lt; std::get&lt;0&gt;(t);\r\n    }\r\n};\r\n\r\n// operator&lt;&lt;\r\ntemplate&lt;typename... Args&gt;\r\nstd::ostream&amp; operator&lt;&lt;(std::ostream&amp; os, const std::tuple&lt;Args...&gt;&amp; t)\r\n{\r\n    tuple_print&lt;std::tuple&lt;Args...&gt;, sizeof...(Args)&gt;::print(t, os);\r\n    return os &lt;&lt; \")\";\r\n}\r\n\r\n#endif</pre>\r\n&nbsp;','遍历std::tuple','','publish','open','open','','%e9%81%8d%e5%8e%86stdtuple','','','2018-10-10 07:03:09','2018-10-10 07:03:09','',0,'http://45.77.202.181/?p=68',0,'post','',0),(69,1,'2018-10-09 05:43:56','2018-10-09 05:43:56','我的方法，非常傻\r\n\r\ntemplate&lt;class T1&gt;\r\nvoid tuple_print(std::ostream&amp; os, const std::tuple&lt;T1&gt;&amp; t)\r\n{\r\nos &lt;&lt; std::get&lt;(0)&gt;(t);\r\n}\r\n\r\ntemplate&lt;class T1, class T2&gt;\r\nvoid tuple_print(std::ostream&amp; os, const std::tuple&lt;T1, T2&gt;&amp; t)\r\n{\r\nos &lt;&lt; std::get&lt;(0)&gt;(t)&lt;&lt;\",\"&lt;&lt;std::get&lt;(1)&gt;(t);\r\n}\r\n\r\ntemplate&lt;class T1, class T2, class T3&gt;\r\nvoid tuple_print(std::ostream&amp; os, const std::tuple&lt;T1, T2, T3&gt;&amp; t)\r\n{\r\nos &lt;&lt; std::get&lt;(0)&gt;(t)&lt;&lt;\",\"&lt;&lt;std::get&lt;(1)&gt;(t)&lt;&lt;\",\"&lt;&lt;std::get&lt;(2)&gt;(t);\r\n}\r\n\r\n// operator&lt;&lt;\r\ntemplate&lt;typename... Args&gt;\r\nstd::ostream&amp; operator&lt;&lt;(std::ostream&amp; os, const std::tuple&lt;Args...&gt;&amp; t)\r\n{\r\nos&lt;&lt;\"(\";\r\ntuple_print(os, t);\r\nreturn os &lt;&lt; \")\";\r\n}\r\n\r\n然后又看的别人的\r\n\r\n#if 0\r\ntemplate&lt;size_t N, typename Tuple&gt;\r\nvoid tuple_print(std::ostream&amp; os, const Tuple&amp; t)\r\n{\r\nif (N != 1)\r\ntuple_print&lt; (N &gt; 1? N-1: 0)&gt;(os, t);\r\nos &lt;&lt; std::get&lt;(N &gt; 1? N-1: 0)&gt;(t)&lt;&lt;\",\";\r\n}\r\n\r\n// operator&lt;&lt;\r\ntemplate&lt;typename... Args&gt;\r\nstd::ostream&amp; operator&lt;&lt;(std::ostream&amp; os, const std::tuple&lt;Args...&gt;&amp; t)\r\n{\r\nos&lt;&lt;\"(\";\r\ntuple_print&lt;sizeof...(Args)&gt;(os, t);\r\nreturn os &lt;&lt; \")\";\r\n}\r\n\r\n#else\r\n\r\ntemplate&lt;typename Tuple, size_t N&gt;\r\nstruct tuple_print\r\n{\r\nstatic void print(const Tuple&amp; t, std::ostream&amp; os)\r\n{\r\ntuple_print&lt;Tuple, N-1&gt;::print(t, os);\r\nos &lt;&lt; \", \" &lt;&lt; std::get&lt;N-1&gt;(t);\r\n}\r\n};\r\n// 类模板的特化版本\r\ntemplate&lt;typename Tuple&gt;\r\nstruct tuple_print&lt;Tuple, 1&gt;\r\n{\r\nstatic void print(const Tuple&amp; t, std::ostream&amp; os)\r\n{\r\nos &lt;&lt; \"(\" &lt;&lt; std::get&lt;0&gt;(t);\r\n}\r\n};\r\n\r\n// operator&lt;&lt;\r\ntemplate&lt;typename... Args&gt;\r\nstd::ostream&amp; operator&lt;&lt;(std::ostream&amp; os, const std::tuple&lt;Args...&gt;&amp; t)\r\n{\r\n\r\ntuple_print&lt;std::tuple&lt;Args...&gt;, sizeof...(Args)&gt;::print(t, os);\r\nreturn os &lt;&lt; \")\";\r\n}\r\n\r\n#endif','遍历std::tuple','','inherit','closed','closed','','68-revision-v1','','','2018-10-09 05:43:56','2018-10-09 05:43:56','',68,'http://45.77.202.181/index.php/2018/10/09/68-revision-v1/',0,'revision','',0),(70,1,'2018-10-09 05:44:22','2018-10-09 05:44:22','感觉c++11的实现最简洁容易理解，不知道c++14的实现好在哪里\r\n\r\nC++14的实现\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">using namespace std;\r\n\r\ntemplate &lt;typename UnnamedType&gt; struct container\r\n{\r\nprivate:\r\n    template &lt;typename Param&gt; constexpr auto testValidity(int /* unused */)\r\n        -&gt; decltype(std::declval&lt;UnnamedType&gt;()(std::declval&lt;Param&gt;()), std::true_type())\r\n    {\r\n        return std::true_type();\r\n    }\r\n    \r\n    template &lt;typename Param&gt; constexpr std::false_type testValidity(...)\r\n    {\r\n        return std::false_type();\r\n    }\r\n\r\npublic:\r\n\r\n    template &lt;typename Param&gt; constexpr auto operator()(const Param&amp; p)\r\n    {\r\n        return testValidity&lt;Param&gt;(int());\r\n    }\r\n};\r\n\r\ntemplate &lt;typename UnnamedType&gt; constexpr auto is_valid(const UnnamedType&amp; t)\r\n{\r\n    return container&lt;UnnamedType&gt;();\r\n}\r\n\r\nauto hasSerialize = is_valid([](auto&amp;&amp; x) -&gt; decltype(x.serialize()) { });\r\n\r\ntemplate &lt;class T&gt; auto serialize(T&amp; obj)\r\n    -&gt; typename std::enable_if&lt;decltype(hasSerialize(obj))::value, std::string&gt;::type\r\n{\r\n    return obj.serialize();\r\n}\r\n\r\ntemplate &lt;class T&gt; auto serialize(T&amp; obj)\r\n    -&gt; typename std::enable_if&lt;!decltype(hasSerialize(obj))::value, std::string&gt;::type\r\n{\r\n    return to_string(obj);\r\n}</pre>\r\n&nbsp;\r\n\r\nc++11的实现\r\n\r\n&nbsp;\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">    #if 1\r\n//模板要求两个形参，有两个版本，一个版本带默认形参，一个是特化版本\r\n//现在只传了一个模板参数，匹配的情况是，若特化版本和默认形参一致，则调用特化版本，若特化版本与默认形参不一致，则调用默认形参版本\r\n\r\ntemplate &lt;typename T, typename = std::string&gt;\r\nstruct hasSerialize : std::false_type\r\n{\r\n};\r\n\r\ntemplate &lt;typename T&gt;\r\nstruct hasSerialize&lt;T, decltype(std::declval&lt;T&gt;().serialize())&gt; : std::true_type\r\n{\r\n};\r\n\r\n#else\r\n\r\ntemplate &lt;class T&gt; struct hasSerialize\r\n{\r\n    template &lt;typename C&gt;     \r\n    static constexpr decltype(std::declval&lt;C&gt;().serialize(), bool()) test(int /* unused */)\r\n    {\r\n    return true;\r\n    }\r\n    \r\n    template &lt;typename C&gt; \r\n    static constexpr bool test(...)\r\n    {\r\n    return false;\r\n    }\r\n    \r\n    static constexpr bool value = test&lt;T&gt;(int());\r\n};\r\n\r\n#endif\r\n\r\ntemplate &lt;class T&gt;\r\nauto serialize(const T&amp; obj)\r\n    -&gt;typename std::enable_if&lt;hasSerialize&lt;T&gt;::value, std::string&gt;::type\r\n{\r\n    return obj.serialize();\r\n}\r\n\r\ntemplate &lt;class T&gt;\r\nauto serialize(const T&amp; obj)\r\n    -&gt;typename std::enable_if&lt;not hasSerialize&lt;T&gt;::value, std::string&gt;::type\r\n{\r\n    return to_string(obj);\r\n}</pre>\r\nc++98的实现\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">template &lt;class T&gt; struct hasSerialize\r\n{\r\n    typedef char yes[1];\r\n    typedef yes no[2];\r\n    \r\n    template &lt;typename U, U u&gt; struct reallyHas;\r\n    \r\n    template &lt;typename C&gt; static yes&amp; test(reallyHas&lt;std::string (C::*)(), &amp;C::serialize&gt;* /*unused*/) { }\r\n    template &lt;typename C&gt; static yes&amp; test(reallyHas&lt;std::string (C::*)() const, &amp;C::serialize&gt;* /*unused*/) { }\r\n\r\n    template &lt;typename&gt; static no&amp; test(...) { /* dark matter */ }\r\n\r\n    static const bool value = sizeof(test&lt;T&gt;(0)) == sizeof(yes);\r\n};\r\n\r\nclass A\r\n{\r\npublic:\r\n    int serialize() const\r\n    {\r\n        return 5;//\"yes\";\r\n    }\r\n};\r\n\r\nint main()\r\n{\r\n    //int a = 5;\r\n    A a;\r\n    cout&lt;&lt;serialize(a)&lt;&lt;endl;\r\n}</pre>\r\n&nbsp;\r\n\r\n&nbsp;','SFINAE技术','','publish','open','open','','sfinae%e6%8a%80%e6%9c%af','','','2018-10-10 06:59:43','2018-10-10 06:59:43','',0,'http://45.77.202.181/?p=70',0,'post','',1),(71,1,'2018-10-09 05:44:22','2018-10-09 05:44:22','感觉c++11的实现最简洁容易理解，不知道c++14的实现好在哪里\r\n\r\nC++14的实现\r\n\r\nusing namespace std;\r\n\r\ntemplate &lt;typename UnnamedType&gt; struct container\r\n{\r\nprivate:\r\ntemplate &lt;typename Param&gt; constexpr auto testValidity(int /* unused */)\r\n-&gt; decltype(std::declval&lt;UnnamedType&gt;()(std::declval&lt;Param&gt;()), std::true_type())\r\n{\r\nreturn std::true_type();\r\n}\r\n\r\ntemplate &lt;typename Param&gt; constexpr std::false_type testValidity(...)\r\n{\r\nreturn std::false_type();\r\n}\r\n\r\npublic:\r\n\r\ntemplate &lt;typename Param&gt; constexpr auto operator()(const Param&amp; p)\r\n{\r\nreturn testValidity&lt;Param&gt;(int());\r\n}\r\n};\r\n\r\ntemplate &lt;typename UnnamedType&gt; constexpr auto is_valid(const UnnamedType&amp; t)\r\n{\r\nreturn container&lt;UnnamedType&gt;();\r\n}\r\n\r\nauto hasSerialize = is_valid([](auto&amp;&amp; x) -&gt; decltype(x.serialize()) { });\r\n\r\ntemplate &lt;class T&gt; auto serialize(T&amp; obj)\r\n-&gt; typename std::enable_if&lt;decltype(hasSerialize(obj))::value, std::string&gt;::type\r\n{\r\nreturn obj.serialize();\r\n}\r\n\r\ntemplate &lt;class T&gt; auto serialize(T&amp; obj)\r\n-&gt; typename std::enable_if&lt;!decltype(hasSerialize(obj))::value, std::string&gt;::type\r\n{\r\nreturn to_string(obj);\r\n}\r\n\r\nc++11的实现\r\n\r\n#if 1\r\n\r\n//模板要求两个形参，有两个版本，一个版本带默认形参，一个是特化版本\r\n\r\n//现在只传了一个模板参数，匹配的情况是，若特化版本和默认形参一致，则调用特化版本，若特化版本与默认形参不一致，则调用默认形参版本\r\n\r\ntemplate &lt;typename T, typename = std::string&gt;\r\nstruct hasSerialize : std::false_type\r\n{\r\n};\r\n\r\ntemplate &lt;typename T&gt;\r\nstruct hasSerialize&lt;T, decltype(std::declval&lt;T&gt;().serialize())&gt; : std::true_type\r\n{\r\n};\r\n\r\n#else\r\n\r\ntemplate &lt;class T&gt; struct hasSerialize\r\n{\r\ntemplate &lt;typename C&gt; static constexpr decltype(std::declval&lt;C&gt;().serialize(), bool()) test(int /* unused */)\r\n\r\n{\r\nreturn true;\r\n}\r\n\r\ntemplate &lt;typename C&gt; static constexpr bool test(...)\r\n{\r\nreturn false;\r\n}\r\n\r\nstatic constexpr bool value = test&lt;T&gt;(int());\r\n};\r\n\r\n#endif\r\n\r\ntemplate &lt;class T&gt;\r\nauto serialize(const T&amp; obj)\r\n-&gt;typename std::enable_if&lt;hasSerialize&lt;T&gt;::value, std::string&gt;::type\r\n{\r\n\r\nreturn obj.serialize();\r\n\r\n}\r\n\r\ntemplate &lt;class T&gt;\r\nauto serialize(const T&amp; obj)\r\n-&gt;typename std::enable_if&lt;not hasSerialize&lt;T&gt;::value, std::string&gt;::type\r\n{\r\n\r\nreturn to_string(obj);\r\n\r\n}\r\n\r\nc++98的实现\r\n\r\ntemplate &lt;class T&gt; struct hasSerialize\r\n{\r\ntypedef char yes[1];\r\ntypedef yes no[2];\r\n\r\ntemplate &lt;typename U, U u&gt; struct reallyHas;\r\n\r\ntemplate &lt;typename C&gt; static yes&amp; test(reallyHas&lt;std::string (C::*)(), &amp;C::serialize&gt;* /*unused*/) { }\r\ntemplate &lt;typename C&gt; static yes&amp; test(reallyHas&lt;std::string (C::*)() const, &amp;C::serialize&gt;* /*unused*/) { }\r\n\r\ntemplate &lt;typename&gt; static no&amp; test(...) { /* dark matter */ }\r\n\r\nstatic const bool value = sizeof(test&lt;T&gt;(0)) == sizeof(yes);\r\n};\r\n\r\nclass A\r\n{\r\npublic:\r\nint serialize() const\r\n{\r\nreturn 5;//\"yes\";\r\n}\r\n};\r\n\r\nint main()\r\n{\r\n//int a = 5;\r\nA a;\r\ncout&lt;&lt;serialize(a)&lt;&lt;endl;\r\n}','SFINAE技术','','inherit','closed','closed','','70-revision-v1','','','2018-10-09 05:44:22','2018-10-09 05:44:22','',70,'http://45.77.202.181/index.php/2018/10/09/70-revision-v1/',0,'revision','',0),(72,1,'2018-10-09 05:45:17','2018-10-09 05:45:17','bitbake可以理解为烹饪，把编译软件包当做一个烹饪的过程，烹饪需要很多配料被称之为recipes，里面有meta-5g文件夹，里面有很多配料表，都是.bb为扩展名的文件。\r\n\r\nbitbake库地址：<a href=\"ssh://gerrit.ext.net.nokia.com:29418/MN/5G/COMMON/integration\" rel=\"nofollow\">ssh://gerrit.ext.net.nokia.com:29418/MN/5G/COMMON/integration</a>\r\n\r\n1、我们需要source  bitbake 环境变量，这样才可以使用bitbake命令\r\n\r\nsource /var/fpwork/fish/test/sdk/integration/oe-init-build-env\r\n\r\n2、打大包，有一张总的配料表叫  integration-AirScale.bb 在integration/meta-5g-cb/recipes-integration/integration-AirScale文件夹下。\r\n\r\n通过环境变量PRONTO_NAME=5G18A PIPELINE=master_classicalbts_l1r3 ，则<a class=\"external-link\" href=\"http://integration-airscale.bb/\" rel=\"nofollow\">integration-AirScale.bb</a>会引入components-master_classicalbts_l1r3.inc这个头文件，里面包含打包所需要的配料\r\n<div class=\"table-wrap\">\r\n<table class=\"confluenceTable\"><colgroup><col /></colgroup>\r\n<tbody>\r\n<tr>\r\n<th class=\"confluenceTh\">DEPENDS = \"\\\r\nloner-r3-4.1832.2 \\\r\nlogging-agent-4.0 \\\r\nlinsup-4.83 \\\r\ndeployment-4.8 \\\r\nrf-5GH3-5G18A \\\r\nrf-5GL3-5G18A \\\r\nrf-5GP2-5G18A \\\r\nl2-lo-4.0 \\\r\nl2-hi-4.0 \\\r\ncp-rt-4.0 \\\r\nl2-ps-4.0 \\\r\nl2-rt-common-4.0 \\\r\n${@get_version_from_env(\'ENV_TRS\', ENV_FILE)} \\\r\ncplane-4.0 \\\r\nnode-js-4.8 \\\r\nnodeoam-4.8 \\\r\noamagentjs-4.8 \\\r\nracoam-4.8 \\\r\nsiteoam-4.8 \\\r\nsloader-4.8 \\\r\nnloader-4.8 \\\r\nscfvalidator-4.8 \\\r\nfmcontainer-1.0 \\\r\nalarmconvcpplib-1 \\\r\nalarmlightcli-1 \\\r\nalarmlightlib-1 \\\r\nalarmmoconverter-1 \\\r\nallightprocessor-1 \\\r\ncalarm-1 \\\r\ncommutil-1 \\\r\ncppalarm-1 \\\r\nlogf-1 \\\r\nrelimesg-1 \\\r\n\"</th>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n3、打包前，我们需要将配料表更新，可以执行命令\r\n\r\nbitbake -c fetchall integration-AirScale\r\n\r\n4、进入一个cache目录，然后执行打包，是不是很方便？\r\n\r\nbitbake integration-AirScale\r\n\r\n5、上面的1,2,3,4可以使用一个脚本完成，那就是每个模块都有的prepare_sdk.sh，稍加改造就可以了，相信你也会的。\r\n\r\n那我们来看看第4步到底做了什么，它是如何获取配方，再烹饪出一个包的呢？\r\n\r\n6、先将各个配料自行烹饪，没一味配料，都会经过do_fetch，do_configure, do_compile, do_intall, do_package_nokia\r\n\r\n每个配料都有自己的工作目录，比如sdk5g\\cache\\bitbake_build_artifacts\\asik-x86_64-ps_lfs\\build\\tmp\\work\\syslog-proxy-4.0.0-1533603498-r0\r\n\r\n里面有一个temp包含每一个烹饪步骤的log，非常有用\r\n\r\n7、一些通用烹饪步骤的行为定义在哪呢？一般配料表都会继承inherit cmake，这个在class目录下的cmake.bbclass\r\n<div class=\"table-wrap\">\r\n<table class=\"confluenceTable\"><colgroup><col /></colgroup>\r\n<tbody>\r\n<tr>\r\n<th class=\"confluenceTh\">cmake_do_configure(){\r\ncd ${BUILD_DIR}\r\ncmake ${EXTRA_OECMAKE} ${OECMAKE_SOURCEPATH}\r\n}\r\n\r\ncmake_do_compile(){\r\ncd ${BUILD_DIR}\r\nmake -j\"${PARALLEL_BUILD_JOBS}\"\r\n}\r\n\r\ncmake_do_install(){\r\ncd ${BUILD_DIR}\r\nmake install\r\n}\r\n\r\ncmake_do_package_nokia(){\r\ncd ${BUILD_DIR}\r\nif [ -f CPackConfig.cmake ]; then\r\nfor PACKAGE in $PACKAGES; do\r\nbbnote \"Packaging ${PACKAGE}\"\r\ncmake ${EXTRA_OECPACK} -DCPACK_GENERATOR=\'TGZ\' -DCPACK_PACKAGE_FILE_NAME=${PACKAGE} .\r\nmake package\r\nif [ \"${PACKAGE_OUTPUT_DIR}\" ]; then\r\nmkdir -p $PACKAGE_OUTPUT_DIR\r\nmv ${PACKAGE}.tar.gz $PACKAGE_OUTPUT_DIR/${PACKAGE}.tgz\r\nfi\r\ndone\r\nelse\r\nbbnote \"CPackConfig.cmake not found\"\r\nfi\r\n}</th>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n8、配料编译好后会产生很多的tgz包，从上面的do_package_nokia可以看到软件包都拷贝到了$PACKAGE_OUTPUT_DIR\r\n\r\n这里的$PACKAGE_OUTPUT_DIR会等于sdk5g\\cache\\bitbake_build_artifacts\\asik-x86_64-ps_lfs\\build\\artifacts\\delivery\r\n\r\n我们在里面可以发现比如syslog-proxy.tgz\r\n\r\n9、配料准备好了，就可以开始打打包了，行为定义在<a class=\"external-link\" href=\"http://integration-airscale.bb/\" rel=\"nofollow\">integration-AirScale.bb</a>中，主要包括\r\n\r\n9.1  cp -R \"${fsip_components}\"/* \"${build_dir}\"  //将所有配方生成的软件包拷贝到<a class=\"external-link\" href=\"http://integration-airscale.bb/\" rel=\"nofollow\">integration-AirScale</a>的工作目录下的build_dir，sdk5g\\cache\\bitbake_build_artifacts\\asik-x86_64-ps_lfs\\build\\tmp\\work\\integration-AirScale-1.0-r0\\build\\build_dir\r\n\r\n9.2  cp -R \"${linsup_dir}\" \"${build_dir}\" //将linsup包内容也拷贝过来, 真正用来做大包的是linsup库\r\n\r\n9.3  make linsup.btssm -j48  // 编译linsup包\r\n\r\n10、编译classical包的linsup包地址是：\r\n\r\n<a class=\"external-link\" href=\"https://svne1.ext.net.nokia.com/isource/svnroot/BTS_SCM_LINSUP_5G/branches/master_classicalbts_l1r3_LinSUP_promoted\" rel=\"nofollow\">https://svne1.ext.net.nokia.com/isource/svnroot/BTS_SCM_LINSUP_5G/branches/master_classicalbts_l1r3_LinSUP_promoted</a>。\r\n\r\n11、linsup包的makefile主要在\r\n\r\n/master_classicalbts_l1r3_LinSUP_promoted\\C_Application\\SC_LINSUP\\Make\\Makefile 里面包含了组成大包的命令\r\n\r\ntar -cf \"$(package_target)/$(LTE_RLABEL)_release_image.tar\" -C \"$(dir_images)/FCTL/flash\" .\r\n\r\n12、组大包是依靠master_classicalbts_l1r3_LinSUP_promoted\\D_Build\\BuildContent\\5G\\FSMr4\\modules\\modules.xml\r\n\r\n和\\master_classicalbts_l1r3_LinSUP_promoted\\D_Build\\BuildContent\\5G\\FSMr4\\files下各个配料的xml文件决定的\r\n\r\n这一次编译大包就是少了master_classicalbts_l1r3_LinSUP_promoted\\D_Build\\BuildContent\\5G\\FSMr4\\files\\syslog-proxy.xml这个文件，导致最后打打包中缺少了syslog-proxy这个组件\r\n<div class=\"table-wrap\">\r\n<table class=\"confluenceTable\"><colgroup><col /></colgroup>\r\n<tbody>\r\n<tr>\r\n<th class=\"confluenceTh\">\r\n<div class=\"content-wrapper\">\r\n\r\n<time class=\"date-past handy-date-time\" datetime=\"2018-08-09\"><input class=\"handy-date-input\" type=\"text\" placeholder=\"yy-M-d\" data-aui-dp-uuid=\"0\" /><span class=\"handy-date-value\">2018-8-9</span></time> syslog-proxy.xml\r\n\r\n&lt;?xml version=\"1.0\"?&gt;\r\n&lt;file name=\"syslog-proxy\" operation=\"symlink\"&gt;\r\n&lt;source&gt;\r\n&lt;path&gt;${PROJECT_ROOT}/&lt;/path&gt;\r\n&lt;filename&gt;syslog-proxy&lt;/filename&gt;\r\n&lt;extension&gt;.tgz&lt;/extension&gt;\r\n&lt;/source&gt;\r\n&lt;version type=\"shortversion\"/&gt;\r\n&lt;modules&gt;\r\n&lt;module name=\"FCTL\"&gt;\r\n&lt;buildElement hwUnit=\"{mname}\" path=\"/{mname}/\" targetPath=\"/rom/swpool/5G/CPNBNODE/addons/\" compressed=\"\" encrypted=\"\"&gt;\r\n&lt;/buildElement&gt;\r\n&lt;/module&gt;\r\n&lt;module name=\"FCTL_CPCL\"&gt;\r\n&lt;buildElement hwUnit=\"FCTL\" path=\"/FCTL/\" targetPath=\"/rom/swpool/5G/CPCLNODE/addons/\" compressed=\"\" encrypted=\"\"&gt;\r\n&lt;/buildElement&gt;\r\n&lt;/module&gt;\r\n&lt;module name=\"FCTL_CPUE\"&gt;\r\n&lt;buildElement hwUnit=\"FCTL\" path=\"/FCTL/\" targetPath=\"/rom/swpool/5G/CPUENODE/addons/\" compressed=\"\" encrypted=\"\"&gt;\r\n&lt;/buildElement&gt;\r\n&lt;/module&gt;\r\n&lt;module name=\"FCTL_CPIF\"&gt;\r\n&lt;buildElement hwUnit=\"FCTL\" path=\"/FCTL/\" targetPath=\"/rom/swpool/5G/CPIFNODE/addons/\" compressed=\"\" encrypted=\"\"&gt;\r\n&lt;/buildElement&gt;\r\n&lt;/module&gt;\r\n&lt;/modules&gt;\r\n&lt;puttibatti&gt;yes&lt;/puttibatti&gt;\r\n&lt;filedirectory&gt;yes&lt;/filedirectory&gt;\r\n&lt;/file&gt;\r\n\r\n</div></th>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n13、至此打大包的过程分析完毕了','打包之bitbake','','publish','open','open','','%e6%89%93%e5%8c%85%e4%b9%8bbitbake','','','2018-10-09 05:45:17','2018-10-09 05:45:17','',0,'http://45.77.202.181/?p=72',0,'post','',0),(73,1,'2018-10-09 05:45:17','2018-10-09 05:45:17','bitbake可以理解为烹饪，把编译软件包当做一个烹饪的过程，烹饪需要很多配料被称之为recipes，里面有meta-5g文件夹，里面有很多配料表，都是.bb为扩展名的文件。\r\n\r\nbitbake库地址：<a href=\"ssh://gerrit.ext.net.nokia.com:29418/MN/5G/COMMON/integration\" rel=\"nofollow\">ssh://gerrit.ext.net.nokia.com:29418/MN/5G/COMMON/integration</a>\r\n\r\n1、我们需要source  bitbake 环境变量，这样才可以使用bitbake命令\r\n\r\nsource /var/fpwork/fish/test/sdk/integration/oe-init-build-env\r\n\r\n2、打大包，有一张总的配料表叫  integration-AirScale.bb 在integration/meta-5g-cb/recipes-integration/integration-AirScale文件夹下。\r\n\r\n通过环境变量PRONTO_NAME=5G18A PIPELINE=master_classicalbts_l1r3 ，则<a class=\"external-link\" href=\"http://integration-airscale.bb/\" rel=\"nofollow\">integration-AirScale.bb</a>会引入components-master_classicalbts_l1r3.inc这个头文件，里面包含打包所需要的配料\r\n<div class=\"table-wrap\">\r\n<table class=\"confluenceTable\"><colgroup><col /></colgroup>\r\n<tbody>\r\n<tr>\r\n<th class=\"confluenceTh\">DEPENDS = \"\\\r\nloner-r3-4.1832.2 \\\r\nlogging-agent-4.0 \\\r\nlinsup-4.83 \\\r\ndeployment-4.8 \\\r\nrf-5GH3-5G18A \\\r\nrf-5GL3-5G18A \\\r\nrf-5GP2-5G18A \\\r\nl2-lo-4.0 \\\r\nl2-hi-4.0 \\\r\ncp-rt-4.0 \\\r\nl2-ps-4.0 \\\r\nl2-rt-common-4.0 \\\r\n${@get_version_from_env(\'ENV_TRS\', ENV_FILE)} \\\r\ncplane-4.0 \\\r\nnode-js-4.8 \\\r\nnodeoam-4.8 \\\r\noamagentjs-4.8 \\\r\nracoam-4.8 \\\r\nsiteoam-4.8 \\\r\nsloader-4.8 \\\r\nnloader-4.8 \\\r\nscfvalidator-4.8 \\\r\nfmcontainer-1.0 \\\r\nalarmconvcpplib-1 \\\r\nalarmlightcli-1 \\\r\nalarmlightlib-1 \\\r\nalarmmoconverter-1 \\\r\nallightprocessor-1 \\\r\ncalarm-1 \\\r\ncommutil-1 \\\r\ncppalarm-1 \\\r\nlogf-1 \\\r\nrelimesg-1 \\\r\n\"</th>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n3、打包前，我们需要将配料表更新，可以执行命令\r\n\r\nbitbake -c fetchall integration-AirScale\r\n\r\n4、进入一个cache目录，然后执行打包，是不是很方便？\r\n\r\nbitbake integration-AirScale\r\n\r\n5、上面的1,2,3,4可以使用一个脚本完成，那就是每个模块都有的prepare_sdk.sh，稍加改造就可以了，相信你也会的。\r\n\r\n那我们来看看第4步到底做了什么，它是如何获取配方，再烹饪出一个包的呢？\r\n\r\n6、先将各个配料自行烹饪，没一味配料，都会经过do_fetch，do_configure, do_compile, do_intall, do_package_nokia\r\n\r\n每个配料都有自己的工作目录，比如sdk5g\\cache\\bitbake_build_artifacts\\asik-x86_64-ps_lfs\\build\\tmp\\work\\syslog-proxy-4.0.0-1533603498-r0\r\n\r\n里面有一个temp包含每一个烹饪步骤的log，非常有用\r\n\r\n7、一些通用烹饪步骤的行为定义在哪呢？一般配料表都会继承inherit cmake，这个在class目录下的cmake.bbclass\r\n<div class=\"table-wrap\">\r\n<table class=\"confluenceTable\"><colgroup><col /></colgroup>\r\n<tbody>\r\n<tr>\r\n<th class=\"confluenceTh\">cmake_do_configure(){\r\ncd ${BUILD_DIR}\r\ncmake ${EXTRA_OECMAKE} ${OECMAKE_SOURCEPATH}\r\n}\r\n\r\ncmake_do_compile(){\r\ncd ${BUILD_DIR}\r\nmake -j\"${PARALLEL_BUILD_JOBS}\"\r\n}\r\n\r\ncmake_do_install(){\r\ncd ${BUILD_DIR}\r\nmake install\r\n}\r\n\r\ncmake_do_package_nokia(){\r\ncd ${BUILD_DIR}\r\nif [ -f CPackConfig.cmake ]; then\r\nfor PACKAGE in $PACKAGES; do\r\nbbnote \"Packaging ${PACKAGE}\"\r\ncmake ${EXTRA_OECPACK} -DCPACK_GENERATOR=\'TGZ\' -DCPACK_PACKAGE_FILE_NAME=${PACKAGE} .\r\nmake package\r\nif [ \"${PACKAGE_OUTPUT_DIR}\" ]; then\r\nmkdir -p $PACKAGE_OUTPUT_DIR\r\nmv ${PACKAGE}.tar.gz $PACKAGE_OUTPUT_DIR/${PACKAGE}.tgz\r\nfi\r\ndone\r\nelse\r\nbbnote \"CPackConfig.cmake not found\"\r\nfi\r\n}</th>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n8、配料编译好后会产生很多的tgz包，从上面的do_package_nokia可以看到软件包都拷贝到了$PACKAGE_OUTPUT_DIR\r\n\r\n这里的$PACKAGE_OUTPUT_DIR会等于sdk5g\\cache\\bitbake_build_artifacts\\asik-x86_64-ps_lfs\\build\\artifacts\\delivery\r\n\r\n我们在里面可以发现比如syslog-proxy.tgz\r\n\r\n9、配料准备好了，就可以开始打打包了，行为定义在<a class=\"external-link\" href=\"http://integration-airscale.bb/\" rel=\"nofollow\">integration-AirScale.bb</a>中，主要包括\r\n\r\n9.1  cp -R \"${fsip_components}\"/* \"${build_dir}\"  //将所有配方生成的软件包拷贝到<a class=\"external-link\" href=\"http://integration-airscale.bb/\" rel=\"nofollow\">integration-AirScale</a>的工作目录下的build_dir，sdk5g\\cache\\bitbake_build_artifacts\\asik-x86_64-ps_lfs\\build\\tmp\\work\\integration-AirScale-1.0-r0\\build\\build_dir\r\n\r\n9.2  cp -R \"${linsup_dir}\" \"${build_dir}\" //将linsup包内容也拷贝过来, 真正用来做大包的是linsup库\r\n\r\n9.3  make linsup.btssm -j48  // 编译linsup包\r\n\r\n10、编译classical包的linsup包地址是：\r\n\r\n<a class=\"external-link\" href=\"https://svne1.ext.net.nokia.com/isource/svnroot/BTS_SCM_LINSUP_5G/branches/master_classicalbts_l1r3_LinSUP_promoted\" rel=\"nofollow\">https://svne1.ext.net.nokia.com/isource/svnroot/BTS_SCM_LINSUP_5G/branches/master_classicalbts_l1r3_LinSUP_promoted</a>。\r\n\r\n11、linsup包的makefile主要在\r\n\r\n/master_classicalbts_l1r3_LinSUP_promoted\\C_Application\\SC_LINSUP\\Make\\Makefile 里面包含了组成大包的命令\r\n\r\ntar -cf \"$(package_target)/$(LTE_RLABEL)_release_image.tar\" -C \"$(dir_images)/FCTL/flash\" .\r\n\r\n12、组大包是依靠master_classicalbts_l1r3_LinSUP_promoted\\D_Build\\BuildContent\\5G\\FSMr4\\modules\\modules.xml\r\n\r\n和\\master_classicalbts_l1r3_LinSUP_promoted\\D_Build\\BuildContent\\5G\\FSMr4\\files下各个配料的xml文件决定的\r\n\r\n这一次编译大包就是少了master_classicalbts_l1r3_LinSUP_promoted\\D_Build\\BuildContent\\5G\\FSMr4\\files\\syslog-proxy.xml这个文件，导致最后打打包中缺少了syslog-proxy这个组件\r\n<div class=\"table-wrap\">\r\n<table class=\"confluenceTable\"><colgroup><col /></colgroup>\r\n<tbody>\r\n<tr>\r\n<th class=\"confluenceTh\">\r\n<div class=\"content-wrapper\">\r\n\r\n<time class=\"date-past handy-date-time\" datetime=\"2018-08-09\"><input class=\"handy-date-input\" type=\"text\" placeholder=\"yy-M-d\" data-aui-dp-uuid=\"0\" /><span class=\"handy-date-value\">2018-8-9</span></time> syslog-proxy.xml\r\n\r\n&lt;?xml version=\"1.0\"?&gt;\r\n&lt;file name=\"syslog-proxy\" operation=\"symlink\"&gt;\r\n&lt;source&gt;\r\n&lt;path&gt;${PROJECT_ROOT}/&lt;/path&gt;\r\n&lt;filename&gt;syslog-proxy&lt;/filename&gt;\r\n&lt;extension&gt;.tgz&lt;/extension&gt;\r\n&lt;/source&gt;\r\n&lt;version type=\"shortversion\"/&gt;\r\n&lt;modules&gt;\r\n&lt;module name=\"FCTL\"&gt;\r\n&lt;buildElement hwUnit=\"{mname}\" path=\"/{mname}/\" targetPath=\"/rom/swpool/5G/CPNBNODE/addons/\" compressed=\"\" encrypted=\"\"&gt;\r\n&lt;/buildElement&gt;\r\n&lt;/module&gt;\r\n&lt;module name=\"FCTL_CPCL\"&gt;\r\n&lt;buildElement hwUnit=\"FCTL\" path=\"/FCTL/\" targetPath=\"/rom/swpool/5G/CPCLNODE/addons/\" compressed=\"\" encrypted=\"\"&gt;\r\n&lt;/buildElement&gt;\r\n&lt;/module&gt;\r\n&lt;module name=\"FCTL_CPUE\"&gt;\r\n&lt;buildElement hwUnit=\"FCTL\" path=\"/FCTL/\" targetPath=\"/rom/swpool/5G/CPUENODE/addons/\" compressed=\"\" encrypted=\"\"&gt;\r\n&lt;/buildElement&gt;\r\n&lt;/module&gt;\r\n&lt;module name=\"FCTL_CPIF\"&gt;\r\n&lt;buildElement hwUnit=\"FCTL\" path=\"/FCTL/\" targetPath=\"/rom/swpool/5G/CPIFNODE/addons/\" compressed=\"\" encrypted=\"\"&gt;\r\n&lt;/buildElement&gt;\r\n&lt;/module&gt;\r\n&lt;/modules&gt;\r\n&lt;puttibatti&gt;yes&lt;/puttibatti&gt;\r\n&lt;filedirectory&gt;yes&lt;/filedirectory&gt;\r\n&lt;/file&gt;\r\n\r\n</div></th>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n13、至此打大包的过程分析完毕了','打包之bitbake','','inherit','closed','closed','','72-revision-v1','','','2018-10-09 05:45:17','2018-10-09 05:45:17','',72,'http://45.77.202.181/index.php/2018/10/09/72-revision-v1/',0,'revision','',0),(74,1,'2018-10-09 05:45:52','2018-10-09 05:45:52','1、最原始\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">#include &lt;iostream&gt;\r\n#include &lt;vector&gt;\r\n\r\nusing namespace std;\r\n\r\nclass A\r\n{\r\npublic:\r\n    A(){cout&lt;&lt;\"A ctor\"&lt;&lt;endl;}\r\n    A(const A&amp;){cout&lt;&lt;\"A copy\"&lt;&lt;endl;}\r\n    A(const A&amp;&amp;){cout&lt;&lt;\"A move\"&lt;&lt;endl;}\r\n    ~A(){cout&lt;&lt;\"A dtor\"&lt;&lt;endl;}\r\n};\r\n\r\nstd::vector&lt;A&gt; vec;\r\nvoid fun(A a)\r\n{\r\n    vec.push_back(a);\r\n}\r\n\r\nint main()\r\n{\r\n    A a;\r\n    fun(a);\r\n    return 0;\r\n}</pre>\r\n2、增加引用可减少一次拷贝\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">std::vector&lt;A&gt; vec;\r\nvoid fun(A&amp; a)\r\n{\r\n    vec.push_back(a);\r\n}\r\n\r\nint main() \r\n{\r\n    A a;\r\n    fun(a);\r\n    return 0;\r\n}\r\n\r\n</pre>\r\n3、引用的基础上，增加std::move，虽然目的达到, 但有风险，错误的做法，因为不知道外面对a的操作\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">std::vector&lt;A&gt; vec;\r\nvoid fun(A&amp; a)\r\n{\r\n    vec.push_back(std::move(a));\r\n}</pre>\r\n4、引用的基础上，增加const，有编程了copy，而不是move了，这里A const&amp; a类型经过move之后，是A const&amp;&amp; 类型，push_back不接受这个类型，退化上调用A const&amp;即拷贝。所以move并不是真的就move，move发生在创建新对象的时候，move值是try to move\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">std::vector&lt;A&gt; vec;\r\nvoid fun(A const&amp; a)\r\n{\r\n    std::cout &lt;&lt; \"-------\" &lt;&lt; std::endl;\r\n    vec.push_back(std::move(a));\r\n}\r\n\r\n</pre>\r\n5、不用引用，一次构造，两次移动，不耗性能，所以看到一个函数传了一个对象没有引用，不用惊讶，里面八成用了移动\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">void fun(A a)\r\n{\r\n    vec.push_back(std::move(a));\r\n}\r\n\r\nint main() {\r\n    A a;\r\n    fun(std::move(a));\r\n    std::cout &lt;&lt; \"Hello, World!\" &lt;&lt; std::endl;\r\n    return 0;\r\n}</pre>\r\n<strong> 输出：</strong>\r\n\r\n<strong>A ctor\r\nA move\r\nA move</strong>\r\n\r\n6、改成右值引用，可再减少一次移动，但不要傻乎乎的用A const&amp;&amp; a，不然又变拷贝了\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">void fun(A&amp;&amp; a)\r\n{\r\n    std::cout &lt;&lt; \"-------\" &lt;&lt; std::endl;\r\n    vec.push_back(std::move(a));\r\n}\r\n\r\nint main() {\r\n    A a;\r\n    fun(std::move(a));\r\n    std::cout &lt;&lt; \"Hello, World!\" &lt;&lt; std::endl;\r\n    return 0;\r\n}\r\n\r\nA ctor\r\nA move</pre>\r\n<p align=\"left\">7、改成模板，又变的有风险了，正常来说，右值引用不能引用左值，但在模板中，因为引用坍缩规则，右值引用可能退化成左值引用，风险同3.</p>\r\n\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">template &lt;class T&gt;\r\nvoid fun(T&amp;&amp; a)\r\n{\r\n    vec.push_back(std::move(a));\r\n}\r\n\r\nint main() {\r\n    A a;\r\n    fun(a);\r\n    std::cout &lt;&lt; \"Hello, World!\" &lt;&lt; std::endl;\r\n    return 0;\r\n}</pre>\r\n8、最终版，完美转发\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">template &lt;class T&gt;\r\nvoid fun(T&amp;&amp; a)\r\n{\r\n    vec.push_back(std::forward&lt;T&gt;(a));\r\n}\r\n\r\nint main() {\r\n    A a;\r\n    fun(std::move(a));\r\n    std::cout &lt;&lt; \"Hello, World!\" &lt;&lt; std::endl;\r\n    return 0;\r\n}\r\n\r\nA ctor\r\nA move</pre>\r\n&nbsp;\r\n\r\n&nbsp;','完美转发','','publish','open','open','','%e5%ae%8c%e7%be%8e%e8%bd%ac%e5%8f%91','','','2018-10-10 06:51:32','2018-10-10 06:51:32','',0,'http://45.77.202.181/?p=74',0,'post','',0),(75,1,'2018-10-09 05:45:52','2018-10-09 05:45:52','1、最原始\r\n\r\n#include &lt;iostream&gt;\r\n\r\n#include &lt;vector&gt;\r\n\r\n&nbsp;\r\n\r\nusing namespace std;\r\n\r\n&nbsp;\r\n\r\nclass A\r\n\r\n{\r\n\r\npublic:\r\n\r\nA(){cout&lt;&lt;\"A ctor\"&lt;&lt;endl;}\r\n\r\nA(const A&amp;){cout&lt;&lt;\"A copy\"&lt;&lt;endl;}\r\n\r\nA(const A&amp;&amp;){cout&lt;&lt;\"A move\"&lt;&lt;endl;}\r\n\r\n~A(){cout&lt;&lt;\"A dtor\"&lt;&lt;endl;}\r\n\r\n};\r\n\r\n&nbsp;\r\n\r\nstd::vector&lt;A&gt; vec;\r\n\r\nvoid fun(A a)\r\n\r\n{\r\n\r\nvec.push_back(a);\r\n\r\n}\r\n\r\n&nbsp;\r\n\r\nint main() {\r\n\r\nA a;\r\n\r\nfun(a);\r\n\r\nreturn 0;\r\n\r\n}\r\n\r\n&nbsp;\r\n\r\n2、增加引用可减少一次拷贝\r\n\r\nstd::vector&lt;A&gt; vec;\r\n\r\nvoid fun(A&amp; a)\r\n\r\n{\r\n\r\nvec.push_back(a);\r\n\r\n}\r\n\r\n&nbsp;\r\n\r\nint main() {\r\n\r\nA a;\r\n\r\nfun(a);\r\n\r\nreturn 0;\r\n\r\n}\r\n\r\n&nbsp;\r\n\r\n3、引用的基础上，增加std::move，虽然目的达到, 但有风险，错误的做法，因为不知道外面对a的操作\r\n\r\nstd::vector&lt;A&gt; vec;\r\n\r\nvoid fun(A&amp; a)\r\n\r\n{\r\n\r\nvec.push_back(std::move(a));\r\n\r\n}\r\n\r\n&nbsp;\r\n\r\n4、引用的基础上，增加const，有编程了copy，而不是move了，这里A const&amp; a类型经过move之后，是A const&amp;&amp; 类型，push_back不接受这个类型，退化上调用A const&amp;即拷贝。所以move并不是真的就move，move发生在创建新对象的时候，move值是try to move\r\n\r\nstd::vector&lt;A&gt; vec;\r\n\r\nvoid fun(A const&amp; a)\r\n\r\n{\r\n\r\nstd::cout &lt;&lt; \"-------\" &lt;&lt; std::endl;\r\n\r\nvec.push_back(std::move(a));\r\n\r\n}\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n5、不用引用，一次构造，两次移动，不耗性能，所以看到一个函数传了一个对象没有引用，不用惊讶，里面八成用了移动\r\n\r\nvoid fun(A a)\r\n\r\n{\r\n\r\nvec.push_back(std::move(a));\r\n\r\n}\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\nint main() {\r\n\r\nA a;\r\n\r\nfun(std::move(a));\r\n\r\nstd::cout &lt;&lt; \"Hello, World!\" &lt;&lt; std::endl;\r\n\r\nreturn 0;\r\n\r\n}\r\n\r\n&nbsp;\r\n\r\n<strong>A ctor</strong>\r\n\r\n<strong>A move</strong>\r\n\r\n<strong>A move</strong>\r\n\r\n<strong> </strong>\r\n\r\n6、改成右值引用，可再减少一次移动，但不要傻乎乎的用A const&amp;&amp; a，不然又变拷贝了\r\n\r\nvoid fun(A&amp;&amp; a)\r\n\r\n{\r\n\r\nstd::cout &lt;&lt; \"-------\" &lt;&lt; std::endl;\r\n\r\nvec.push_back(std::move(a));\r\n\r\n}\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\nint main() {\r\n\r\nA a;\r\n\r\nfun(std::move(a));\r\n\r\nstd::cout &lt;&lt; \"Hello, World!\" &lt;&lt; std::endl;\r\n\r\nreturn 0;\r\n\r\n}\r\n\r\n&nbsp;\r\n\r\n<strong>A ctor</strong>\r\n\r\n<strong>A move</strong>\r\n\r\n<strong> </strong>\r\n<p align=\"left\">7、改成模板，又变的有风险了，正常来说，右值引用不能引用左值，但在模板中，因为引用坍缩规则，右值引用可能退化成左值引用，风险同3.</p>\r\ntemplate &lt;class T&gt;\r\n\r\nvoid fun(T&amp;&amp; a)\r\n\r\n{\r\n\r\nvec.push_back(std::move(a));\r\n\r\n}\r\n\r\n&nbsp;\r\n\r\nint main() {\r\n\r\nA a;\r\n\r\nfun(a);\r\n\r\nstd::cout &lt;&lt; \"Hello, World!\" &lt;&lt; std::endl;\r\n\r\nreturn 0;\r\n\r\n}\r\n\r\n<strong> </strong>\r\n\r\n8、最终版，完美转发\r\n\r\ntemplate &lt;class T&gt;\r\n\r\nvoid fun(T&amp;&amp; a)\r\n\r\n{\r\n\r\nvec.push_back(std::forward&lt;T&gt;(a));\r\n\r\n}\r\n\r\n&nbsp;\r\n\r\nint main() {\r\n\r\nA a;\r\n\r\nfun(std::move(a));\r\n\r\nstd::cout &lt;&lt; \"Hello, World!\" &lt;&lt; std::endl;\r\n\r\nreturn 0;\r\n\r\n}\r\n\r\n<strong> </strong>\r\n\r\n<strong>A ctor</strong>\r\n\r\n<strong>A move</strong>','完美转发','','inherit','closed','closed','','74-revision-v1','','','2018-10-09 05:45:52','2018-10-09 05:45:52','',74,'http://45.77.202.181/index.php/2018/10/09/74-revision-v1/',0,'revision','',0),(76,1,'2018-10-09 05:46:27','2018-10-09 05:46:27','如果判断条件在编译器即可确定，则应用模板来替换if语句\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">#include &lt;iostream&gt;\r\n#include &lt;functional&gt;\r\n#include &lt;vector&gt;\r\n\r\nusing namespace std;\r\n\r\ntemplate&lt;int n&gt;\r\nvoid fun()\r\n{\r\n   cout&lt;&lt;\"eeeee\"&lt;&lt;endl;\r\n}\r\n\r\ntemplate&lt;&gt;\r\nvoid fun&lt;3&gt;()\r\n{\r\n    cout&lt;&lt;\"33333\"&lt;&lt;endl;\r\n}\r\n\r\ntemplate&lt;&gt;\r\nvoid fun&lt;5&gt;()\r\n{\r\n    cout&lt;&lt;\"55555\"&lt;&lt;endl;\r\n}\r\n\r\nint main()\r\n{\r\n    constexpr int n = 5;\r\n    fun&lt;n&gt;();\r\n    return 0;\r\n}</pre>\r\n&nbsp;\r\n\r\n&nbsp;','if语句的替换','','publish','open','open','','if%e8%af%ad%e5%8f%a5%e7%9a%84%e6%9b%bf%e6%8d%a2','','','2018-10-10 06:43:52','2018-10-10 06:43:52','',0,'http://45.77.202.181/?p=76',0,'post','',0),(77,1,'2018-10-09 05:46:27','2018-10-09 05:46:27','如果判断条件在编译器即可确定，则应用模板来替换if语句\r\n\r\n#include &lt;iostream&gt;\r\n\r\n#include &lt;functional&gt;\r\n#include &lt;vector&gt;\r\n\r\nusing namespace std;\r\n\r\ntemplate&lt;int n&gt;\r\nvoid fun()\r\n{\r\ncout&lt;&lt;\"eeeee\"&lt;&lt;endl;\r\n}\r\n\r\ntemplate&lt;&gt;\r\nvoid fun&lt;3&gt;()\r\n{\r\ncout&lt;&lt;\"33333\"&lt;&lt;endl;\r\n}\r\n\r\ntemplate&lt;&gt;\r\nvoid fun&lt;5&gt;()\r\n{\r\ncout&lt;&lt;\"55555\"&lt;&lt;endl;\r\n}\r\n\r\nint main() {\r\n\r\nconstexpr int n = 5;\r\nfun&lt;n&gt;();\r\nreturn 0;\r\n}','if语句的替换','','inherit','closed','closed','','76-revision-v1','','','2018-10-09 05:46:27','2018-10-09 05:46:27','',76,'http://45.77.202.181/index.php/2018/10/09/76-revision-v1/',0,'revision','',0),(78,1,'2018-10-09 05:46:54','2018-10-09 05:46:54','1、变量基础\r\n变量赋值，等号两边不能有空格\r\nmyname=VBird\r\n变量读取，使用$\r\necho $myname\r\n双引号会保持内部$符号的特性，而单引号不会\r\n\"name is $myname\"\r\n取消变量设置用unset\r\nunset myname\r\n反单引号可以执行命令\r\n`uname -r` 等于 $(uname -r)\r\nsh执行的脚本变量不会被记忆，source执行的脚本可以export变量\r\n2、变量操作\r\n${变量#, ##, %, %%内容}可以删减变量\r\n# 删左边开始最短\r\n## 删左边开始最长\r\n% 删右边开始最短\r\n%%删右边开始最长\r\n\r\n${变量//旧内容/新内容}可以替换变量\r\n//都替换\r\n/替换一个\r\n\r\n3、变量检查\r\nvar=${str:-expr}, 若str为空，则使用expr\r\nvar=${str:+expr}, 若str为非空，则使用expr\r\n有：的情况s，没有设置和空串都看成空\r\n若去掉：，则空严格要求没有设置\r\nvar=${str:=expr}，若str为空，则使用expr，同时设置str\r\n\r\n4、通配符， *任意 ？一个字符\r\n\r\n5、|| 和 &amp;&amp; 使用和c一样\r\n\r\n6、管道命令\r\ncut， grep， xargs， wc\r\n\r\n7、test 和 []用于变量或文件测试\r\n-z 变量是否为空\r\n-n 变量非空\r\n-f 是否为文件\r\n-d 是否为目录\r\n-r 文件可写\r\n-eq 相等\r\n-ge 大于等于\r\n\r\n[]要注意空格,[ \"yes\" == \"no\"]\r\n\r\n8、条件判断\r\nif [ ] then\r\nelif []; then\r\nfi\r\n\r\n9、case\r\ncase $hello in\r\n\"yes\")\r\necho \"yes\"\r\n;;\r\n\"no\")\r\necho \"no\"\r\n;;\r\n*)\r\necho \"default\"\r\n;;\r\nesac\r\n\r\n10 function name()\r\n{\r\necho \"yes\"\r\n}\r\n\r\n11 while\r\nwhile [ condition ] do\r\ndone\r\n\r\n12 for\r\nfor var in var1 var2 var3\r\ndo\r\ndone','shell脚本学习笔记','','publish','open','open','','shell%e8%84%9a%e6%9c%ac%e5%ad%a6%e4%b9%a0%e7%ac%94%e8%ae%b0','','','2018-10-10 01:45:45','2018-10-10 01:45:45','',0,'http://45.77.202.181/?p=78',0,'post','',0),(79,1,'2018-10-09 05:46:54','2018-10-09 05:46:54','1、变量基础\r\n变量赋值，等号两边不能有空格\r\nmyname=VBird\r\n变量读取，使用$\r\necho $myname\r\n双引号会保持内部$符号的特性，而单引号不会\r\n\"name is $myname\"\r\n取消变量设置用unset\r\nunset myname\r\n反单引号可以执行命令\r\n`uname -r` 等于 $(uname -r)\r\nsh执行的脚本变量不会被记忆，source执行的脚本可以export变量\r\n2、变量操作\r\n${变量#, ##, %, %%内容}可以删减变量\r\n# 删左边开始最短\r\n## 删左边开始最长\r\n% 删右边开始最短\r\n%%删右边开始最长\r\n\r\n${变量//旧内容/新内容}可以替换变量\r\n//都替换\r\n/替换一个\r\n\r\n3、变量检查\r\nvar=${str:-expr}, 若str为空，则使用expr\r\nvar=${str:+expr}, 若str为非空，则使用expr\r\n有：的情况s，没有设置和空串都看成空\r\n若去掉：，则空严格要求没有设置\r\nvar=${str:=expr}，若str为空，则使用expr，同时设置str\r\n\r\n4、通配符， *任意 ？一个字符\r\n\r\n5、|| 和 &amp;&amp; 使用和c一样\r\n\r\n6、管道命令\r\ncut， grep， xargs， wc\r\n\r\n7、test 和 []用于变量或文件测试\r\n-z 变量是否为空\r\n-n 变量非空\r\n-f 是否为文件\r\n-d 是否为目录\r\n-r 文件可写\r\n-eq 相等\r\n-ge 大于等于\r\n\r\n[]要注意空格,[ \"yes\" == \"no\"]\r\n\r\n8、条件判断\r\nif [ ] then\r\nelif []; then\r\nfi\r\n\r\n9、case\r\ncase $hello in\r\n\"yes\")\r\necho \"yes\"\r\n;;\r\n\"no\")\r\necho \"no\"\r\n;;\r\n*)\r\necho \"default\"\r\n;;\r\nesac\r\n\r\n10 function name()\r\n{\r\necho \"yes\"\r\n}\r\n\r\n11 while\r\nwhile [ condition ] do\r\ndone\r\n\r\n12 for\r\nfor var in var1 var2 var3\r\ndo\r\ndone','shell脚本学习笔记','','inherit','closed','closed','','78-revision-v1','','','2018-10-09 05:46:54','2018-10-09 05:46:54','',78,'http://45.77.202.181/index.php/2018/10/09/78-revision-v1/',0,'revision','',0),(80,1,'2018-10-09 05:47:22','2018-10-09 05:47:22','通常只需要设置一条命令即可，它会帮助设置gcc，cmake，git，python....等几乎所有需要的环境\r\n\r\nsource /5g/tools/latest/env-setup.sh\r\n\r\n可是，它是怎么做到的，具体哪些设置命令的环境，版本是多少，不得而知。这里研究了一下：\r\n\r\n首先上面的命令，主要是执行了下面两条\r\n\r\nsource seesetenv gcc=6.1.0\r\nsource seesetenv LINSEE_5G_TOOLS-4.0.1\r\n\r\n所以关键是seesetenv脚本，seesetenv脚本在/opt/EE_LinSEE/bin/, 它完成的功能比较复杂。\r\n\r\nseesetenv支持两种格式，第一种就是\r\n\r\n1、命令=版本，如gcc=6.1.0。\r\n\r\nseesetenv会在/opt下找到相应命令的文件夹，选择相应的版本\r\n\r\n相当于执行\r\n\r\n/opt/命令/x86_64/版本/interface/startup/linsee.env\r\n\r\n2、LINSEE_5G_TOOLS-4.0.1 或 LINSEE_5G_TOOLS-3.0.1\r\n\r\n这个实际上就是source这个文件夹下的所有工具/opt/EE_LinSEE/mixtures/LINSEE_5G_TOOLS-4.0.1/env/\r\n\r\n<span class=\"confluence-embedded-file-wrapper confluence-embedded-manual-size\"><img class=\"confluence-embedded-image confluence-content-image-border\" src=\"https://confluence.int.net.nokia.com/download/attachments/723041107/pic.png?version=1&amp;modificationDate=1536825569000&amp;api=v2\" height=\"150\" data-image-src=\"/download/attachments/723041107/pic.png?version=1&amp;modificationDate=1536825569000&amp;api=v2\" data-unresolved-comment-count=\"0\" data-linked-resource-id=\"723041308\" data-linked-resource-version=\"1\" data-linked-resource-type=\"attachment\" data-linked-resource-default-alias=\"pic.png\" data-base-url=\"https://confluence.int.net.nokia.com\" data-linked-resource-content-type=\"image/png\" data-linked-resource-container-id=\"723041107\" data-linked-resource-container-version=\"2\" /></span>\r\n\r\n所以，有时这里没有的，或者版本不够新的就需要自己source啦，比如automake等','Linsee 环境变量设置','','publish','open','open','','linsee-%e7%8e%af%e5%a2%83%e5%8f%98%e9%87%8f%e8%ae%be%e7%bd%ae','','','2018-10-09 05:47:22','2018-10-09 05:47:22','',0,'http://45.77.202.181/?p=80',0,'post','',0),(81,1,'2018-10-09 05:47:22','2018-10-09 05:47:22','通常只需要设置一条命令即可，它会帮助设置gcc，cmake，git，python....等几乎所有需要的环境\r\n\r\nsource /5g/tools/latest/env-setup.sh\r\n\r\n可是，它是怎么做到的，具体哪些设置命令的环境，版本是多少，不得而知。这里研究了一下：\r\n\r\n首先上面的命令，主要是执行了下面两条\r\n\r\nsource seesetenv gcc=6.1.0\r\nsource seesetenv LINSEE_5G_TOOLS-4.0.1\r\n\r\n所以关键是seesetenv脚本，seesetenv脚本在/opt/EE_LinSEE/bin/, 它完成的功能比较复杂。\r\n\r\nseesetenv支持两种格式，第一种就是\r\n\r\n1、命令=版本，如gcc=6.1.0。\r\n\r\nseesetenv会在/opt下找到相应命令的文件夹，选择相应的版本\r\n\r\n相当于执行\r\n\r\n/opt/命令/x86_64/版本/interface/startup/linsee.env\r\n\r\n2、LINSEE_5G_TOOLS-4.0.1 或 LINSEE_5G_TOOLS-3.0.1\r\n\r\n这个实际上就是source这个文件夹下的所有工具/opt/EE_LinSEE/mixtures/LINSEE_5G_TOOLS-4.0.1/env/\r\n\r\n<span class=\"confluence-embedded-file-wrapper confluence-embedded-manual-size\"><img class=\"confluence-embedded-image confluence-content-image-border\" src=\"https://confluence.int.net.nokia.com/download/attachments/723041107/pic.png?version=1&amp;modificationDate=1536825569000&amp;api=v2\" height=\"150\" data-image-src=\"/download/attachments/723041107/pic.png?version=1&amp;modificationDate=1536825569000&amp;api=v2\" data-unresolved-comment-count=\"0\" data-linked-resource-id=\"723041308\" data-linked-resource-version=\"1\" data-linked-resource-type=\"attachment\" data-linked-resource-default-alias=\"pic.png\" data-base-url=\"https://confluence.int.net.nokia.com\" data-linked-resource-content-type=\"image/png\" data-linked-resource-container-id=\"723041107\" data-linked-resource-container-version=\"2\" /></span>\r\n\r\n所以，有时这里没有的，或者版本不够新的就需要自己source啦，比如automake等','Linsee 环境变量设置','','inherit','closed','closed','','80-revision-v1','','','2018-10-09 05:47:22','2018-10-09 05:47:22','',80,'http://45.77.202.181/index.php/2018/10/09/80-revision-v1/',0,'revision','',0),(82,1,'2018-10-09 05:47:56','2018-10-09 05:47:56','<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">                \r\n#include &lt;iostream&gt;\r\n#include &lt;functional&gt;\r\n#include &lt;vector&gt;\r\n\r\nusing namespace std;\r\n\r\ntemplate&lt;int Id&gt;\r\nclass ID\r\n{\r\n};\r\n\r\nvoid fun(ID&lt;0&gt; id)\r\n{\r\n    cout&lt;&lt;\"eeeee\"&lt;&lt;endl;\r\n}\r\n\r\nvoid fun(ID&lt;3&gt; id)\r\n{\r\n    cout&lt;&lt;\"33333\"&lt;&lt;endl;\r\n}\r\n\r\nvoid fun(ID&lt;5&gt; id)\r\n{\r\n    cout&lt;&lt;\"55555\"&lt;&lt;endl;\r\n}\r\n\r\nusing MessageId = unsigned int;\r\n    \r\ntemplate &lt;MessageId... routeIds&gt;\r\nclass Routes\r\n{\r\npublic:\r\n    static constexpr bool route(MessageId msgId)\r\n    {\r\n        constexpr MessageId currentId = unpackFirstId&lt;routeIds...&gt;();\r\n        if (currentId == msgId)\r\n        {\r\n            fun(ID&lt;currentId&gt;());\r\n            return true;\r\n        }\r\n        else\r\n        {\r\n            cout&lt;&lt;currentId&lt;&lt;\"!=\"&lt;&lt;msgId&lt;&lt;endl;\r\n        }\r\n        return searchFurther&lt;routeIds...&gt;(msgId);\r\n    }\r\n\r\nprivate:\r\n    template &lt;MessageId skippedId, MessageId... remainingIds&gt;\r\n    static constexpr bool searchFurther(MessageId msgId)\r\n    {\r\n        return Routes&lt;remainingIds...&gt;::route(msgId);\r\n    }\r\n\r\n    template &lt;MessageId firstId, MessageId... remainingIds&gt;\r\n    static constexpr MessageId unpackFirstId()\r\n    {\r\n        return firstId;\r\n    }\r\n};\r\n\r\ntemplate &lt;&gt;\r\nstruct Routes&lt;&gt;\r\n{\r\n    static constexpr bool route(MessageId msgId)\r\n    {\r\n        return false;\r\n    }\r\n};\r\n\r\nint main() \r\n{\r\n    int a = 5;\r\n    Routes&lt;0, 3, 5&gt;::route(a);  \r\n    return 0;\r\n}</pre>\r\n&nbsp;','Switch-if 语句的模板替换','','publish','open','open','','switch-if-%e8%af%ad%e5%8f%a5%e7%9a%84%e6%a8%a1%e6%9d%bf%e6%9b%bf%e6%8d%a2','','','2018-10-10 06:40:24','2018-10-10 06:40:24','',0,'http://45.77.202.181/?p=82',0,'post','',1),(83,1,'2018-10-09 05:47:56','2018-10-09 05:47:56','#include &lt;iostream&gt;\r\n\r\n#include &lt;iostream&gt;\r\n\r\n#include &lt;functional&gt;\r\n#include &lt;vector&gt;\r\n\r\nusing namespace std;\r\n\r\ntemplate&lt;int Id&gt;\r\nclass ID\r\n{\r\n};\r\n\r\nvoid fun(ID&lt;0&gt; id)\r\n{\r\ncout&lt;&lt;\"eeeee\"&lt;&lt;endl;\r\n}\r\n\r\nvoid fun(ID&lt;3&gt; id)\r\n{\r\ncout&lt;&lt;\"33333\"&lt;&lt;endl;\r\n}\r\n\r\nvoid fun(ID&lt;5&gt; id)\r\n{\r\ncout&lt;&lt;\"55555\"&lt;&lt;endl;\r\n}\r\n\r\nusing MessageId = unsigned int;\r\n\r\ntemplate &lt;MessageId... routeIds&gt;\r\nclass Routes\r\n{\r\npublic:\r\n\r\nstatic constexpr bool route(MessageId msgId)\r\n{\r\nconstexpr MessageId currentId = unpackFirstId&lt;routeIds...&gt;();\r\nif (currentId == msgId)\r\n{\r\nfun(ID&lt;currentId&gt;());\r\nreturn true;\r\n} else\r\n{\r\ncout&lt;&lt;currentId&lt;&lt;\"!=\"&lt;&lt;msgId&lt;&lt;endl;\r\n}\r\n\r\nreturn searchFurther&lt;routeIds...&gt;(msgId);\r\n}\r\n\r\nprivate:\r\ntemplate &lt;MessageId skippedId, MessageId... remainingIds&gt;\r\nstatic constexpr bool searchFurther(MessageId msgId)\r\n{\r\nreturn Routes&lt;remainingIds...&gt;::route(msgId);\r\n}\r\n\r\ntemplate &lt;MessageId firstId, MessageId... remainingIds&gt;\r\nstatic constexpr MessageId unpackFirstId()\r\n{\r\nreturn firstId;\r\n}\r\n};\r\n\r\ntemplate &lt;&gt;\r\nstruct Routes&lt;&gt;\r\n{\r\nstatic constexpr bool route(MessageId msgId)\r\n{\r\nreturn false;\r\n}\r\n};\r\n\r\nint main() {\r\n\r\nint a = 5;\r\nRoutes&lt;0, 3, 5&gt;::route(a);\r\n\r\nreturn 0;\r\n}','Switch-if 语句的模板替换','','inherit','closed','closed','','82-revision-v1','','','2018-10-09 05:47:56','2018-10-09 05:47:56','',82,'http://45.77.202.181/index.php/2018/10/09/82-revision-v1/',0,'revision','',0),(84,1,'2018-10-09 05:48:19','2018-10-09 05:48:19','STL源码剖析阅读笔记\r\n1、STL中的算法都是左闭右开区间\r\n\r\n2、STL中算法策略都以仿函数形式提供\r\n\r\n3、STL中空间配置器是std::alloc,且不接受任何参数，不是std::allocator&lt;int&gt;这样\r\n\r\n4、STL容器内部都会使用simple_alloc配置器，其包装了alloc将配置的单位从byte转为元素大小（sizeof(T)）\r\n\r\n5、STL中有两级配置器，一级配置器直接调用malloc，二级配置器在申请大内存大于128字节，调用一级配置器，而申请小内存时，采用了内存池，而且申请的倍数上调到8的倍数\r\n什么叫内存碎片，即申请了过多的小内存，小内存释放后，前后的内存不连续，而小内存又很难再被分配，导致的内存浪费问题\r\n\r\nPOD--Plain Old Data， 即传统 C struct。 POD类型可以使用memset初始化，非POD就不可以，不信你memset一个string试试\r\n\r\n6、申请了但未初始化的内存操作使用uninitialized_copy, uninitialized_fill, uninitialized_fill_n\r\nstd::copy\r\n\r\n7、RTTI中的typeid()只能获取类型名，而不能用于变量声明。好像std::decltype&lt;T&gt;已经可以了\r\n\r\n8、vector的迭代器实际是普通指针，vector的插入删除会涉及到元素移动，uninitialized_copy，vector的容量大小，计算指针的差值就可得到。\r\nvector没有front的操作，考虑效率问题，一般insert和erase也不推荐，要操作推荐list\r\nvector是单向开口联系线性空间，而deque是双向开口\r\n\r\n9、list是双向循环列表，list的size函数会调用distance计算大小。list有自己的remove(Value)函数，遍历每一个元素，比较value，然后erase\r\n有个forward_list是单向链表，forward_list没有size操作，只能操作front，没有back操作，插入和删除都是操作后一个元素，而list是操作前一个元素\r\n\r\n10、元素删除\r\nerase, vector、list、map都有，但只有map可以erase(key), 其他都是erase(iterator)\r\nlist自带remove函数(value), vector可使用remove算法，map不能用\r\nvector， string删除元素，erase（remove（value），end）\r\n\r\n11、list当元素为空的时候，empty比size==0更高效','STL源码剖析阅读笔记','','publish','open','open','','stl%e6%ba%90%e7%a0%81%e5%89%96%e6%9e%90%e9%98%85%e8%af%bb%e7%ac%94%e8%ae%b0','','','2018-10-10 01:44:13','2018-10-10 01:44:13','',0,'http://45.77.202.181/?p=84',0,'post','',0),(85,1,'2018-10-09 05:48:19','2018-10-09 05:48:19','STL源码剖析阅读笔记\r\n1、STL中的算法都是左闭右开区间\r\n\r\n2、STL中算法策略都以仿函数形式提供\r\n\r\n3、STL中空间配置器是std::alloc,且不接受任何参数，不是std::allocator&lt;int&gt;这样\r\n\r\n4、STL容器内部都会使用simple_alloc配置器，其包装了alloc将配置的单位从byte转为元素大小（sizeof(T)）\r\n\r\n5、STL中有两级配置器，一级配置器直接调用malloc，二级配置器在申请大内存大于128字节，调用一级配置器，而申请小内存时，采用了内存池，而且申请的倍数上调到8的倍数\r\n什么叫内存碎片，即申请了过多的小内存，小内存释放后，前后的内存不连续，而小内存又很难再被分配，导致的内存浪费问题\r\n\r\nPOD--Plain Old Data， 即传统 C struct。 POD类型可以使用memset初始化，非POD就不可以，不信你memset一个string试试\r\n\r\n6、申请了但未初始化的内存操作使用uninitialized_copy, uninitialized_fill, uninitialized_fill_n\r\nstd::copy\r\n\r\n7、RTTI中的typeid()只能获取类型名，而不能用于变量声明。好像std::decltype&lt;T&gt;已经可以了\r\n\r\n8、vector的迭代器实际是普通指针，vector的插入删除会涉及到元素移动，uninitialized_copy，vector的容量大小，计算指针的差值就可得到。\r\nvector没有front的操作，考虑效率问题，一般insert和erase也不推荐，要操作推荐list\r\nvector是单向开口联系线性空间，而deque是双向开口\r\n\r\n9、list是双向循环列表，list的size函数会调用distance计算大小。list有自己的remove(Value)函数，遍历每一个元素，比较value，然后erase\r\n有个forward_list是单向链表，forward_list没有size操作，只能操作front，没有back操作，插入和删除都是操作后一个元素，而list是操作前一个元素\r\n\r\n10、元素删除\r\nerase, vector、list、map都有，但只有map可以erase(key), 其他都是erase(iterator)\r\nlist自带remove函数(value), vector可使用remove算法，map不能用\r\nvector， string删除元素，erase（remove（value），end）\r\n\r\n11、list当元素为空的时候，empty比size==0更高效','STL源码剖析阅读笔记','','inherit','closed','closed','','84-revision-v1','','','2018-10-09 05:48:19','2018-10-09 05:48:19','',84,'http://45.77.202.181/index.php/2018/10/09/84-revision-v1/',0,'revision','',0),(86,1,'2018-10-09 05:49:57','2018-10-09 05:49:57','<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">#include &lt;iostream&gt;\r\n#include &lt;vector&gt;\r\n#include &lt;list&gt;\r\n#include &lt;map&gt;\r\n\r\nusing namespace std;\r\n\r\nint main() {\r\n\r\n//std::vector&lt;int&gt; my_vec;\r\n\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;std::vector&lt;int&gt;::iterator&gt;::difference_type,\r\n            std::ptrdiff_t\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;std::vector&lt;int&gt;::iterator&gt;::value_type,\r\n            int\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;std::vector&lt;int&gt;::iterator&gt;::iterator_category,\r\n            std::random_access_iterator_tag\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n//std::list&lt;int&gt; my_list;\r\n\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;std::list&lt;int&gt;::iterator&gt;::difference_type,\r\n            std::ptrdiff_t\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;std::list&lt;int&gt;::iterator&gt;::value_type,\r\n            int\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;std::list&lt;int&gt;::iterator&gt;::iterator_category,\r\n            std::bidirectional_iterator_tag\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n//std::map&lt;int, int&gt; my_list;\r\n\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;std::map&lt;int, int&gt;::iterator&gt;::difference_type,\r\n            std::ptrdiff_t\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;std::map&lt;int, int&gt;::iterator&gt;::value_type,\r\n            std::pair&lt;const int, int&gt;\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;std::map&lt;int, int&gt;::iterator&gt;::iterator_category,\r\n            std::bidirectional_iterator_tag\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n//void* p;\r\n\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;int*&gt;::difference_type,\r\n            std::ptrdiff_t\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;int*&gt;::value_type,\r\n            int\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;int*&gt;::iterator_category,\r\n            std::random_access_iterator_tag\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n    return 0;\r\n}</pre>\r\n输出：\r\n\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1','test iterator_traits','','publish','open','open','','test-iterator_traits','','','2018-10-10 05:49:58','2018-10-10 05:49:58','',0,'http://45.77.202.181/?p=86',0,'post','',1),(87,1,'2018-10-09 05:49:57','2018-10-09 05:49:57','int main() {\r\n\r\n//std::vector&lt;int&gt; my_vec;\r\n\r\ncout&lt;&lt;std::is_same&lt;std::iterator_traits&lt;std::vector&lt;int&gt;::iterator&gt;::difference_type,\r\nstd::ptrdiff_t&gt;::value&lt;&lt;endl;\r\n\r\ncout&lt;&lt;std::is_same&lt;std::iterator_traits&lt;std::vector&lt;int&gt;::iterator&gt;::value_type,\r\nint&gt;::value&lt;&lt;endl;\r\n\r\ncout&lt;&lt;std::is_same&lt;std::iterator_traits&lt;std::vector&lt;int&gt;::iterator&gt;::iterator_category,\r\nstd::random_access_iterator_tag&gt;::value&lt;&lt;endl;\r\n\r\n//std::list&lt;int&gt; my_list;\r\n\r\ncout&lt;&lt;std::is_same&lt;std::iterator_traits&lt;std::list&lt;int&gt;::iterator&gt;::difference_type,\r\nstd::ptrdiff_t&gt;::value&lt;&lt;endl;\r\n\r\ncout&lt;&lt;std::is_same&lt;std::iterator_traits&lt;std::list&lt;int&gt;::iterator&gt;::value_type,\r\nint&gt;::value&lt;&lt;endl;\r\n\r\ncout&lt;&lt;std::is_same&lt;std::iterator_traits&lt;std::list&lt;int&gt;::iterator&gt;::iterator_category,\r\nstd::bidirectional_iterator_tag&gt;::value&lt;&lt;endl;\r\n\r\n//std::map&lt;int, int&gt; my_list;\r\n\r\ncout&lt;&lt;std::is_same&lt;std::iterator_traits&lt;std::map&lt;int, int&gt;::iterator&gt;::difference_type,\r\nstd::ptrdiff_t&gt;::value&lt;&lt;endl;\r\n\r\ncout&lt;&lt;std::is_same&lt;std::iterator_traits&lt;std::map&lt;int, int&gt;::iterator&gt;::value_type,\r\nstd::pair&lt;const int, int&gt;&gt;::value&lt;&lt;endl;\r\n\r\ncout&lt;&lt;std::is_same&lt;std::iterator_traits&lt;std::map&lt;int, int&gt;::iterator&gt;::iterator_category,\r\nstd::bidirectional_iterator_tag&gt;::value&lt;&lt;endl;\r\n\r\n//void* p;\r\n\r\ncout&lt;&lt;std::is_same&lt;std::iterator_traits&lt;int*&gt;::difference_type,\r\nstd::ptrdiff_t&gt;::value&lt;&lt;endl;\r\n\r\ncout&lt;&lt;std::is_same&lt;std::iterator_traits&lt;int*&gt;::value_type,\r\nint&gt;::value&lt;&lt;endl;\r\n\r\ncout&lt;&lt;std::is_same&lt;std::iterator_traits&lt;int*&gt;::iterator_category,\r\nstd::random_access_iterator_tag&gt;::value&lt;&lt;endl;\r\n\r\nreturn 0;\r\n}','test iterator_traits','','inherit','closed','closed','','86-revision-v1','','','2018-10-09 05:49:57','2018-10-09 05:49:57','',86,'http://45.77.202.181/index.php/2018/10/09/86-revision-v1/',0,'revision','',0),(88,1,'2018-10-09 06:11:01','2018-10-09 06:11:01','{\n    \"old_sidebars_widgets_data\": {\n        \"value\": {\n            \"wp_inactive_widgets\": [\n\n            ],\n            \"sidebar-1\": [\n                \"text-2\",\n                \"search-3\",\n                \"text-3\"\n            ],\n            \"sidebar-2\": [\n                \"text-4\"\n            ],\n            \"sidebar-3\": [\n                \"text-5\",\n                \"search-4\"\n            ]\n        },\n        \"type\": \"global_variable\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-10-09 06:11:01\"\n    },\n    \"chilly::nav_menu_locations[primary]\": {\n        \"value\": 2,\n        \"type\": \"theme_mod\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-10-09 06:11:01\"\n    }\n}','','','trash','closed','closed','','c8353a7b-3d66-4930-8399-5dc372bc096b','','','2018-10-09 06:11:01','2018-10-09 06:11:01','',0,'http://45.77.202.181/index.php/2018/10/09/c8353a7b-3d66-4930-8399-5dc372bc096b/',0,'customize_changeset','',0),(89,1,'2018-10-09 06:20:51','2018-10-09 06:20:51','{\n    \"old_sidebars_widgets_data\": {\n        \"value\": {\n            \"wp_inactive_widgets\": [\n\n            ],\n            \"sidebar-1\": [\n                \"text-2\",\n                \"search-3\",\n                \"text-3\"\n            ],\n            \"sidebar-2\": [\n                \"text-4\"\n            ],\n            \"sidebar-3\": [\n                \"text-5\",\n                \"search-4\"\n            ]\n        },\n        \"type\": \"global_variable\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-10-09 06:20:51\"\n    },\n    \"blogdescription\": {\n        \"value\": \"keep life easier\",\n        \"type\": \"option\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-10-09 06:20:51\"\n    },\n    \"twentyseventeen::nav_menu_locations[top]\": {\n        \"value\": 2,\n        \"type\": \"theme_mod\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-10-09 06:20:51\"\n    },\n    \"twentyseventeen::nav_menu_locations[social]\": {\n        \"value\": 3,\n        \"type\": \"theme_mod\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-10-09 06:20:51\"\n    }\n}','','','trash','closed','closed','','9b3871be-885d-469b-93c7-b0bc5ee3ec9c','','','2018-10-09 06:20:51','2018-10-09 06:20:51','',0,'http://45.77.202.181/index.php/2018/10/09/9b3871be-885d-469b-93c7-b0bc5ee3ec9c/',0,'customize_changeset','',0),(90,1,'2018-10-09 06:25:55','2018-10-09 06:25:55','{\n    \"twentyseventeen::header_image\": {\n        \"value\": \"random-default-image\",\n        \"type\": \"theme_mod\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-10-09 06:21:43\"\n    },\n    \"twentyseventeen::header_image_data\": {\n        \"value\": \"random-default-image\",\n        \"type\": \"theme_mod\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-10-09 06:21:43\"\n    },\n    \"twentyseventeen::colorscheme\": {\n        \"value\": \"light\",\n        \"type\": \"theme_mod\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-10-09 06:21:43\"\n    },\n    \"twentyseventeen::colorscheme_hue\": {\n        \"value\": 251,\n        \"type\": \"theme_mod\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-10-09 06:21:43\"\n    },\n    \"twentyseventeen::nav_menu_locations[top]\": {\n        \"value\": 0,\n        \"type\": \"theme_mod\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-10-09 06:24:44\"\n    },\n    \"nav_menu_item[26]\": {\n        \"value\": {\n            \"menu_item_parent\": 0,\n            \"object_id\": 26,\n            \"object\": \"custom\",\n            \"type\": \"custom\",\n            \"type_label\": \"\\u81ea\\u5b9a\\u4e49\\u94fe\\u63a5\",\n            \"title\": \"Email\",\n            \"url\": \"mailto:bxp0805@163.com\",\n            \"target\": \"\",\n            \"attr_title\": \"\",\n            \"description\": \"\",\n            \"classes\": \"\",\n            \"xfn\": \"\",\n            \"nav_menu_term_id\": 3,\n            \"position\": 1,\n            \"status\": \"publish\",\n            \"original_title\": \"\",\n            \"_invalid\": false\n        },\n        \"type\": \"nav_menu_item\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-10-09 06:23:43\"\n    },\n    \"nav_menu_item[34]\": {\n        \"value\": false,\n        \"type\": \"nav_menu_item\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-10-09 06:23:43\"\n    },\n    \"nav_menu_item[35]\": {\n        \"value\": false,\n        \"type\": \"nav_menu_item\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-10-09 06:23:43\"\n    },\n    \"twentyseventeen::nav_menu_locations[social]\": {\n        \"value\": 3,\n        \"type\": \"theme_mod\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-10-09 06:24:44\"\n    }\n}','','','trash','closed','closed','','96907d7d-c2ce-4962-bbf1-e5880dd52914','','','2018-10-09 06:25:55','2018-10-09 06:25:55','',0,'http://45.77.202.181/?p=90',0,'customize_changeset','',0),(91,1,'2018-10-09 06:27:45','2018-10-09 06:27:45','{\n    \"twentyseventeen::nav_menu_locations[top]\": {\n        \"value\": 2,\n        \"type\": \"theme_mod\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-10-09 06:27:43\"\n    },\n    \"nav_menu[2]\": {\n        \"value\": {\n            \"name\": \"Top Menu\",\n            \"description\": \"\",\n            \"parent\": 0,\n            \"auto_add\": true\n        },\n        \"type\": \"nav_menu\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-10-09 06:27:43\"\n    }\n}','','','trash','closed','closed','','9fc5f95b-da42-4847-ac22-3e725d996c73','','','2018-10-09 06:27:45','2018-10-09 06:27:45','',0,'http://45.77.202.181/?p=91',0,'customize_changeset','',0),(92,1,'2018-10-09 06:59:41','2018-10-09 06:59:41','{\n    \"twentyseventeen::nav_menu_locations[top]\": {\n        \"value\": 2,\n        \"type\": \"theme_mod\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-10-09 06:59:41\"\n    },\n    \"widget_text[4]\": {\n        \"value\": {\n            \"encoded_serialized_instance\": \"YTo0OntzOjU6InRpdGxlIjtzOjc6IkZpbmQgVXMiO3M6NDoidGV4dCI7czoxMjA6IjxzdHJvbmc+QWRkcmVzczwvc3Ryb25nPg0KQmluamlhbmcgRGlzdHJpY3QsIEhhbmd6aG91LCBDaGluYQ0KDQo8c3Ryb25nPkhvdXJzPC9zdHJvbmc+DQpNb25kYXnigJRGcmlkYXk6IDk6MDBBTeKAkzY6MDBQTSI7czo2OiJmaWx0ZXIiO2I6MTtzOjY6InZpc3VhbCI7YjoxO30=\",\n            \"title\": \"Find Us\",\n            \"is_widget_customizer_js_value\": true,\n            \"instance_hash_key\": \"e629d855ba4a627764dafab3bf38e58b\"\n        },\n        \"type\": \"option\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-10-09 06:55:18\"\n    },\n    \"sidebars_widgets[sidebar-2]\": {\n        \"value\": [\n            \"text-4\"\n        ],\n        \"type\": \"option\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-10-09 06:44:43\"\n    },\n    \"widget_text[7]\": {\n        \"value\": [\n\n        ],\n        \"type\": \"option\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-10-09 06:30:44\"\n    },\n    \"widget_text[8]\": {\n        \"value\": {\n            \"encoded_serialized_instance\": \"YTo0OntzOjU6InRpdGxlIjtzOjM6InllcyI7czo0OiJ0ZXh0IjtzOjA6IiI7czo2OiJmaWx0ZXIiO2I6MTtzOjY6InZpc3VhbCI7YjoxO30=\",\n            \"title\": \"yes\",\n            \"is_widget_customizer_js_value\": true,\n            \"instance_hash_key\": \"e2c097a0c3a4267901c8e51d53a1d09b\"\n        },\n        \"type\": \"option\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-10-09 06:44:43\"\n    },\n    \"sidebars_widgets[wp_inactive_widgets]\": {\n        \"value\": [\n            \"archives-2\",\n            \"meta-2\",\n            \"search-2\",\n            \"categories-2\",\n            \"recent-posts-2\",\n            \"recent-comments-2\",\n            \"text-2\",\n            \"text-3\"\n        ],\n        \"type\": \"option\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-10-09 06:56:18\"\n    },\n    \"sidebars_widgets[sidebar-1]\": {\n        \"value\": [\n            \"search-3\",\n            \"categories-4\"\n        ],\n        \"type\": \"option\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-10-09 06:56:18\"\n    },\n    \"widget_categories[4]\": {\n        \"value\": {\n            \"encoded_serialized_instance\": \"YTo0OntzOjU6InRpdGxlIjtzOjA6IiI7czo1OiJjb3VudCI7aToxO3M6MTI6ImhpZXJhcmNoaWNhbCI7aToxO3M6ODoiZHJvcGRvd24iO2k6MDt9\",\n            \"title\": \"\",\n            \"is_widget_customizer_js_value\": true,\n            \"instance_hash_key\": \"346a4d698c99781b8f73a1d29e71f676\"\n        },\n        \"type\": \"option\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-10-09 06:57:18\"\n    },\n    \"widget_nav_menu[3]\": {\n        \"value\": [\n\n        ],\n        \"type\": \"option\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-10-09 06:58:18\"\n    },\n    \"show_on_front\": {\n        \"value\": \"posts\",\n        \"type\": \"option\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-10-09 06:59:18\"\n    },\n    \"widget_pages[3]\": {\n        \"value\": [\n\n        ],\n        \"type\": \"option\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-10-09 06:59:18\"\n    }\n}','','','trash','closed','closed','','8aa98504-ed50-46ac-9930-3840820b33cf','','','2018-10-09 06:59:41','2018-10-09 06:59:41','',0,'http://45.77.202.181/?p=92',0,'customize_changeset','',0),(93,1,'2018-10-09 07:01:14','2018-10-09 07:01:14','{\n    \"show_on_front\": {\n        \"value\": \"page\",\n        \"type\": \"option\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-10-09 07:01:14\"\n    }\n}','','','trash','closed','closed','','d30b64d8-2087-452c-abf7-eade82e264e2','','','2018-10-09 07:01:14','2018-10-09 07:01:14','',0,'http://45.77.202.181/index.php/2018/10/09/d30b64d8-2087-452c-abf7-eade82e264e2/',0,'customize_changeset','',0),(94,1,'2018-10-09 07:03:05','2018-10-09 07:03:05','{\n    \"page_on_front\": {\n        \"value\": \"0\",\n        \"type\": \"option\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-10-09 07:03:05\"\n    },\n    \"show_on_front\": {\n        \"value\": \"posts\",\n        \"type\": \"option\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-10-09 07:03:05\"\n    }\n}','','','trash','closed','closed','','550ae11b-edc1-409a-87e5-65ec69cdfd87','','','2018-10-09 07:03:05','2018-10-09 07:03:05','',0,'http://45.77.202.181/?p=94',0,'customize_changeset','',0),(95,1,'2018-10-09 07:07:43','2018-10-09 07:07:43','{\n    \"sidebars_widgets[sidebar-1]\": {\n        \"value\": [\n            \"search-3\",\n            \"categories-4\",\n            \"nav_menu-4\"\n        ],\n        \"type\": \"option\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-10-09 07:07:35\"\n    },\n    \"widget_nav_menu[4]\": {\n        \"value\": [\n\n        ],\n        \"type\": \"option\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-10-09 07:07:35\"\n    }\n}','','','trash','closed','closed','','64dadf93-6a31-4300-acbf-4233f126e580','','','2018-10-09 07:07:43','2018-10-09 07:07:43','',0,'http://45.77.202.181/?p=95',0,'customize_changeset','',0),(96,1,'2018-10-09 07:08:11','0000-00-00 00:00:00','','自动草稿','','auto-draft','closed','closed','','','','','2018-10-09 07:08:11','0000-00-00 00:00:00','',0,'http://45.77.202.181/?page_id=96',0,'page','',0),(97,1,'2018-10-09 08:43:21','2018-10-09 08:43:21','&lt;?php /** * Template Name: Article List * */ &gt;','','','trash','closed','closed','','__trashed','','','2018-10-09 08:43:21','2018-10-09 08:43:21','',0,'http://45.77.202.181/?page_id=97',0,'page','',0),(98,1,'2018-10-09 08:04:05','0000-00-00 00:00:00','','自动草稿','','auto-draft','open','open','','','','','2018-10-09 08:04:05','0000-00-00 00:00:00','',0,'http://45.77.202.181/?p=98',0,'post','',0),(99,1,'2018-10-09 08:37:45','2018-10-09 08:37:45','{\n    \"show_on_front\": {\n        \"value\": \"page\",\n        \"type\": \"option\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-10-09 08:37:45\"\n    },\n    \"page_on_front\": {\n        \"value\": \"7\",\n        \"type\": \"option\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-10-09 08:37:45\"\n    },\n    \"page_for_posts\": {\n        \"value\": \"10\",\n        \"type\": \"option\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-10-09 08:37:45\"\n    }\n}','','','trash','closed','closed','','40b49355-80da-4b91-b438-5d4f84616e72','','','2018-10-09 08:37:45','2018-10-09 08:37:45','',0,'http://45.77.202.181/index.php/2018/10/09/40b49355-80da-4b91-b438-5d4f84616e72/',0,'customize_changeset','',0),(100,1,'2018-10-09 08:43:21','2018-10-09 08:43:21','&lt;?php /** * Template Name: Article List * */ &gt;','','','inherit','closed','closed','','97-revision-v1','','','2018-10-09 08:43:21','2018-10-09 08:43:21','',97,'http://45.77.202.181/index.php/2018/10/09/97-revision-v1/',0,'revision','',0),(101,1,'2018-10-09 08:43:42','2018-10-09 08:43:42','<h2>Who we are</h2><p>Our website address is: http://45.77.202.181.</p><h2>What personal data we collect and why we collect it</h2><h3>Comments</h3><p>When visitors leave comments on the site we collect the data shown in the comments form, and also the visitor&#8217;s IP address and browser user agent string to help spam detection.</p><p>An anonymized string created from your email address (also called a hash) may be provided to the Gravatar service to see if you are using it. The Gravatar service privacy policy is available here: https://automattic.com/privacy/. After approval of your comment, your profile picture is visible to the public in the context of your comment.</p><h3>Media</h3><p>If you upload images to the website, you should avoid uploading images with embedded location data (EXIF GPS) included. Visitors to the website can download and extract any location data from images on the website.</p><h3>Contact forms</h3><h3>Cookies</h3><p>If you leave a comment on our site you may opt-in to saving your name, email address and website in cookies. These are for your convenience so that you do not have to fill in your details again when you leave another comment. These cookies will last for one year.</p><p>If you have an account and you log in to this site, we will set a temporary cookie to determine if your browser accepts cookies. This cookie contains no personal data and is discarded when you close your browser.</p><p>When you log in, we will also set up several cookies to save your login information and your screen display choices. Login cookies last for two days, and screen options cookies last for a year. If you select &quot;Remember Me&quot;, your login will persist for two weeks. If you log out of your account, the login cookies will be removed.</p><p>If you edit or publish an article, an additional cookie will be saved in your browser. This cookie includes no personal data and simply indicates the post ID of the article you just edited. It expires after 1 day.</p><h3>Embedded content from other websites</h3><p>Articles on this site may include embedded content (e.g. videos, images, articles, etc.). Embedded content from other websites behaves in the exact same way as if the visitor has visited the other website.</p><p>These websites may collect data about you, use cookies, embed additional third-party tracking, and monitor your interaction with that embedded content, including tracking your interaction with the embedded content if you have an account and are logged in to that website.</p><h3>Analytics</h3><h2>Who we share your data with</h2><h2>How long we retain your data</h2><p>If you leave a comment, the comment and its metadata are retained indefinitely. This is so we can recognize and approve any follow-up comments automatically instead of holding them in a moderation queue.</p><p>For users that register on our website (if any), we also store the personal information they provide in their user profile. All users can see, edit, or delete their personal information at any time (except they cannot change their username). Website administrators can also see and edit that information.</p><h2>What rights you have over your data</h2><p>If you have an account on this site, or have left comments, you can request to receive an exported file of the personal data we hold about you, including any data you have provided to us. You can also request that we erase any personal data we hold about you. This does not include any data we are obliged to keep for administrative, legal, or security purposes.</p><h2>Where we send your data</h2><p>Visitor comments may be checked through an automated spam detection service.</p><h2>Your contact information</h2><h2>Additional information</h2><h3>How we protect your data</h3><h3>What data breach procedures we have in place</h3><h3>What third parties we receive data from</h3><h3>What automated decision making and/or profiling we do with user data</h3><h3>Industry regulatory disclosure requirements</h3>','Privacy Policy','','inherit','closed','closed','','3-revision-v1','','','2018-10-09 08:43:42','2018-10-09 08:43:42','',3,'http://45.77.202.181/index.php/2018/10/09/3-revision-v1/',0,'revision','',0),(102,1,'2018-10-09 08:45:08','2018-10-09 08:45:08','{\n    \"show_on_front\": {\n        \"value\": \"posts\",\n        \"type\": \"option\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-10-09 08:45:08\"\n    }\n}','','','trash','closed','closed','','cb13f61e-5f6e-46d7-a011-6084b06d8f2b','','','2018-10-09 08:45:08','2018-10-09 08:45:08','',0,'http://45.77.202.181/index.php/2018/10/09/cb13f61e-5f6e-46d7-a011-6084b06d8f2b/',0,'customize_changeset','',0),(103,1,'2018-10-09 08:46:07','2018-10-09 08:46:07','{\n    \"nav_menu_item[20]\": {\n        \"value\": false,\n        \"type\": \"nav_menu_item\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-10-09 08:46:06\"\n    },\n    \"nav_menu_item[36]\": {\n        \"value\": false,\n        \"type\": \"nav_menu_item\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-10-09 08:46:06\"\n    }\n}','','','trash','closed','closed','','c2510f11-a9c3-4659-9ede-35bd105895cb','','','2018-10-09 08:46:07','2018-10-09 08:46:07','',0,'http://45.77.202.181/?p=103',0,'customize_changeset','',0),(106,1,'2018-10-09 08:48:57','0000-00-00 00:00:00','','自动草稿','','auto-draft','open','open','','','','','2018-10-09 08:48:57','0000-00-00 00:00:00','',0,'http://45.77.202.181/?p=106',0,'post','',0),(110,1,'2018-10-09 08:59:42','2018-10-09 08:59:42','{\n    \"sidebars_widgets[sidebar-1]\": {\n        \"value\": [\n            \"search-3\",\n            \"categories-4\",\n            \"nav_menu-4\",\n            \"text-5\"\n        ],\n        \"type\": \"option\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-10-09 08:59:42\"\n    }\n}','','','trash','closed','closed','','64194bba-c373-46b1-b27c-d87a5182ccdd','','','2018-10-09 08:59:42','2018-10-09 08:59:42','',0,'http://45.77.202.181/?p=110',0,'customize_changeset','',0),(111,1,'2018-10-09 09:00:10','2018-10-09 09:00:10','{\n    \"sidebars_widgets[wp_inactive_widgets]\": {\n        \"value\": [\n            \"pages-3\",\n            \"text-7\",\n            \"text-8\",\n            \"nav_menu-3\",\n            \"archives-2\",\n            \"meta-2\",\n            \"search-2\",\n            \"categories-2\",\n            \"recent-posts-2\",\n            \"recent-comments-2\",\n            \"text-2\",\n            \"text-3\",\n            \"text-4\"\n        ],\n        \"type\": \"option\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-10-09 09:00:10\"\n    },\n    \"sidebars_widgets[sidebar-2]\": {\n        \"value\": [\n\n        ],\n        \"type\": \"option\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-10-09 09:00:10\"\n    }\n}','','','trash','closed','closed','','f538c103-53fe-4738-ab73-6a048be98a51','','','2018-10-09 09:00:10','2018-10-09 09:00:10','',0,'http://45.77.202.181/?p=111',0,'customize_changeset','',0),(112,1,'2018-10-09 09:20:35','2018-10-09 09:20:35','{\n    \"widget_text[5]\": {\n        \"value\": {\n            \"encoded_serialized_instance\": \"YTo0OntzOjU6InRpdGxlIjtzOjE1OiJBYm91dCBUaGlzIFNpdGUiO3M6NDoidGV4dCI7czozNjoiVGhpcyBpcyBCYW8gWGlhb3BlbmcncyBwZXJzb25hbCBibG9nIjtzOjY6ImZpbHRlciI7YjoxO3M6NjoidmlzdWFsIjtiOjE7fQ==\",\n            \"title\": \"About This Site\",\n            \"is_widget_customizer_js_value\": true,\n            \"instance_hash_key\": \"8c3025c2fad04d8da3882035e9538538\"\n        },\n        \"type\": \"option\",\n        \"user_id\": 1,\n        \"date_modified_gmt\": \"2018-10-09 09:20:35\"\n    }\n}','','','trash','closed','closed','','d4f6dc7e-3365-4163-b581-3503040d5fea','','','2018-10-09 09:20:35','2018-10-09 09:20:35','',0,'http://45.77.202.181/?p=112',0,'customize_changeset','',0),(113,1,'2018-10-09 09:21:56','2018-10-09 09:21:56','Please reply back to bxp0805@163.com for queries/concerns.','Contact','','inherit','closed','closed','','9-autosave-v1','','','2018-10-09 09:21:56','2018-10-09 09:21:56','',9,'http://45.77.202.181/?p=113',0,'revision','',0),(114,1,'2018-10-09 09:21:59','2018-10-09 09:21:59','Please reply back to bxp0805@163.com for queries/concerns.','Contact','','inherit','closed','closed','','9-revision-v1','','','2018-10-09 09:21:59','2018-10-09 09:21:59','',9,'http://45.77.202.181/?p=114',0,'revision','',0),(115,1,'2018-10-09 09:23:12','2018-10-09 09:23:12','','About','','inherit','closed','closed','','8-autosave-v1','','','2018-10-09 09:23:12','2018-10-09 09:23:12','',8,'http://45.77.202.181/?p=115',0,'revision','',0),(116,1,'2018-10-09 09:24:24','2018-10-09 09:24:24','This is a blog site build for share something','About','','inherit','closed','closed','','8-revision-v1','','','2018-10-09 09:24:24','2018-10-09 09:24:24','',8,'http://45.77.202.181/?p=116',0,'revision','',0),(117,1,'2018-10-09 09:24:30','2018-10-09 09:24:30','This is a blog site build for share something.','About','','inherit','closed','closed','','8-revision-v1','','','2018-10-09 09:24:30','2018-10-09 09:24:30','',8,'http://45.77.202.181/?p=117',0,'revision','',0),(119,1,'2018-10-10 02:29:37','2018-10-10 02:29:37','&nbsp;\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">#include &lt;iostream&gt;\r\n#include &lt;vector&gt;\r\n#include &lt;list&gt;\r\n#include &lt;map&gt;\r\n\r\nusing namespace std;\r\n\r\nint main() {\r\n\r\n//std::vector&lt;int&gt; my_vec;\r\n\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;std::vector&lt;int&gt;::iterator&gt;::difference_type,\r\n            std::ptrdiff_t\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;std::vector&lt;int&gt;::iterator&gt;::value_type,\r\n            int\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;std::vector&lt;int&gt;::iterator&gt;::iterator_category,\r\n            std::random_access_iterator_tag\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n//std::list&lt;int&gt; my_list;\r\n\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;std::list&lt;int&gt;::iterator&gt;::difference_type,\r\n            std::ptrdiff_t\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;std::list&lt;int&gt;::iterator&gt;::value_type,\r\n            int\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;std::list&lt;int&gt;::iterator&gt;::iterator_category,\r\n            std::bidirectional_iterator_tag\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n//std::map&lt;int, int&gt; my_list;\r\n\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;std::map&lt;int, int&gt;::iterator&gt;::difference_type,\r\n            std::ptrdiff_t\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;std::map&lt;int, int&gt;::iterator&gt;::value_type,\r\n            std::pair&lt;const int, int&gt;\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;std::map&lt;int, int&gt;::iterator&gt;::iterator_category,\r\n            std::bidirectional_iterator_tag\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n//void* p;\r\n\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;int*&gt;::difference_type,\r\n            std::ptrdiff_t\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;int*&gt;::value_type,\r\n            int\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;int*&gt;::iterator_category,\r\n            std::random_access_iterator_tag\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n    return 0;\r\n}</pre>\r\n&nbsp;\r\n\r\n&nbsp;','test iterator_traits','','inherit','closed','closed','','86-revision-v1','','','2018-10-10 02:29:37','2018-10-10 02:29:37','',86,'http://45.77.202.181/?p=119',0,'revision','',0),(120,1,'2018-10-10 02:30:23','2018-10-10 02:30:23','&nbsp;\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-linenumbers=\"false\">#include &lt;iostream&gt;\r\n#include &lt;vector&gt;\r\n#include &lt;list&gt;\r\n#include &lt;map&gt;\r\n\r\nusing namespace std;\r\n\r\nint main() {\r\n\r\n//std::vector&lt;int&gt; my_vec;\r\n\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;std::vector&lt;int&gt;::iterator&gt;::difference_type,\r\n            std::ptrdiff_t\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;std::vector&lt;int&gt;::iterator&gt;::value_type,\r\n            int\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;std::vector&lt;int&gt;::iterator&gt;::iterator_category,\r\n            std::random_access_iterator_tag\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n//std::list&lt;int&gt; my_list;\r\n\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;std::list&lt;int&gt;::iterator&gt;::difference_type,\r\n            std::ptrdiff_t\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;std::list&lt;int&gt;::iterator&gt;::value_type,\r\n            int\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;std::list&lt;int&gt;::iterator&gt;::iterator_category,\r\n            std::bidirectional_iterator_tag\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n//std::map&lt;int, int&gt; my_list;\r\n\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;std::map&lt;int, int&gt;::iterator&gt;::difference_type,\r\n            std::ptrdiff_t\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;std::map&lt;int, int&gt;::iterator&gt;::value_type,\r\n            std::pair&lt;const int, int&gt;\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;std::map&lt;int, int&gt;::iterator&gt;::iterator_category,\r\n            std::bidirectional_iterator_tag\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n//void* p;\r\n\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;int*&gt;::difference_type,\r\n            std::ptrdiff_t\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;int*&gt;::value_type,\r\n            int\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;int*&gt;::iterator_category,\r\n            std::random_access_iterator_tag\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n    return 0;\r\n}</pre>\r\n&nbsp;\r\n\r\n&nbsp;','test iterator_traits','','inherit','closed','closed','','86-revision-v1','','','2018-10-10 02:30:23','2018-10-10 02:30:23','',86,'http://45.77.202.181/?p=120',0,'revision','',0),(121,1,'2018-10-10 02:30:36','2018-10-10 02:30:36','<pre class=\"EnlighterJSRAW\" data-enlighter-linenumbers=\"false\">#include &lt;iostream&gt;\r\n#include &lt;vector&gt;\r\n#include &lt;list&gt;\r\n#include &lt;map&gt;\r\n\r\nusing namespace std;\r\n\r\nint main() {\r\n\r\n//std::vector&lt;int&gt; my_vec;\r\n\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;std::vector&lt;int&gt;::iterator&gt;::difference_type,\r\n            std::ptrdiff_t\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;std::vector&lt;int&gt;::iterator&gt;::value_type,\r\n            int\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;std::vector&lt;int&gt;::iterator&gt;::iterator_category,\r\n            std::random_access_iterator_tag\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n//std::list&lt;int&gt; my_list;\r\n\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;std::list&lt;int&gt;::iterator&gt;::difference_type,\r\n            std::ptrdiff_t\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;std::list&lt;int&gt;::iterator&gt;::value_type,\r\n            int\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;std::list&lt;int&gt;::iterator&gt;::iterator_category,\r\n            std::bidirectional_iterator_tag\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n//std::map&lt;int, int&gt; my_list;\r\n\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;std::map&lt;int, int&gt;::iterator&gt;::difference_type,\r\n            std::ptrdiff_t\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;std::map&lt;int, int&gt;::iterator&gt;::value_type,\r\n            std::pair&lt;const int, int&gt;\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;std::map&lt;int, int&gt;::iterator&gt;::iterator_category,\r\n            std::bidirectional_iterator_tag\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n//void* p;\r\n\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;int*&gt;::difference_type,\r\n            std::ptrdiff_t\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;int*&gt;::value_type,\r\n            int\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;int*&gt;::iterator_category,\r\n            std::random_access_iterator_tag\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n    return 0;\r\n}</pre>\r\n&nbsp;\r\n\r\n&nbsp;','test iterator_traits','','inherit','closed','closed','','86-revision-v1','','','2018-10-10 02:30:36','2018-10-10 02:30:36','',86,'http://45.77.202.181/?p=121',0,'revision','',0),(122,1,'2018-10-10 02:31:19','2018-10-10 02:31:19','<pre class=\"EnlighterJSRAW\" data-enlighter-linenumbers=\"false\" data-enlighter-language=\"cpp\">#include &lt;iostream&gt;\r\n#include &lt;vector&gt;\r\n#include &lt;list&gt;\r\n#include &lt;map&gt;\r\n\r\nusing namespace std;\r\n\r\nint main() {\r\n//std::vector&lt;int&gt; my_vec;\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;std::vector&lt;int&gt;::iterator&gt;::difference_type,\r\n            std::ptrdiff_t\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;std::vector&lt;int&gt;::iterator&gt;::value_type,\r\n            int\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;std::vector&lt;int&gt;::iterator&gt;::iterator_category,\r\n            std::random_access_iterator_tag\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n//std::list&lt;int&gt; my_list;\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;std::list&lt;int&gt;::iterator&gt;::difference_type,\r\n            std::ptrdiff_t\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;std::list&lt;int&gt;::iterator&gt;::value_type,\r\n            int\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;std::list&lt;int&gt;::iterator&gt;::iterator_category,\r\n            std::bidirectional_iterator_tag\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n//std::map&lt;int, int&gt; my_list;\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;std::map&lt;int, int&gt;::iterator&gt;::difference_type,\r\n            std::ptrdiff_t\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;std::map&lt;int, int&gt;::iterator&gt;::value_type,\r\n            std::pair&lt;const int, int&gt;\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;std::map&lt;int, int&gt;::iterator&gt;::iterator_category,\r\n            std::bidirectional_iterator_tag\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n//void* p;\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;int*&gt;::difference_type,\r\n            std::ptrdiff_t\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;int*&gt;::value_type,\r\n            int\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;int*&gt;::iterator_category,\r\n            std::random_access_iterator_tag\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n    return 0;\r\n}</pre>\r\n&nbsp;\r\n\r\n&nbsp;','test iterator_traits','','inherit','closed','closed','','86-revision-v1','','','2018-10-10 02:31:19','2018-10-10 02:31:19','',86,'http://45.77.202.181/?p=122',0,'revision','',0),(123,1,'2018-10-10 02:32:32','2018-10-10 02:32:32','<pre class=\"EnlighterJSRAW\" data-enlighter-linenumbers=\"false\" data-enlighter-language=\"cpp\" data-enlighter-theme=\"eclipse\">#include &lt;iostream&gt;\r\n#include &lt;vector&gt;\r\n#include &lt;list&gt;\r\n#include &lt;map&gt;\r\n\r\nusing namespace std;\r\n\r\nint main() {\r\n//std::vector&lt;int&gt; my_vec;\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;std::vector&lt;int&gt;::iterator&gt;::difference_type,\r\n            std::ptrdiff_t           &gt;::value&lt;&lt;endl;\r\n\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;std::vector&lt;int&gt;::iterator&gt;::value_type,\r\n            int\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;std::vector&lt;int&gt;::iterator&gt;::iterator_category,\r\n            std::random_access_iterator_tag\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n//std::list&lt;int&gt; my_list;\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;std::list&lt;int&gt;::iterator&gt;::difference_type,\r\n            std::ptrdiff_t\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;std::list&lt;int&gt;::iterator&gt;::value_type,\r\n            int\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;std::list&lt;int&gt;::iterator&gt;::iterator_category,\r\n            std::bidirectional_iterator_tag\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n//std::map&lt;int, int&gt; my_list;\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;std::map&lt;int, int&gt;::iterator&gt;::difference_type,\r\n            std::ptrdiff_t\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;std::map&lt;int, int&gt;::iterator&gt;::value_type,\r\n            std::pair&lt;const int, int&gt;\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;std::map&lt;int, int&gt;::iterator&gt;::iterator_category,\r\n            std::bidirectional_iterator_tag\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n//void* p;\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;int*&gt;::difference_type,\r\n            std::ptrdiff_t\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;int*&gt;::value_type,\r\n            int\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;int*&gt;::iterator_category,\r\n            std::random_access_iterator_tag\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n    return 0;\r\n}</pre>\r\n&nbsp;\r\n\r\n&nbsp;','test iterator_traits','','inherit','closed','closed','','86-revision-v1','','','2018-10-10 02:32:32','2018-10-10 02:32:32','',86,'http://45.77.202.181/?p=123',0,'revision','',0),(124,1,'2018-10-10 02:34:10','2018-10-10 02:34:10','<pre class=\"EnlighterJSRAW\" data-enlighter-linenumbers=\"false\" data-enlighter-language=\"cpp\" data-enlighter-theme=\"eclipse\">#include &lt;iostream&gt;\r\n#include &lt;vector&gt;\r\n#include &lt;list&gt;\r\n#include &lt;map&gt;\r\n\r\nusing namespace std;\r\n\r\nint main() {\r\n//std::vector&lt;int&gt; my_vec;\r\n    cout&lt;&lt;std::is_same&lt;std::iterator_traits&lt;std::vector&lt;int&gt;::iterator&gt;::difference_type,\r\n            std::ptrdiff_t           &gt;::value&lt;&lt;endl;\r\n\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;std::vector&lt;int&gt;::iterator&gt;::value_type,\r\n            int\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;std::vector&lt;int&gt;::iterator&gt;::iterator_category,\r\n            std::random_access_iterator_tag\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n//std::list&lt;int&gt; my_list;\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;std::list&lt;int&gt;::iterator&gt;::difference_type,\r\n            std::ptrdiff_t\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;std::list&lt;int&gt;::iterator&gt;::value_type,\r\n            int\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;std::list&lt;int&gt;::iterator&gt;::iterator_category,\r\n            std::bidirectional_iterator_tag\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n//std::map&lt;int, int&gt; my_list;\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;std::map&lt;int, int&gt;::iterator&gt;::difference_type,\r\n            std::ptrdiff_t\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;std::map&lt;int, int&gt;::iterator&gt;::value_type,\r\n            std::pair&lt;const int, int&gt;\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;std::map&lt;int, int&gt;::iterator&gt;::iterator_category,\r\n            std::bidirectional_iterator_tag\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n//void* p;\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;int*&gt;::difference_type,\r\n            std::ptrdiff_t\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;int*&gt;::value_type,\r\n            int\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;int*&gt;::iterator_category,\r\n            std::random_access_iterator_tag\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n    return 0;\r\n}</pre>\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"cpp\">    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;std::vector&lt;int&gt;::iterator&gt;::difference_type,\r\n            std::ptrdiff_t\r\n            &gt;::value&lt;&lt;endl;</pre>\r\n&nbsp;\r\n\r\n&nbsp;','test iterator_traits','','inherit','closed','closed','','86-revision-v1','','','2018-10-10 02:34:10','2018-10-10 02:34:10','',86,'http://45.77.202.181/?p=124',0,'revision','',0),(125,1,'2018-10-10 02:34:46','2018-10-10 02:34:46','<pre class=\"EnlighterJSRAW\" data-enlighter-linenumbers=\"false\" data-enlighter-language=\"cpp\" data-enlighter-theme=\"eclipse\">#include &lt;iostream&gt;\r\n#include &lt;vector&gt;\r\n#include &lt;list&gt;\r\n#include &lt;map&gt;\r\n\r\nusing namespace std;\r\n\r\nint main() {\r\n//std::vector&lt;int&gt; my_vec;\r\n    cout&lt;&lt;std::is_same&lt;std::iterator_traits&lt;std::vector&lt;int&gt;::iterator&gt;::difference_type,\r\n            std::ptrdiff_t           &gt;::value&lt;&lt;endl;\r\n\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;std::vector&lt;int&gt;::iterator&gt;::value_type,\r\n            int\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;std::vector&lt;int&gt;::iterator&gt;::iterator_category,\r\n            std::random_access_iterator_tag\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n//std::list&lt;int&gt; my_list;\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;std::list&lt;int&gt;::iterator&gt;::difference_type,\r\n            std::ptrdiff_t\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;std::list&lt;int&gt;::iterator&gt;::value_type,\r\n            int\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;std::list&lt;int&gt;::iterator&gt;::iterator_category,\r\n            std::bidirectional_iterator_tag\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n//std::map&lt;int, int&gt; my_list;\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;std::map&lt;int, int&gt;::iterator&gt;::difference_type,\r\n            std::ptrdiff_t\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;std::map&lt;int, int&gt;::iterator&gt;::value_type,\r\n            std::pair&lt;const int, int&gt;\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;std::map&lt;int, int&gt;::iterator&gt;::iterator_category,\r\n            std::bidirectional_iterator_tag\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n//void* p;\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;int*&gt;::difference_type,\r\n            std::ptrdiff_t\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;int*&gt;::value_type,\r\n            int\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;int*&gt;::iterator_category,\r\n            std::random_access_iterator_tag\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n    return 0;\r\n}</pre>\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"cpp\">    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;std::vector&lt;int&gt;::iterator&gt;::difference_type,\r\n            std::ptrdiff_t\r\n            &gt;::value&lt;&lt;endl;</pre>\r\n&nbsp;\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"cpp\">cout&lt;&lt;std::is_same&lt;\r\n        std::iterator_traits&lt;std::vector&lt;int&gt;::iterator&gt;::difference_type,\r\n        std::ptrdiff_t\r\n        &gt;::value&lt;&lt;endl;</pre>\r\n&nbsp;','test iterator_traits','','inherit','closed','closed','','86-revision-v1','','','2018-10-10 02:34:46','2018-10-10 02:34:46','',86,'http://45.77.202.181/?p=125',0,'revision','',0),(126,1,'2018-10-10 02:35:19','2018-10-10 02:35:19','<pre class=\"EnlighterJSRAW\" data-enlighter-linenumbers=\"false\" data-enlighter-language=\"cpp\" data-enlighter-theme=\"eclipse\"></pre>\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"cpp\">cout&lt;&lt;std::is_same&lt;\r\n        std::iterator_traits&lt;std::vector&lt;int&gt;::iterator&gt;::difference_type,\r\n        std::ptrdiff_t\r\n        &gt;::value&lt;&lt;endl;</pre>\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-linenumbers=\"false\" data-enlighter-language=\"cpp\" data-enlighter-theme=\"eclipse\"></pre>\r\n&nbsp;\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-linenumbers=\"false\" data-enlighter-language=\"cpp\" data-enlighter-theme=\"eclipse\">#include &lt;iostream&gt; #include &lt;vector&gt; #include &lt;list&gt; #include &lt;map&gt; using namespace std; int main() { //std::vector&lt;int&gt; my_vec; cout&lt;&lt;std::is_same&lt;std::iterator_traits&lt;std::vector&lt;int&gt;::iterator&gt;::difference_type, std::ptrdiff_t &gt;::value&lt;&lt;endl; cout&lt;&lt;std::is_same&lt; std::iterator_traits&lt;std::vector&lt;int&gt;::iterator&gt;::value_type, int &gt;::value&lt;&lt;endl; cout&lt;&lt;std::is_same&lt; std::iterator_traits&lt;std::vector&lt;int&gt;::iterator&gt;::iterator_category, std::random_access_iterator_tag &gt;::value&lt;&lt;endl; //std::list&lt;int&gt; my_list; cout&lt;&lt;std::is_same&lt; std::iterator_traits&lt;std::list&lt;int&gt;::iterator&gt;::difference_type, std::ptrdiff_t &gt;::value&lt;&lt;endl; cout&lt;&lt;std::is_same&lt; std::iterator_traits&lt;std::list&lt;int&gt;::iterator&gt;::value_type, int &gt;::value&lt;&lt;endl; cout&lt;&lt;std::is_same&lt; std::iterator_traits&lt;std::list&lt;int&gt;::iterator&gt;::iterator_category, std::bidirectional_iterator_tag &gt;::value&lt;&lt;endl; //std::map&lt;int, int&gt; my_list; cout&lt;&lt;std::is_same&lt; std::iterator_traits&lt;std::map&lt;int, int&gt;::iterator&gt;::difference_type, std::ptrdiff_t &gt;::value&lt;&lt;endl; cout&lt;&lt;std::is_same&lt; std::iterator_traits&lt;std::map&lt;int, int&gt;::iterator&gt;::value_type, std::pair&lt;const int, int&gt; &gt;::value&lt;&lt;endl; cout&lt;&lt;std::is_same&lt; std::iterator_traits&lt;std::map&lt;int, int&gt;::iterator&gt;::iterator_category, std::bidirectional_iterator_tag &gt;::value&lt;&lt;endl; //void* p; cout&lt;&lt;std::is_same&lt; std::iterator_traits&lt;int*&gt;::difference_type, std::ptrdiff_t &gt;::value&lt;&lt;endl; cout&lt;&lt;std::is_same&lt; std::iterator_traits&lt;int*&gt;::value_type, int &gt;::value&lt;&lt;endl; cout&lt;&lt;std::is_same&lt; std::iterator_traits&lt;int*&gt;::iterator_category, std::random_access_iterator_tag &gt;::value&lt;&lt;endl; return 0; }</pre>\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"cpp\">    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;std::vector&lt;int&gt;::iterator&gt;::difference_type,\r\n            std::ptrdiff_t\r\n            &gt;::value&lt;&lt;endl;</pre>\r\n&nbsp;\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"cpp\">cout&lt;&lt;std::is_same&lt;\r\n        std::iterator_traits&lt;std::vector&lt;int&gt;::iterator&gt;::difference_type,\r\n        std::ptrdiff_t\r\n        &gt;::value&lt;&lt;endl;</pre>\r\n&nbsp;','test iterator_traits','','inherit','closed','closed','','86-revision-v1','','','2018-10-10 02:35:19','2018-10-10 02:35:19','',86,'http://45.77.202.181/?p=126',0,'revision','',0),(127,1,'2018-10-10 02:36:10','2018-10-10 02:36:10','<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">cout&lt;&lt;std::is_same&lt;std::iterator_traits&lt;std::vector&lt;int&gt;::iterator&gt;::difference_type,std::ptrdiff_t&gt;::value&lt;&lt;endl;</pre>\r\n&nbsp;\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-linenumbers=\"false\" data-enlighter-language=\"cpp\" data-enlighter-theme=\"eclipse\"></pre>\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"cpp\">cout&lt;&lt;std::is_same&lt;\r\n        std::iterator_traits&lt;std::vector&lt;int&gt;::iterator&gt;::difference_type,\r\n        std::ptrdiff_t\r\n        &gt;::value&lt;&lt;endl;</pre>\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-linenumbers=\"false\" data-enlighter-language=\"cpp\" data-enlighter-theme=\"eclipse\"></pre>\r\n&nbsp;\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-linenumbers=\"false\" data-enlighter-language=\"cpp\" data-enlighter-theme=\"eclipse\">#include &lt;iostream&gt; #include &lt;vector&gt; #include &lt;list&gt; #include &lt;map&gt; using namespace std; int main() { //std::vector&lt;int&gt; my_vec; cout&lt;&lt;std::is_same&lt;std::iterator_traits&lt;std::vector&lt;int&gt;::iterator&gt;::difference_type, std::ptrdiff_t &gt;::value&lt;&lt;endl; cout&lt;&lt;std::is_same&lt; std::iterator_traits&lt;std::vector&lt;int&gt;::iterator&gt;::value_type, int &gt;::value&lt;&lt;endl; cout&lt;&lt;std::is_same&lt; std::iterator_traits&lt;std::vector&lt;int&gt;::iterator&gt;::iterator_category, std::random_access_iterator_tag &gt;::value&lt;&lt;endl; //std::list&lt;int&gt; my_list; cout&lt;&lt;std::is_same&lt; std::iterator_traits&lt;std::list&lt;int&gt;::iterator&gt;::difference_type, std::ptrdiff_t &gt;::value&lt;&lt;endl; cout&lt;&lt;std::is_same&lt; std::iterator_traits&lt;std::list&lt;int&gt;::iterator&gt;::value_type, int &gt;::value&lt;&lt;endl; cout&lt;&lt;std::is_same&lt; std::iterator_traits&lt;std::list&lt;int&gt;::iterator&gt;::iterator_category, std::bidirectional_iterator_tag &gt;::value&lt;&lt;endl; //std::map&lt;int, int&gt; my_list; cout&lt;&lt;std::is_same&lt; std::iterator_traits&lt;std::map&lt;int, int&gt;::iterator&gt;::difference_type, std::ptrdiff_t &gt;::value&lt;&lt;endl; cout&lt;&lt;std::is_same&lt; std::iterator_traits&lt;std::map&lt;int, int&gt;::iterator&gt;::value_type, std::pair&lt;const int, int&gt; &gt;::value&lt;&lt;endl; cout&lt;&lt;std::is_same&lt; std::iterator_traits&lt;std::map&lt;int, int&gt;::iterator&gt;::iterator_category, std::bidirectional_iterator_tag &gt;::value&lt;&lt;endl; //void* p; cout&lt;&lt;std::is_same&lt; std::iterator_traits&lt;int*&gt;::difference_type, std::ptrdiff_t &gt;::value&lt;&lt;endl; cout&lt;&lt;std::is_same&lt; std::iterator_traits&lt;int*&gt;::value_type, int &gt;::value&lt;&lt;endl; cout&lt;&lt;std::is_same&lt; std::iterator_traits&lt;int*&gt;::iterator_category, std::random_access_iterator_tag &gt;::value&lt;&lt;endl; return 0; }</pre>\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"cpp\">    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;std::vector&lt;int&gt;::iterator&gt;::difference_type,\r\n            std::ptrdiff_t\r\n            &gt;::value&lt;&lt;endl;</pre>\r\n&nbsp;\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"cpp\">cout&lt;&lt;std::is_same&lt;\r\n        std::iterator_traits&lt;std::vector&lt;int&gt;::iterator&gt;::difference_type,\r\n        std::ptrdiff_t\r\n        &gt;::value&lt;&lt;endl;</pre>\r\n&nbsp;','test iterator_traits','','inherit','closed','closed','','86-revision-v1','','','2018-10-10 02:36:10','2018-10-10 02:36:10','',86,'http://45.77.202.181/?p=127',0,'revision','',0),(129,1,'2018-10-10 03:11:18','2018-10-10 03:11:18','<pre>#include &lt;iostream&gt;\r\n#include &lt;vector&gt;\r\n#include &lt;list&gt;\r\n#include &lt;map&gt;\r\n\r\nusing namespace std;\r\n\r\nint main() {\r\n\r\n//std::vector&lt;int&gt; my_vec;\r\n\r\ncout&lt;&lt;std::is_same&lt;\r\n std::iterator_traits&lt;std::vector&lt;int&gt;::iterator&gt;::difference_type,\r\n std::ptrdiff_t\r\n &gt;::value&lt;&lt;endl;\r\n\r\ncout&lt;&lt;std::is_same&lt;\r\n std::iterator_traits&lt;std::vector&lt;int&gt;::iterator&gt;::value_type,\r\n int\r\n &gt;::value&lt;&lt;endl;\r\n\r\ncout&lt;&lt;std::is_same&lt;\r\n std::iterator_traits&lt;std::vector&lt;int&gt;::iterator&gt;::iterator_category,\r\n std::random_access_iterator_tag\r\n &gt;::value&lt;&lt;endl;\r\n\r\n//std::list&lt;int&gt; my_list;\r\n\r\ncout&lt;&lt;std::is_same&lt;\r\n std::iterator_traits&lt;std::list&lt;int&gt;::iterator&gt;::difference_type,\r\n std::ptrdiff_t\r\n &gt;::value&lt;&lt;endl;\r\n\r\ncout&lt;&lt;std::is_same&lt;\r\n std::iterator_traits&lt;std::list&lt;int&gt;::iterator&gt;::value_type,\r\n int\r\n &gt;::value&lt;&lt;endl;\r\n\r\ncout&lt;&lt;std::is_same&lt;\r\n std::iterator_traits&lt;std::list&lt;int&gt;::iterator&gt;::iterator_category,\r\n std::bidirectional_iterator_tag\r\n &gt;::value&lt;&lt;endl;\r\n\r\n//std::map&lt;int, int&gt; my_list;\r\n\r\ncout&lt;&lt;std::is_same&lt;\r\n std::iterator_traits&lt;std::map&lt;int, int&gt;::iterator&gt;::difference_type,\r\n std::ptrdiff_t\r\n &gt;::value&lt;&lt;endl;\r\n\r\ncout&lt;&lt;std::is_same&lt;\r\n std::iterator_traits&lt;std::map&lt;int, int&gt;::iterator&gt;::value_type,\r\n std::pair&lt;const int, int&gt;\r\n &gt;::value&lt;&lt;endl;\r\n\r\ncout&lt;&lt;std::is_same&lt;\r\n std::iterator_traits&lt;std::map&lt;int, int&gt;::iterator&gt;::iterator_category,\r\n std::bidirectional_iterator_tag\r\n &gt;::value&lt;&lt;endl;\r\n\r\n//void* p;\r\n\r\ncout&lt;&lt;std::is_same&lt;\r\n std::iterator_traits&lt;int*&gt;::difference_type,\r\n std::ptrdiff_t\r\n &gt;::value&lt;&lt;endl;\r\n\r\ncout&lt;&lt;std::is_same&lt;\r\n std::iterator_traits&lt;int*&gt;::value_type,\r\n int\r\n &gt;::value&lt;&lt;endl;\r\n\r\ncout&lt;&lt;std::is_same&lt;\r\n std::iterator_traits&lt;int*&gt;::iterator_category,\r\n std::random_access_iterator_tag\r\n &gt;::value&lt;&lt;endl;\r\n\r\nreturn 0;\r\n}</pre>','test iterator_traits','','inherit','closed','closed','','86-revision-v1','','','2018-10-10 03:11:18','2018-10-10 03:11:18','',86,'http://45.77.202.181/?p=129',0,'revision','',0),(130,1,'2018-10-10 05:49:58','2018-10-10 05:49:58','<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">#include &lt;iostream&gt;\r\n#include &lt;vector&gt;\r\n#include &lt;list&gt;\r\n#include &lt;map&gt;\r\n\r\nusing namespace std;\r\n\r\nint main() {\r\n\r\n//std::vector&lt;int&gt; my_vec;\r\n\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;std::vector&lt;int&gt;::iterator&gt;::difference_type,\r\n            std::ptrdiff_t\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;std::vector&lt;int&gt;::iterator&gt;::value_type,\r\n            int\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;std::vector&lt;int&gt;::iterator&gt;::iterator_category,\r\n            std::random_access_iterator_tag\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n//std::list&lt;int&gt; my_list;\r\n\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;std::list&lt;int&gt;::iterator&gt;::difference_type,\r\n            std::ptrdiff_t\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;std::list&lt;int&gt;::iterator&gt;::value_type,\r\n            int\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;std::list&lt;int&gt;::iterator&gt;::iterator_category,\r\n            std::bidirectional_iterator_tag\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n//std::map&lt;int, int&gt; my_list;\r\n\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;std::map&lt;int, int&gt;::iterator&gt;::difference_type,\r\n            std::ptrdiff_t\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;std::map&lt;int, int&gt;::iterator&gt;::value_type,\r\n            std::pair&lt;const int, int&gt;\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;std::map&lt;int, int&gt;::iterator&gt;::iterator_category,\r\n            std::bidirectional_iterator_tag\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n//void* p;\r\n\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;int*&gt;::difference_type,\r\n            std::ptrdiff_t\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;int*&gt;::value_type,\r\n            int\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n    cout&lt;&lt;std::is_same&lt;\r\n            std::iterator_traits&lt;int*&gt;::iterator_category,\r\n            std::random_access_iterator_tag\r\n            &gt;::value&lt;&lt;endl;\r\n\r\n    return 0;\r\n}</pre>\r\n输出：\r\n\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1','test iterator_traits','','inherit','closed','closed','','86-revision-v1','','','2018-10-10 05:49:58','2018-10-10 05:49:58','',86,'http://45.77.202.181/?p=130',0,'revision','',0),(131,1,'2018-10-10 06:32:39','2018-10-10 06:32:39','<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">int main\n{}</pre>\n&nbsp;','test','','trash','open','open','','__trashed','','','2018-10-10 06:32:39','2018-10-10 06:32:39','',0,'http://45.77.202.181/?p=131',0,'post','',0),(132,1,'2018-10-10 06:20:31','2018-10-10 06:20:31','<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">int main\r\n{}</pre>\r\n&nbsp;','test','','inherit','closed','closed','','131-revision-v1','','','2018-10-10 06:20:31','2018-10-10 06:20:31','',131,'http://45.77.202.181/?p=132',0,'revision','',0),(134,1,'2018-10-10 06:36:37','2018-10-10 06:36:37','<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">            \r\n                #include &lt;iostream&gt;\r\n                #include &lt;functional&gt;\r\n    #include &lt;vector&gt;\r\n    \r\n    using namespace std;\r\n\r\ntemplate&lt;int Id&gt;\r\nclass ID\r\n{\r\n};\r\n\r\nvoid fun(ID&lt;0&gt; id)\r\n    {\r\n        cout&lt;&lt;\"eeeee\"&lt;&lt;endl;\r\n    }\r\n    \r\n    void fun(ID&lt;3&gt; id)\r\n    {\r\n        cout&lt;&lt;\"33333\"&lt;&lt;endl;\r\n    }\r\n    \r\n    void fun(ID&lt;5&gt; id)\r\n    {\r\n        cout&lt;&lt;\"55555\"&lt;&lt;endl;\r\n    }\r\n    \r\n    using MessageId = unsigned int;\r\n    \r\ntemplate &lt;MessageId... routeIds&gt;\r\nclass Routes\r\n{\r\npublic:\r\n\r\n    static constexpr bool route(MessageId msgId)\r\n    {\r\n        constexpr MessageId currentId = unpackFirstId&lt;routeIds...&gt;();\r\n        if (currentId == msgId)\r\n        {\r\n            fun(ID&lt;currentId&gt;());\r\n            return true;\r\n        }        else\r\n        {\r\n            cout&lt;&lt;currentId&lt;&lt;\"!=\"&lt;&lt;msgId&lt;&lt;endl;\r\n        }\r\n   \r\n        return searchFurther&lt;routeIds...&gt;(msgId);\r\n    }\r\n\r\nprivate:\r\n    template &lt;MessageId skippedId, MessageId... remainingIds&gt;\r\n    static constexpr bool searchFurther(MessageId msgId)\r\n    {\r\n        return Routes&lt;remainingIds...&gt;::route(msgId);\r\n    }\r\n\r\n    template &lt;MessageId firstId, MessageId... remainingIds&gt;\r\n    static constexpr MessageId unpackFirstId()\r\n    {\r\n        return firstId;\r\n    }};\r\n\r\ntemplate &lt;&gt;\r\nstruct Routes&lt;&gt;\r\n{\r\n    static constexpr bool route(MessageId msgId)\r\n    {\r\n        return false;\r\n    }\r\n};\r\n\r\nint main() \r\n{\r\n    int a = 5;\r\n    Routes&lt;0, 3, 5&gt;::route(a);  \r\n    return 0;\r\n}</pre>\r\n&nbsp;','Switch-if 语句的模板替换','','inherit','closed','closed','','82-revision-v1','','','2018-10-10 06:36:37','2018-10-10 06:36:37','',82,'http://45.77.202.181/?p=134',0,'revision','',0),(135,1,'2018-10-10 06:37:28','2018-10-10 06:37:28','<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">            \r\n#include &lt;iostream&gt;\r\n#include &lt;functional&gt;\r\n#include &lt;vector&gt;\r\n\r\nusing namespace std;\r\n\r\ntemplate&lt;int Id&gt;\r\nclass ID\r\n{\r\n};\r\n\r\nvoid fun(ID&lt;0&gt; id)\r\n    {\r\n        cout&lt;&lt;\"eeeee\"&lt;&lt;endl;\r\n    }\r\n    \r\n    void fun(ID&lt;3&gt; id)\r\n    {\r\n        cout&lt;&lt;\"33333\"&lt;&lt;endl;\r\n    }\r\n    \r\n    void fun(ID&lt;5&gt; id)\r\n    {\r\n        cout&lt;&lt;\"55555\"&lt;&lt;endl;\r\n    }\r\n    \r\n    using MessageId = unsigned int;\r\n    \r\ntemplate &lt;MessageId... routeIds&gt;\r\nclass Routes\r\n{\r\npublic:\r\n\r\n    static constexpr bool route(MessageId msgId)\r\n    {\r\n        constexpr MessageId currentId = unpackFirstId&lt;routeIds...&gt;();\r\n        if (currentId == msgId)\r\n        {\r\n            fun(ID&lt;currentId&gt;());\r\n            return true;\r\n        }        else\r\n        {\r\n            cout&lt;&lt;currentId&lt;&lt;\"!=\"&lt;&lt;msgId&lt;&lt;endl;\r\n        }\r\n   \r\n        return searchFurther&lt;routeIds...&gt;(msgId);\r\n    }\r\n\r\nprivate:\r\n    template &lt;MessageId skippedId, MessageId... remainingIds&gt;\r\n    static constexpr bool searchFurther(MessageId msgId)\r\n    {\r\n        return Routes&lt;remainingIds...&gt;::route(msgId);\r\n    }\r\n\r\n    template &lt;MessageId firstId, MessageId... remainingIds&gt;\r\n    static constexpr MessageId unpackFirstId()\r\n    {\r\n        return firstId;\r\n    }};\r\n\r\ntemplate &lt;&gt;\r\nstruct Routes&lt;&gt;\r\n{\r\n    static constexpr bool route(MessageId msgId)\r\n    {\r\n        return false;\r\n    }\r\n};\r\n\r\nint main() \r\n{\r\n    int a = 5;\r\n    Routes&lt;0, 3, 5&gt;::route(a);  \r\n    return 0;\r\n}</pre>\r\n&nbsp;','Switch-if 语句的模板替换','','inherit','closed','closed','','82-revision-v1','','','2018-10-10 06:37:28','2018-10-10 06:37:28','',82,'http://45.77.202.181/?p=135',0,'revision','',0),(136,1,'2018-10-10 06:40:13','2018-10-10 06:40:13','<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">                \n#include &lt;iostream&gt;\n#include &lt;functional&gt;\n#include &lt;vector&gt;\n\nusing namespace std;\n\ntemplate&lt;int Id&gt;\nclass ID\n{\n};\n\nvoid fun(ID&lt;0&gt; id)\n{\n    cout&lt;&lt;\"eeeee\"&lt;&lt;endl;\n}\n\nvoid fun(ID&lt;3&gt; id)\n{\n    cout&lt;&lt;\"33333\"&lt;&lt;endl;\n}\n\nvoid fun(ID&lt;5&gt; id)\n{\n    cout&lt;&lt;\"55555\"&lt;&lt;endl;\n}\n\nusing MessageId = unsigned int;\n    \ntemplate &lt;MessageId... routeIds&gt;\nclass Routes\n{\npublic:\n\n    static constexpr bool route(MessageId msgId)\n    {\n        constexpr MessageId currentId = unpackFirstId&lt;routeIds...&gt;();\n        if (currentId == msgId)\n        {\n            fun(ID&lt;currentId&gt;());\n            return true;\n        }\n        else\n        {\n            cout&lt;&lt;currentId&lt;&lt;\"!=\"&lt;&lt;msgId&lt;&lt;endl;\n        }\n   \n        return searchFurther&lt;routeIds...&gt;(msgId);\n    }\n\nprivate:\n    template &lt;MessageId skippedId, MessageId... remainingIds&gt;\n    static constexpr bool searchFurther(MessageId msgId)\n    {\n        return Routes&lt;remainingIds...&gt;::route(msgId);\n    }\n\n    template &lt;MessageId firstId, MessageId... remainingIds&gt;\n    static constexpr MessageId unpackFirstId()\n    {\n        return firstId;\n    }\n};\n\ntemplate &lt;&gt;\nstruct Routes&lt;&gt;\n{\n    static constexpr bool route(MessageId msgId)\n    {\n        return false;\n    }\n};\n\nint main() \n{\n    int a = 5;\n    Routes&lt;0, 3, 5&gt;::route(a);  \n    return 0;\n}</pre>\n&nbsp;','Switch-if 语句的模板替换','','inherit','closed','closed','','82-autosave-v1','','','2018-10-10 06:40:13','2018-10-10 06:40:13','',82,'http://45.77.202.181/?p=136',0,'revision','',0),(137,1,'2018-10-10 06:39:09','2018-10-10 06:39:09','<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">            \r\n#include &lt;iostream&gt;\r\n#include &lt;functional&gt;\r\n#include &lt;vector&gt;\r\n\r\nusing namespace std;\r\n\r\ntemplate&lt;int Id&gt;\r\nclass ID\r\n{\r\n};\r\n\r\nvoid fun(ID&lt;0&gt; id)\r\n{\r\n    cout&lt;&lt;\"eeeee\"&lt;&lt;endl;\r\n}\r\n\r\nvoid fun(ID&lt;3&gt; id)\r\n{\r\n    cout&lt;&lt;\"33333\"&lt;&lt;endl;\r\n}\r\n\r\nvoid fun(ID&lt;5&gt; id)\r\n{\r\n    cout&lt;&lt;\"55555\"&lt;&lt;endl;\r\n}\r\n\r\nusing MessageId = unsigned int;\r\n    \r\ntemplate &lt;MessageId... routeIds&gt;\r\nclass Routes\r\n{\r\npublic:\r\n\r\n    static constexpr bool route(MessageId msgId)\r\n    {\r\n        constexpr MessageId currentId = unpackFirstId&lt;routeIds...&gt;();\r\n        if (currentId == msgId)\r\n        {\r\n            fun(ID&lt;currentId&gt;());\r\n            return true;\r\n        }        else\r\n        {\r\n            cout&lt;&lt;currentId&lt;&lt;\"!=\"&lt;&lt;msgId&lt;&lt;endl;\r\n        }\r\n   \r\n        return searchFurther&lt;routeIds...&gt;(msgId);\r\n    }\r\n\r\nprivate:\r\n    template &lt;MessageId skippedId, MessageId... remainingIds&gt;\r\n    static constexpr bool searchFurther(MessageId msgId)\r\n    {\r\n        return Routes&lt;remainingIds...&gt;::route(msgId);\r\n    }\r\n\r\n    template &lt;MessageId firstId, MessageId... remainingIds&gt;\r\n    static constexpr MessageId unpackFirstId()\r\n    {\r\n        return firstId;\r\n    }};\r\n\r\ntemplate &lt;&gt;\r\nstruct Routes&lt;&gt;\r\n{\r\n    static constexpr bool route(MessageId msgId)\r\n    {\r\n        return false;\r\n    }\r\n};\r\n\r\nint main() \r\n{\r\n    int a = 5;\r\n    Routes&lt;0, 3, 5&gt;::route(a);  \r\n    return 0;\r\n}</pre>\r\n&nbsp;','Switch-if 语句的模板替换','','inherit','closed','closed','','82-revision-v1','','','2018-10-10 06:39:09','2018-10-10 06:39:09','',82,'http://45.77.202.181/?p=137',0,'revision','',0),(138,1,'2018-10-10 06:40:24','2018-10-10 06:40:24','<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">                \r\n#include &lt;iostream&gt;\r\n#include &lt;functional&gt;\r\n#include &lt;vector&gt;\r\n\r\nusing namespace std;\r\n\r\ntemplate&lt;int Id&gt;\r\nclass ID\r\n{\r\n};\r\n\r\nvoid fun(ID&lt;0&gt; id)\r\n{\r\n    cout&lt;&lt;\"eeeee\"&lt;&lt;endl;\r\n}\r\n\r\nvoid fun(ID&lt;3&gt; id)\r\n{\r\n    cout&lt;&lt;\"33333\"&lt;&lt;endl;\r\n}\r\n\r\nvoid fun(ID&lt;5&gt; id)\r\n{\r\n    cout&lt;&lt;\"55555\"&lt;&lt;endl;\r\n}\r\n\r\nusing MessageId = unsigned int;\r\n    \r\ntemplate &lt;MessageId... routeIds&gt;\r\nclass Routes\r\n{\r\npublic:\r\n    static constexpr bool route(MessageId msgId)\r\n    {\r\n        constexpr MessageId currentId = unpackFirstId&lt;routeIds...&gt;();\r\n        if (currentId == msgId)\r\n        {\r\n            fun(ID&lt;currentId&gt;());\r\n            return true;\r\n        }\r\n        else\r\n        {\r\n            cout&lt;&lt;currentId&lt;&lt;\"!=\"&lt;&lt;msgId&lt;&lt;endl;\r\n        }\r\n        return searchFurther&lt;routeIds...&gt;(msgId);\r\n    }\r\n\r\nprivate:\r\n    template &lt;MessageId skippedId, MessageId... remainingIds&gt;\r\n    static constexpr bool searchFurther(MessageId msgId)\r\n    {\r\n        return Routes&lt;remainingIds...&gt;::route(msgId);\r\n    }\r\n\r\n    template &lt;MessageId firstId, MessageId... remainingIds&gt;\r\n    static constexpr MessageId unpackFirstId()\r\n    {\r\n        return firstId;\r\n    }\r\n};\r\n\r\ntemplate &lt;&gt;\r\nstruct Routes&lt;&gt;\r\n{\r\n    static constexpr bool route(MessageId msgId)\r\n    {\r\n        return false;\r\n    }\r\n};\r\n\r\nint main() \r\n{\r\n    int a = 5;\r\n    Routes&lt;0, 3, 5&gt;::route(a);  \r\n    return 0;\r\n}</pre>\r\n&nbsp;','Switch-if 语句的模板替换','','inherit','closed','closed','','82-revision-v1','','','2018-10-10 06:40:24','2018-10-10 06:40:24','',82,'http://45.77.202.181/?p=138',0,'revision','',0),(139,1,'2018-10-10 06:43:49','2018-10-10 06:43:49','如果判断条件在编译器即可确定，则应用模板来替换if语句\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">#include &lt;iostream&gt;\n#include &lt;functional&gt;\n#include &lt;vector&gt;\n\nusing namespace std;\n\ntemplate&lt;int n&gt;\nvoid fun()\n{\n   cout&lt;&lt;\"eeeee\"&lt;&lt;endl;\n}\n\ntemplate&lt;&gt;\nvoid fun&lt;3&gt;()\n{\n    cout&lt;&lt;\"33333\"&lt;&lt;endl;\n}\n\ntemplate&lt;&gt;\nvoid fun&lt;5&gt;()\n{\n    cout&lt;&lt;\"55555\"&lt;&lt;endl;\n}\n\nint main()\n{\nconstexpr int n = 5;\nfun&lt;n&gt;();\nreturn 0;\n}</pre>\n&nbsp;\n\n&nbsp;','if语句的替换','','inherit','closed','closed','','76-autosave-v1','','','2018-10-10 06:43:49','2018-10-10 06:43:49','',76,'http://45.77.202.181/?p=139',0,'revision','',0),(140,1,'2018-10-10 06:43:52','2018-10-10 06:43:52','如果判断条件在编译器即可确定，则应用模板来替换if语句\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">#include &lt;iostream&gt;\r\n#include &lt;functional&gt;\r\n#include &lt;vector&gt;\r\n\r\nusing namespace std;\r\n\r\ntemplate&lt;int n&gt;\r\nvoid fun()\r\n{\r\n   cout&lt;&lt;\"eeeee\"&lt;&lt;endl;\r\n}\r\n\r\ntemplate&lt;&gt;\r\nvoid fun&lt;3&gt;()\r\n{\r\n    cout&lt;&lt;\"33333\"&lt;&lt;endl;\r\n}\r\n\r\ntemplate&lt;&gt;\r\nvoid fun&lt;5&gt;()\r\n{\r\n    cout&lt;&lt;\"55555\"&lt;&lt;endl;\r\n}\r\n\r\nint main()\r\n{\r\n    constexpr int n = 5;\r\n    fun&lt;n&gt;();\r\n    return 0;\r\n}</pre>\r\n&nbsp;\r\n\r\n&nbsp;','if语句的替换','','inherit','closed','closed','','76-revision-v1','','','2018-10-10 06:43:52','2018-10-10 06:43:52','',76,'http://45.77.202.181/?p=140',0,'revision','',0),(141,1,'2018-10-10 06:51:46','2018-10-10 06:51:46','1、最原始\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">#include &lt;iostream&gt;\r\n#include &lt;vector&gt;\r\n\r\nusing namespace std;\r\n\r\nclass A\r\n{\r\npublic:\r\n    A(){cout&lt;&lt;\"A ctor\"&lt;&lt;endl;}\r\n    A(const A&amp;){cout&lt;&lt;\"A copy\"&lt;&lt;endl;}\r\n    A(const A&amp;&amp;){cout&lt;&lt;\"A move\"&lt;&lt;endl;}\r\n    ~A(){cout&lt;&lt;\"A dtor\"&lt;&lt;endl;}\r\n};\r\n\r\nstd::vector&lt;A&gt; vec;\r\nvoid fun(A a)\r\n{\r\n    vec.push_back(a);\r\n}\r\n\r\nint main()\r\n{\r\n    A a;\r\n    fun(a);\r\n    return 0;\r\n}</pre>\r\n2、增加引用可减少一次拷贝\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">std::vector&lt;A&gt; vec;\r\nvoid fun(A&amp; a)\r\n{\r\n    vec.push_back(a);\r\n}\r\n\r\nint main() \r\n{\r\n    A a;\r\n    fun(a);\r\n    return 0;\r\n}\r\n\r\n</pre>\r\n3、引用的基础上，增加std::move，虽然目的达到, 但有风险，错误的做法，因为不知道外面对a的操作\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">std::vector&lt;A&gt; vec;\r\nvoid fun(A&amp; a)\r\n{\r\n    vec.push_back(std::move(a));\r\n}</pre>\r\n4、引用的基础上，增加const，有编程了copy，而不是move了，这里A const&amp; a类型经过move之后，是A const&amp;&amp; 类型，push_back不接受这个类型，退化上调用A const&amp;即拷贝。所以move并不是真的就move，move发生在创建新对象的时候，move值是try to move\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">std::vector&lt;A&gt; vec;\r\nvoid fun(A const&amp; a)\r\n{\r\n    std::cout &lt;&lt; \"-------\" &lt;&lt; std::endl;\r\n    vec.push_back(std::move(a));\r\n}\r\n\r\n</pre>\r\n5、不用引用，一次构造，两次移动，不耗性能，所以看到一个函数传了一个对象没有引用，不用惊讶，里面八成用了移动\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">void fun(A a)\r\n{\r\n    vec.push_back(std::move(a));\r\n}\r\n\r\nint main() {\r\n    A a;\r\n    fun(std::move(a));\r\n    std::cout &lt;&lt; \"Hello, World!\" &lt;&lt; std::endl;\r\n    return 0;\r\n}</pre>\r\n<strong> 输出：</strong>\r\n\r\n<strong>A ctor\r\nA move\r\nA move</strong>\r\n\r\n6、改成右值引用，可再减少一次移动，但不要傻乎乎的用A const&amp;&amp; a，不然又变拷贝了\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">void fun(A&amp;&amp; a)\r\n{\r\n    std::cout &lt;&lt; \"-------\" &lt;&lt; std::endl;\r\n    vec.push_back(std::move(a));\r\n}\r\n\r\nint main() {\r\n    A a;\r\n    fun(std::move(a));\r\n    std::cout &lt;&lt; \"Hello, World!\" &lt;&lt; std::endl;\r\n    return 0;\r\n}\r\n\r\nA ctor\r\nA move</pre>\r\n<p align=\"left\">7、改成模板，又变的有风险了，正常来说，右值引用不能引用左值，但在模板中，因为引用坍缩规则，右值引用可能退化成左值引用，风险同3.</p>\r\n\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">template &lt;class T&gt;\r\nvoid fun(T&amp;&amp; a)\r\n{\r\n    vec.push_back(std::move(a));\r\n}\r\n\r\nint main() {\r\n    A a;\r\n    fun(a);\r\n    std::cout &lt;&lt; \"Hello, World!\" &lt;&lt; std::endl;\r\n    return 0;\r\n}</pre>\r\n8、最终版，完美转发\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">template &lt;class T&gt;\r\nvoid fun(T&amp;&amp; a)\r\n{\r\n    vec.push_back(std::forward&lt;T&gt;(a));\r\n}\r\n\r\nint main() {\r\n    A a;\r\n    fun(std::move(a));\r\n    std::cout &lt;&lt; \"Hello, World!\" &lt;&lt; std::endl;\r\n    return 0;\r\n}\r\n\r\nA ctor\r\nA move</pre>\r\n&nbsp;\r\n\r\n&nbsp;','完美转发','','inherit','closed','closed','','74-autosave-v1','','','2018-10-10 06:51:46','2018-10-10 06:51:46','',74,'http://45.77.202.181/?p=141',0,'revision','',0),(142,1,'2018-10-10 06:51:32','2018-10-10 06:51:32','1、最原始\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">#include &lt;iostream&gt;\r\n#include &lt;vector&gt;\r\n\r\nusing namespace std;\r\n\r\nclass A\r\n{\r\npublic:\r\n    A(){cout&lt;&lt;\"A ctor\"&lt;&lt;endl;}\r\n    A(const A&amp;){cout&lt;&lt;\"A copy\"&lt;&lt;endl;}\r\n    A(const A&amp;&amp;){cout&lt;&lt;\"A move\"&lt;&lt;endl;}\r\n    ~A(){cout&lt;&lt;\"A dtor\"&lt;&lt;endl;}\r\n};\r\n\r\nstd::vector&lt;A&gt; vec;\r\nvoid fun(A a)\r\n{\r\n    vec.push_back(a);\r\n}\r\n\r\nint main()\r\n{\r\n    A a;\r\n    fun(a);\r\n    return 0;\r\n}</pre>\r\n2、增加引用可减少一次拷贝\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">std::vector&lt;A&gt; vec;\r\nvoid fun(A&amp; a)\r\n{\r\n    vec.push_back(a);\r\n}\r\n\r\nint main() \r\n{\r\n    A a;\r\n    fun(a);\r\n    return 0;\r\n}\r\n\r\n</pre>\r\n3、引用的基础上，增加std::move，虽然目的达到, 但有风险，错误的做法，因为不知道外面对a的操作\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">std::vector&lt;A&gt; vec;\r\nvoid fun(A&amp; a)\r\n{\r\n    vec.push_back(std::move(a));\r\n}</pre>\r\n4、引用的基础上，增加const，有编程了copy，而不是move了，这里A const&amp; a类型经过move之后，是A const&amp;&amp; 类型，push_back不接受这个类型，退化上调用A const&amp;即拷贝。所以move并不是真的就move，move发生在创建新对象的时候，move值是try to move\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">std::vector&lt;A&gt; vec;\r\nvoid fun(A const&amp; a)\r\n{\r\n    std::cout &lt;&lt; \"-------\" &lt;&lt; std::endl;\r\n    vec.push_back(std::move(a));\r\n}\r\n\r\n</pre>\r\n5、不用引用，一次构造，两次移动，不耗性能，所以看到一个函数传了一个对象没有引用，不用惊讶，里面八成用了移动\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">void fun(A a)\r\n{\r\n    vec.push_back(std::move(a));\r\n}\r\n\r\nint main() {\r\n    A a;\r\n    fun(std::move(a));\r\n    std::cout &lt;&lt; \"Hello, World!\" &lt;&lt; std::endl;\r\n    return 0;\r\n}</pre>\r\n<strong> 输出：</strong>\r\n\r\n<strong>A ctor\r\nA move\r\nA move</strong>\r\n\r\n6、改成右值引用，可再减少一次移动，但不要傻乎乎的用A const&amp;&amp; a，不然又变拷贝了\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">void fun(A&amp;&amp; a)\r\n{\r\n    std::cout &lt;&lt; \"-------\" &lt;&lt; std::endl;\r\n    vec.push_back(std::move(a));\r\n}\r\n\r\nint main() {\r\n    A a;\r\n    fun(std::move(a));\r\n    std::cout &lt;&lt; \"Hello, World!\" &lt;&lt; std::endl;\r\n    return 0;\r\n}\r\n\r\nA ctor\r\nA move</pre>\r\n<p align=\"left\">7、改成模板，又变的有风险了，正常来说，右值引用不能引用左值，但在模板中，因为引用坍缩规则，右值引用可能退化成左值引用，风险同3.</p>\r\n\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">template &lt;class T&gt;\r\nvoid fun(T&amp;&amp; a)\r\n{\r\n    vec.push_back(std::move(a));\r\n}\r\n\r\nint main() {\r\n    A a;\r\n    fun(a);\r\n    std::cout &lt;&lt; \"Hello, World!\" &lt;&lt; std::endl;\r\n    return 0;\r\n}</pre>\r\n8、最终版，完美转发\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">template &lt;class T&gt;\r\nvoid fun(T&amp;&amp; a)\r\n{\r\n    vec.push_back(std::forward&lt;T&gt;(a));\r\n}\r\n\r\nint main() {\r\n    A a;\r\n    fun(std::move(a));\r\n    std::cout &lt;&lt; \"Hello, World!\" &lt;&lt; std::endl;\r\n    return 0;\r\n}\r\n\r\nA ctor\r\nA move</pre>\r\n&nbsp;\r\n\r\n&nbsp;','完美转发','','inherit','closed','closed','','74-revision-v1','','','2018-10-10 06:51:32','2018-10-10 06:51:32','',74,'http://45.77.202.181/?p=142',0,'revision','',0),(143,1,'2018-10-10 06:57:41','2018-10-10 06:57:41','感觉c++11的实现最简洁容易理解，不知道c++14的实现好在哪里\n\nC++14的实现\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">using namespace std;\n\ntemplate &lt;typename UnnamedType&gt; struct container\n{\nprivate:\n    template &lt;typename Param&gt; constexpr auto testValidity(int /* unused */)\n        -&gt; decltype(std::declval&lt;UnnamedType&gt;()(std::declval&lt;Param&gt;()), std::true_type())\n    {\n        return std::true_type();\n    }\n    \n    template &lt;typename Param&gt; constexpr std::false_type testValidity(...)\n    {\n        return std::false_type();\n    }\n\npublic:\n\n    template &lt;typename Param&gt; constexpr auto operator()(const Param&amp; p)\n    {\n        return testValidity&lt;Param&gt;(int());\n    }\n};\n\ntemplate &lt;typename UnnamedType&gt; constexpr auto is_valid(const UnnamedType&amp; t)\n{\n    return container&lt;UnnamedType&gt;();\n}\n\nauto hasSerialize = is_valid([](auto&amp;&amp; x) -&gt; decltype(x.serialize()) { });\n\ntemplate &lt;class T&gt; auto serialize(T&amp; obj)\n    -&gt; typename std::enable_if&lt;decltype(hasSerialize(obj))::value, std::string&gt;::type\n{\n    return obj.serialize();\n}\n\ntemplate &lt;class T&gt; auto serialize(T&amp; obj)\n    -&gt; typename std::enable_if&lt;!decltype(hasSerialize(obj))::value, std::string&gt;::type\n{\n    return to_string(obj);\n}</pre>\n&nbsp;\n\nc++11的实现\n\n&nbsp;\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">    #if 1\n//模板要求两个形参，有两个版本，一个版本带默认形参，一个是特化版本\n//现在只传了一个模板参数，匹配的情况是，若特化版本和默认形参一致，则调用特化版本，若特化版本与默认形参不一致，则调用默认形参版本\n\ntemplate &lt;typename T, typename = std::string&gt;\nstruct hasSerialize : std::false_type\n{\n};\n\ntemplate &lt;typename T&gt;\nstruct hasSerialize&lt;T, decltype(std::declval&lt;T&gt;().serialize())&gt; : std::true_type\n{\n};\n\n#else\n\n    template &lt;class T&gt; struct hasSerialize\n{\n    template &lt;typename C&gt;     static constexpr decltype(std::declval&lt;C&gt;().serialize(), bool()) test(int /* unused */)\n    {\n    return true;\n    }\n    \n    template &lt;typename C&gt; static constexpr bool test(...)\n    {\n    return false;\n    }\n    \n    static constexpr bool value = test&lt;T&gt;(int());\n};\n\n#endif\n\ntemplate &lt;class T&gt;\nauto serialize(const T&amp; obj)\n    -&gt;typename std::enable_if&lt;hasSerialize&lt;T&gt;::value, std::string&gt;::type\n{\n    return obj.serialize();\n}\n\ntemplate &lt;class T&gt;\nauto serialize(const T&amp; obj)\n    -&gt;typename std::enable_if&lt;not hasSerialize&lt;T&gt;::value, std::string&gt;::type\n{\n    return to_string(obj);\n}</pre>\nc++98的实现\n\n&nbsp;','SFINAE技术','','inherit','closed','closed','','70-autosave-v1','','','2018-10-10 06:57:41','2018-10-10 06:57:41','',70,'http://45.77.202.181/?p=143',0,'revision','',0),(144,1,'2018-10-10 06:59:00','2018-10-10 06:59:00','感觉c++11的实现最简洁容易理解，不知道c++14的实现好在哪里\r\n\r\nC++14的实现\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">using namespace std;\r\n\r\ntemplate &lt;typename UnnamedType&gt; struct container\r\n{\r\nprivate:\r\n    template &lt;typename Param&gt; constexpr auto testValidity(int /* unused */)\r\n        -&gt; decltype(std::declval&lt;UnnamedType&gt;()(std::declval&lt;Param&gt;()), std::true_type())\r\n    {\r\n        return std::true_type();\r\n    }\r\n    \r\n    template &lt;typename Param&gt; constexpr std::false_type testValidity(...)\r\n    {\r\n        return std::false_type();\r\n    }\r\n\r\npublic:\r\n\r\n    template &lt;typename Param&gt; constexpr auto operator()(const Param&amp; p)\r\n    {\r\n        return testValidity&lt;Param&gt;(int());\r\n    }\r\n};\r\n\r\ntemplate &lt;typename UnnamedType&gt; constexpr auto is_valid(const UnnamedType&amp; t)\r\n{\r\n    return container&lt;UnnamedType&gt;();\r\n}\r\n\r\nauto hasSerialize = is_valid([](auto&amp;&amp; x) -&gt; decltype(x.serialize()) { });\r\n\r\ntemplate &lt;class T&gt; auto serialize(T&amp; obj)\r\n    -&gt; typename std::enable_if&lt;decltype(hasSerialize(obj))::value, std::string&gt;::type\r\n{\r\n    return obj.serialize();\r\n}\r\n\r\ntemplate &lt;class T&gt; auto serialize(T&amp; obj)\r\n    -&gt; typename std::enable_if&lt;!decltype(hasSerialize(obj))::value, std::string&gt;::type\r\n{\r\n    return to_string(obj);\r\n}</pre>\r\n&nbsp;\r\n\r\nc++11的实现\r\n\r\n&nbsp;\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">    #if 1\r\n//模板要求两个形参，有两个版本，一个版本带默认形参，一个是特化版本\r\n//现在只传了一个模板参数，匹配的情况是，若特化版本和默认形参一致，则调用特化版本，若特化版本与默认形参不一致，则调用默认形参版本\r\n\r\ntemplate &lt;typename T, typename = std::string&gt;\r\nstruct hasSerialize : std::false_type\r\n{\r\n};\r\n\r\ntemplate &lt;typename T&gt;\r\nstruct hasSerialize&lt;T, decltype(std::declval&lt;T&gt;().serialize())&gt; : std::true_type\r\n{\r\n};\r\n\r\n#else\r\n\r\n    template &lt;class T&gt; struct hasSerialize\r\n{\r\n    template &lt;typename C&gt;     static constexpr decltype(std::declval&lt;C&gt;().serialize(), bool()) test(int /* unused */)\r\n    {\r\n    return true;\r\n    }\r\n    \r\n    template &lt;typename C&gt; static constexpr bool test(...)\r\n    {\r\n    return false;\r\n    }\r\n    \r\n    static constexpr bool value = test&lt;T&gt;(int());\r\n};\r\n\r\n#endif\r\n\r\ntemplate &lt;class T&gt;\r\nauto serialize(const T&amp; obj)\r\n    -&gt;typename std::enable_if&lt;hasSerialize&lt;T&gt;::value, std::string&gt;::type\r\n{\r\n    return obj.serialize();\r\n}\r\n\r\ntemplate &lt;class T&gt;\r\nauto serialize(const T&amp; obj)\r\n    -&gt;typename std::enable_if&lt;not hasSerialize&lt;T&gt;::value, std::string&gt;::type\r\n{\r\n    return to_string(obj);\r\n}</pre>\r\nc++98的实现\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">template &lt;class T&gt; struct hasSerialize\r\n{\r\n    typedef char yes[1];\r\n    typedef yes no[2];\r\n    \r\n    template &lt;typename U, U u&gt; struct reallyHas;\r\n    \r\n    template &lt;typename C&gt; static yes&amp; test(reallyHas&lt;std::string (C::*)(), &amp;C::serialize&gt;* /*unused*/) { }\r\n    template &lt;typename C&gt; static yes&amp; test(reallyHas&lt;std::string (C::*)() const, &amp;C::serialize&gt;* /*unused*/) { }\r\n\r\n    template &lt;typename&gt; static no&amp; test(...) { /* dark matter */ }\r\n\r\n    static const bool value = sizeof(test&lt;T&gt;(0)) == sizeof(yes);\r\n};\r\n\r\nclass A\r\n{\r\npublic:\r\n    int serialize() const\r\n    {\r\n        return 5;//\"yes\";\r\n    }\r\n};\r\n\r\nint main()\r\n{\r\n    //int a = 5;\r\n    A a;\r\n    cout&lt;&lt;serialize(a)&lt;&lt;endl;\r\n}</pre>\r\n&nbsp;\r\n\r\n&nbsp;','SFINAE技术','','inherit','closed','closed','','70-revision-v1','','','2018-10-10 06:59:00','2018-10-10 06:59:00','',70,'http://45.77.202.181/?p=144',0,'revision','',0),(145,1,'2018-10-10 06:59:43','2018-10-10 06:59:43','感觉c++11的实现最简洁容易理解，不知道c++14的实现好在哪里\r\n\r\nC++14的实现\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">using namespace std;\r\n\r\ntemplate &lt;typename UnnamedType&gt; struct container\r\n{\r\nprivate:\r\n    template &lt;typename Param&gt; constexpr auto testValidity(int /* unused */)\r\n        -&gt; decltype(std::declval&lt;UnnamedType&gt;()(std::declval&lt;Param&gt;()), std::true_type())\r\n    {\r\n        return std::true_type();\r\n    }\r\n    \r\n    template &lt;typename Param&gt; constexpr std::false_type testValidity(...)\r\n    {\r\n        return std::false_type();\r\n    }\r\n\r\npublic:\r\n\r\n    template &lt;typename Param&gt; constexpr auto operator()(const Param&amp; p)\r\n    {\r\n        return testValidity&lt;Param&gt;(int());\r\n    }\r\n};\r\n\r\ntemplate &lt;typename UnnamedType&gt; constexpr auto is_valid(const UnnamedType&amp; t)\r\n{\r\n    return container&lt;UnnamedType&gt;();\r\n}\r\n\r\nauto hasSerialize = is_valid([](auto&amp;&amp; x) -&gt; decltype(x.serialize()) { });\r\n\r\ntemplate &lt;class T&gt; auto serialize(T&amp; obj)\r\n    -&gt; typename std::enable_if&lt;decltype(hasSerialize(obj))::value, std::string&gt;::type\r\n{\r\n    return obj.serialize();\r\n}\r\n\r\ntemplate &lt;class T&gt; auto serialize(T&amp; obj)\r\n    -&gt; typename std::enable_if&lt;!decltype(hasSerialize(obj))::value, std::string&gt;::type\r\n{\r\n    return to_string(obj);\r\n}</pre>\r\n&nbsp;\r\n\r\nc++11的实现\r\n\r\n&nbsp;\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">    #if 1\r\n//模板要求两个形参，有两个版本，一个版本带默认形参，一个是特化版本\r\n//现在只传了一个模板参数，匹配的情况是，若特化版本和默认形参一致，则调用特化版本，若特化版本与默认形参不一致，则调用默认形参版本\r\n\r\ntemplate &lt;typename T, typename = std::string&gt;\r\nstruct hasSerialize : std::false_type\r\n{\r\n};\r\n\r\ntemplate &lt;typename T&gt;\r\nstruct hasSerialize&lt;T, decltype(std::declval&lt;T&gt;().serialize())&gt; : std::true_type\r\n{\r\n};\r\n\r\n#else\r\n\r\ntemplate &lt;class T&gt; struct hasSerialize\r\n{\r\n    template &lt;typename C&gt;     \r\n    static constexpr decltype(std::declval&lt;C&gt;().serialize(), bool()) test(int /* unused */)\r\n    {\r\n    return true;\r\n    }\r\n    \r\n    template &lt;typename C&gt; \r\n    static constexpr bool test(...)\r\n    {\r\n    return false;\r\n    }\r\n    \r\n    static constexpr bool value = test&lt;T&gt;(int());\r\n};\r\n\r\n#endif\r\n\r\ntemplate &lt;class T&gt;\r\nauto serialize(const T&amp; obj)\r\n    -&gt;typename std::enable_if&lt;hasSerialize&lt;T&gt;::value, std::string&gt;::type\r\n{\r\n    return obj.serialize();\r\n}\r\n\r\ntemplate &lt;class T&gt;\r\nauto serialize(const T&amp; obj)\r\n    -&gt;typename std::enable_if&lt;not hasSerialize&lt;T&gt;::value, std::string&gt;::type\r\n{\r\n    return to_string(obj);\r\n}</pre>\r\nc++98的实现\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">template &lt;class T&gt; struct hasSerialize\r\n{\r\n    typedef char yes[1];\r\n    typedef yes no[2];\r\n    \r\n    template &lt;typename U, U u&gt; struct reallyHas;\r\n    \r\n    template &lt;typename C&gt; static yes&amp; test(reallyHas&lt;std::string (C::*)(), &amp;C::serialize&gt;* /*unused*/) { }\r\n    template &lt;typename C&gt; static yes&amp; test(reallyHas&lt;std::string (C::*)() const, &amp;C::serialize&gt;* /*unused*/) { }\r\n\r\n    template &lt;typename&gt; static no&amp; test(...) { /* dark matter */ }\r\n\r\n    static const bool value = sizeof(test&lt;T&gt;(0)) == sizeof(yes);\r\n};\r\n\r\nclass A\r\n{\r\npublic:\r\n    int serialize() const\r\n    {\r\n        return 5;//\"yes\";\r\n    }\r\n};\r\n\r\nint main()\r\n{\r\n    //int a = 5;\r\n    A a;\r\n    cout&lt;&lt;serialize(a)&lt;&lt;endl;\r\n}</pre>\r\n&nbsp;\r\n\r\n&nbsp;','SFINAE技术','','inherit','closed','closed','','70-revision-v1','','','2018-10-10 06:59:43','2018-10-10 06:59:43','',70,'http://45.77.202.181/?p=145',0,'revision','',0),(146,1,'2018-10-10 07:03:09','2018-10-10 07:03:09','我的方法，非常傻\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">template&lt;class T1&gt;\r\nvoid tuple_print(std::ostream&amp; os, const std::tuple&lt;T1&gt;&amp; t)\r\n{\r\n    os &lt;&lt; std::get&lt;(0)&gt;(t);\r\n}\r\n\r\ntemplate&lt;class T1, class T2&gt;\r\nvoid tuple_print(std::ostream&amp; os, const std::tuple&lt;T1, T2&gt;&amp; t)\r\n{\r\n    os &lt;&lt; std::get&lt;(0)&gt;(t)&lt;&lt;\",\"&lt;&lt;std::get&lt;(1)&gt;(t);\r\n}\r\n\r\ntemplate&lt;class T1, class T2, class T3&gt;\r\nvoid tuple_print(std::ostream&amp; os, const std::tuple&lt;T1, T2, T3&gt;&amp; t)\r\n{\r\n    os &lt;&lt; std::get&lt;(0)&gt;(t)&lt;&lt;\",\"&lt;&lt;std::get&lt;(1)&gt;(t)&lt;&lt;\",\"&lt;&lt;std::get&lt;(2)&gt;(t);\r\n}\r\n\r\n// operator&lt;&lt;\r\ntemplate&lt;typename... Args&gt;\r\nstd::ostream&amp; operator&lt;&lt;(std::ostream&amp; os, const std::tuple&lt;Args...&gt;&amp; t)\r\n{\r\n    os&lt;&lt;\"(\";\r\n    tuple_print(os, t);\r\n    return os &lt;&lt; \")\";\r\n}</pre>\r\n&nbsp;\r\n\r\n然后又看的别人的\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">#if 0\r\ntemplate&lt;size_t N, typename Tuple&gt;\r\nvoid tuple_print(std::ostream&amp; os, const Tuple&amp; t)\r\n{\r\n    if (N != 1)\r\n    tuple_print&lt; (N &gt; 1? N-1: 0)&gt;(os, t);\r\n    os &lt;&lt; std::get&lt;(N &gt; 1? N-1: 0)&gt;(t)&lt;&lt;\",\";\r\n}\r\n\r\n// operator&lt;&lt;\r\ntemplate&lt;typename... Args&gt;\r\nstd::ostream&amp; operator&lt;&lt;(std::ostream&amp; os, const std::tuple&lt;Args...&gt;&amp; t)\r\n{\r\n    os&lt;&lt;\"(\";\r\n    tuple_print&lt;sizeof...(Args)&gt;(os, t);\r\n    return os &lt;&lt; \")\";\r\n}\r\n\r\n#else\r\n\r\ntemplate&lt;typename Tuple, size_t N&gt;\r\nstruct tuple_print\r\n{\r\n    static void print(const Tuple&amp; t, std::ostream&amp; os)\r\n    {\r\n        tuple_print&lt;Tuple, N-1&gt;::print(t, os);\r\n        os &lt;&lt; \", \" &lt;&lt; std::get&lt;N-1&gt;(t);\r\n    }\r\n};\r\n// 类模板的特化版本\r\ntemplate&lt;typename Tuple&gt;\r\nstruct tuple_print&lt;Tuple, 1&gt;\r\n{\r\n    static void print(const Tuple&amp; t, std::ostream&amp; os)\r\n    {\r\n        os &lt;&lt; \"(\" &lt;&lt; std::get&lt;0&gt;(t);\r\n    }\r\n};\r\n\r\n// operator&lt;&lt;\r\ntemplate&lt;typename... Args&gt;\r\nstd::ostream&amp; operator&lt;&lt;(std::ostream&amp; os, const std::tuple&lt;Args...&gt;&amp; t)\r\n{\r\n    tuple_print&lt;std::tuple&lt;Args...&gt;, sizeof...(Args)&gt;::print(t, os);\r\n    return os &lt;&lt; \")\";\r\n}\r\n\r\n#endif</pre>\r\n&nbsp;','遍历std::tuple','','inherit','closed','closed','','68-revision-v1','','','2018-10-10 07:03:09','2018-10-10 07:03:09','',68,'http://45.77.202.181/?p=146',0,'revision','',0),(147,1,'2018-10-10 07:04:17','2018-10-10 07:04:17','打印输出\r\n\r\nc语言\r\n\r\n% - 0 m.n l或h 格式字符\r\n下面对组成格式说明的各项加以说明：\r\n①%:表示格式说明的起始符号，不可缺少。\r\n②-:有-表示左对齐输出，如省略表示右对齐输出。\r\n③0:有0表示指定空位填0,如省略表示指定空位不填。\r\n④m.n:m指域宽，即对应的输出项在输出设备上所占的字符数。N指精度。用于说明输出的实型数的小数位数。对数值型的来说，未指定n时，隐含的精度为n=6位。\r\n⑤l或h:l对整型指long型，对实型指double型。h用于将整型的格式字符修正为short型。\r\n---------------------------------------\r\n\r\nprintf(\"0x%08x\\n\", 1);\r\n\r\nc++可以用操作符\r\n\r\nstd::cout&lt;&lt;\"0x\"&lt;&lt;std::hex&lt;&lt;std::setw(8)&lt;&lt;std::setfill(\'0\')&lt;&lt;1&lt;&lt;std::endl;\r\n\r\n都输出：0x00000001\r\n\r\n//重载operator&lt;&lt; ,使得可以输出enum class\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"cpp\">#include &lt;iostream&gt;\r\n template&lt;typename T&gt;\r\n std::ostream&amp; operator&lt;&lt;(typename std::enable_if&lt;std::is_enum&lt;T&gt;\r\n ::value, std::ostream&gt;::type&amp; stream, const T&amp; e)\r\n {\r\n return stream &lt;&lt; static_cast&lt;typename std::underlying_type&lt;T&gt;::type&gt;(e);\r\n }</pre>\r\n&nbsp;\r\n\r\n<time class=\"date-past handy-date-time\" datetime=\"2018-07-27\"><span class=\"handy-date-value\">2018-7-27</span></time> 通过类型名获取protobuf message类型\r\n\r\nfor detail：<a class=\"external-link\" href=\"https://blog.csdn.net/solstice/article/details/6300108\" rel=\"nofollow\">https://blog.csdn.net/solstice/article/details/6300108</a>\r\n\r\nusing namespace ::google::protobuf;\r\n<pre class=\"prettyprint\">Message* createMessage(const std::string&amp; typeName)\r\n{\r\n  Message* message = NULL;\r\n  const Descriptor* descriptor = DescriptorPool::generated_pool()-&gt;FindMessageTypeByName(typeName);\r\n  if (descriptor)\r\n  {\r\n    const Message* prototype = MessageFactory::generated_factory()-&gt;GetPrototype(descriptor);\r\n    if (prototype)\r\n    {\r\n      message = prototype-&gt;New();\r\n    }\r\n  }\r\n  return message;\r\n}</pre>','代码赏析','','inherit','closed','closed','','60-revision-v1','','','2018-10-10 07:04:17','2018-10-10 07:04:17','',60,'http://45.77.202.181/?p=147',0,'revision','',0),(148,1,'2018-10-10 07:27:11','2018-10-10 07:27:11','mysql&gt; CREATE DATABASE database_name;\r\nQuery OK, 1 row affected (0.00 sec)\r\n\r\nmysql&gt; GRANT ALL PRIVILEGES ON database_name.* TO \"username\"@\"localhost\"\r\n-&gt; IDENTIFIED BY \"password\";\r\nQuery OK, 0 rows affected (0.00 sec)\r\n\r\nmysql&gt; FLUSH PRIVILEGES;\r\nQuery OK, 0 rows affected (0.00 sec)','mysql创建表和用户','','publish','open','open','','mysql%e5%88%9b%e5%bb%ba%e8%a1%a8%e5%92%8c%e7%94%a8%e6%88%b7','','','2018-10-10 07:27:11','2018-10-10 07:27:11','',0,'http://45.77.202.181/?p=148',0,'post','',0),(149,1,'2018-10-10 07:27:11','2018-10-10 07:27:11','mysql&gt; CREATE DATABASE database_name;\r\nQuery OK, 1 row affected (0.00 sec)\r\n\r\nmysql&gt; GRANT ALL PRIVILEGES ON database_name.* TO \"username\"@\"localhost\"\r\n-&gt; IDENTIFIED BY \"password\";\r\nQuery OK, 0 rows affected (0.00 sec)\r\n\r\nmysql&gt; FLUSH PRIVILEGES;\r\nQuery OK, 0 rows affected (0.00 sec)','mysql创建表和用户','','inherit','closed','closed','','148-revision-v1','','','2018-10-10 07:27:11','2018-10-10 07:27:11','',148,'http://45.77.202.181/?p=149',0,'revision','',0),(150,1,'2018-10-10 07:29:07','2018-10-10 07:29:07','知道密码的情况\r\n\r\n进入mysql的服务器中使用mysql指令进行登录及操作。\r\n\r\n1.登录mysql：mysql -uroot -proot\r\n\r\n(root是我的帐号及密码）\r\n\r\n2.尝试是否报1820错误，执行语句：mysql&gt; select 1;\r\n\r\n(将会得到一个错误：ERROR 1820 (HY000): You must SET PASSWORD before executing this statement )\r\n\r\n3.设置新密码：mysql&gt; set password=password(\'123456\');\r\n\r\n(由于我不需要更改密码，所以再次重置一下密码为root)\r\n\r\n4.再次尝试是否报1820错误，执行语句：mysql&gt; select 1;\r\n\r\n(将得到如下返回数据，说明问题已经解决了！)\r\n\r\nmysql&gt; select 1;\r\n+—+\r\n| 1 |\r\n+—+\r\n| 1 |\r\n+—+\r\n1 row in set (0.00 sec)\r\n总结\r\n\r\n&nbsp;\r\n\r\n不知道密码的情况：\r\n\r\n重置密码解决MySQL for Linux错误 ERROR 1045 (28000): Access denied for user \'root\'@\'localhost\' (using password: YES)\r\n一般这个错误是由密码错误引起，解决的办法自然就是重置密码。\r\n\r\n假设我们使用的是root账户。\r\n\r\n1.重置密码的第一步就是跳过MySQL的密码认证过程，方法如下：\r\n\r\n#vim /etc/my.cnf(注：windows下修改的是my.ini)\r\n\r\n在文档内搜索mysqld定位到[mysqld]文本段：\r\n/mysqld(在vim编辑状态下直接输入该命令可搜索文本内容)\r\n\r\n在[mysqld]后面任意一行添加“skip-grant-tables”用来跳过密码验证的过程，如下图所示：\r\n\r\n保存文档并退出：\r\n\r\n#:wq\r\n2.接下来我们需要重启MySQL：\r\n\r\n/etc/init.d/mysql restart(有些用户可能需要使用/etc/init.d/mysqld restart)\r\n\r\n3.重启之后输入#mysql即可进入mysql。\r\n\r\n4.接下来就是用sql来修改root的密码\r\n\r\nmysql&gt; use mysql;\r\nmysql&gt; update user set password=password(\"你的新密码\") where user=\"root\";\r\nmysql&gt; flush privileges;\r\nmysql&gt; quit\r\n\r\n到这里root账户就已经重置成新的密码了。\r\n\r\n5.编辑my.cnf,去掉刚才添加的内容，然后重启MySQL。大功告成！','mysql重置密码','','publish','open','open','','mysql%e9%87%8d%e7%bd%ae%e5%af%86%e7%a0%81','','','2018-10-10 08:19:02','2018-10-10 08:19:02','',0,'http://45.77.202.181/?p=150',0,'post','',0),(151,1,'2018-10-10 07:29:07','2018-10-10 07:29:07','知道密码的情况\r\n\r\n进入mysql的服务器中使用mysql指令进行登录及操作。\r\n\r\n1.登录mysql：mysql -uroot -proot\r\n\r\n(root是我的帐号及密码）\r\n\r\n2.尝试是否报1820错误，执行语句：mysql&gt; select 1;\r\n\r\n(将会得到一个错误：ERROR 1820 (HY000): You must SET PASSWORD before executing this statement )\r\n\r\n3.设置新密码：mysql&gt; set password=password(\'123456\');\r\n\r\n(由于我不需要更改密码，所以再次重置一下密码为root)\r\n\r\n4.再次尝试是否报1820错误，执行语句：mysql&gt; select 1;\r\n\r\n(将得到如下返回数据，说明问题已经解决了！)\r\n\r\nmysql&gt; select 1;\r\n+—+\r\n| 1 |\r\n+—+\r\n| 1 |\r\n+—+\r\n1 row in set (0.00 sec)\r\n总结\r\n\r\n&nbsp;\r\n\r\n不知道密码的情况：\r\n\r\n重置密码解决MySQL for Linux错误 ERROR 1045 (28000): Access denied for user \'root\'@\'localhost\' (using password: YES)\r\n一般这个错误是由密码错误引起，解决的办法自然就是重置密码。\r\n\r\n假设我们使用的是root账户。\r\n\r\n1.重置密码的第一步就是跳过MySQL的密码认证过程，方法如下：\r\n\r\n#vim /etc/my.cnf(注：windows下修改的是my.ini)\r\n\r\n在文档内搜索mysqld定位到[mysqld]文本段：\r\n/mysqld(在vim编辑状态下直接输入该命令可搜索文本内容)\r\n\r\n在[mysqld]后面任意一行添加“skip-grant-tables”用来跳过密码验证的过程，如下图所示：\r\n\r\n保存文档并退出：\r\n\r\n#:wq\r\n2.接下来我们需要重启MySQL：\r\n\r\n/etc/init.d/mysql restart(有些用户可能需要使用/etc/init.d/mysqld restart)\r\n\r\n3.重启之后输入#mysql即可进入mysql。\r\n\r\n4.接下来就是用sql来修改root的密码\r\n\r\nmysql&gt; use mysql;\r\nmysql&gt; update user set password=password(\"你的新密码\") where user=\"root\";\r\nmysql&gt; flush privileges;\r\nmysql&gt; quit\r\n\r\n到这里root账户就已经重置成新的密码了。\r\n\r\n5.编辑my.cnf,去掉刚才添加的内容，然后重启MySQL。大功告成！','mysql重置密码','','inherit','closed','closed','','150-revision-v1','','','2018-10-10 07:29:07','2018-10-10 07:29:07','',150,'http://45.77.202.181/?p=151',0,'revision','',0),(152,1,'2018-10-10 07:32:55','2018-10-10 07:32:55','I feel sorry to say that I decided to quit my current job. Maybe it is really a surprise for you. After serious and careful consideration, however, I have to make this adjustment regarding my personal career development plan. I’m sorry about the inconvenience it may bring to you and our team.\r\n\r\nThe decision is really hard for me because I have so enjoyed my working relationship here. Our team has offered me great latitude and opportunity within our business area. And as a result, I’ve not only gained the technical skills,interpersonal skills, but also learnt a lot on predominant company culture. I would like to express my deep thanks for the rewarding experience I’ve enjoyed during those days.\r\n\r\nHowever, all good things must come to an end. I have to say goodbye to you and our excellent team. I will be dedicated to hand over all my work to the appointed personnel before my departure. Thanks again for your kindly support and instruction during my work.','离职信','','publish','open','open','','%e7%a6%bb%e8%81%8c%e4%bf%a1','','','2018-10-10 07:32:55','2018-10-10 07:32:55','',0,'http://45.77.202.181/?p=152',0,'post','',0),(153,1,'2018-10-10 07:32:55','2018-10-10 07:32:55','I feel sorry to say that I decided to quit my current job. Maybe it is really a surprise for you. After serious and careful consideration, however, I have to make this adjustment regarding my personal career development plan. I’m sorry about the inconvenience it may bring to you and our team.\r\n\r\nThe decision is really hard for me because I have so enjoyed my working relationship here. Our team has offered me great latitude and opportunity within our business area. And as a result, I’ve not only gained the technical skills,interpersonal skills, but also learnt a lot on predominant company culture. I would like to express my deep thanks for the rewarding experience I’ve enjoyed during those days.\r\n\r\nHowever, all good things must come to an end. I have to say goodbye to you and our excellent team. I will be dedicated to hand over all my work to the appointed personnel before my departure. Thanks again for your kindly support and instruction during my work.','离职信','','inherit','closed','closed','','152-revision-v1','','','2018-10-10 07:32:55','2018-10-10 07:32:55','',152,'http://45.77.202.181/?p=153',0,'revision','',0),(154,1,'2018-10-10 07:39:10','0000-00-00 00:00:00','<h1>绕开单独密码方法</h1>\n<h2>1、账户登陆</h2>\n<a href=\"https://portal.dahuatech.com/Home/Index\">https://portal.dahuatech.com/Home/Index</a>\n<h2>2、进入人力资源主页</h2>\n<h2>3、按F12切出调试页面，如下</h2>\n<h2>4、在页面加载时设置断点</h2>\n<h2>5、直接输入地址</h2>\n看简历：\n\n<a href=\"http://ehr.dahuatech.com:8088/psp/HR92PRD1/EMPLOYEE/HRMS/c/DH_ROOT_MENU.CST_PER_CV.GBL?Page=CST_PERS_CV\">http://ehr.dahuatech.com:8088/psp/HR92PRD1/EMPLOYEE/HRMS/c/DH_ROOT_MENU.CST_PER_CV.GBL?Page=CST_PERS_CV</a>\n\n看工资单：\n\n<a href=\"http://ehr.dahuatech.com:8088/psp/HR92PRD1/EMPLOYEE/HRMS/c/CST_ROOT_MENU.CST_GP_SS_PAY.GBL?Page=CST_SS_PAYSLIP\">http://ehr.dahuatech.com:8088/psp/HR92PRD1/EMPLOYEE/HRMS/c/CST_ROOT_MENU.CST_GP_SS_PAY.GBL?Page=CST_SS_PAYSLIP</a>\n\n&nbsp;\n\n回车后，页面会挂住，并进入调试模式\n\n&nbsp;\n\n并出现下面的图标\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n<h2>6，点击调试下一步图标，大概需10次左右</h2>\n&nbsp;\n<h2>7，直到出现，下面的页面</h2>\n确认左下角出现\n\n&nbsp;\n\n&nbsp;\n<h2>8，切换是Console选项框，并输入</h2>\nDoUrl = function DoUrl(sOrigURL, form) {console.log(\"haha\") }\n\n如图：\n<h2>9，切回Source选项框，去掉Load事件订阅</h2>\n<h2>10、点击调试图标，如下，即可无密码进入工资查看页面</h2>','','','draft','closed','closed','','','','','2018-10-10 07:39:10','2018-10-10 07:39:10','',0,'http://45.77.202.181/?page_id=154',0,'page','',0),(155,1,'2018-10-10 07:42:39','2018-10-10 07:42:39','<h2>正则表达式到底是什么东西？</h2>\r\n正则表达式（英语：Regular Expression，在代码中常简写为regex），计算机科学的一个概念。\r\n\r\n在编写处理字符串的程序或网页时，经常会有查找符合某些复杂规则的字符串的\r\n\r\n需要。正则表达式就是用于描述这些规则的工具。\r\n\r\n很可能你使用过Windows/Dos 下用于文件查找的通配符(wildcard)，也就是*和?。\r\n\r\n如果你想查找某个目录下的所有的Word 文档的话，你会搜索*.doc。在这里，*会被\r\n\r\n解释成任意的字符串。和通配符类似，正则表达式也是用来进行文本匹配的工具，只\r\n\r\n不过比起通配符，它能更精确地描述你的需要。\r\n<h2>入门</h2>\r\n假设你在一篇英文小说里查找hi，你可以使用正则表达式hi。这几乎是最简单的正则表达式了，它可以精确匹配这样的字符串：由两个字符组成，前一个字符是h,后一个是i。\r\n\r\n不幸的是，很多单词里包含hi 这两个连续的字符，比如him,history,high 等等。\r\n\r\n用hi 来查找的话，这里边的hi 也会被找出来。如果要精确地查找hi 这个单词的话，\r\n\r\n我们应该使用\\bhi\\b。或者 \\&lt;hi\\&gt;。\r\n\r\n\\b是正则表达式规定的一个特殊代码（好吧，某些人叫它元字符，metacharacter），\r\n\r\n代表着单词的开头或结尾，也就是单词的分界处。虽然通常英文的单词是由空格，标\r\n\r\n点符号或者换行来分隔的，但是\\b 并不匹配这些单词分隔字符中的任何一个，它只匹\r\n\r\n配一个位置。\r\n<h2>元字符</h2>\r\n可以认为是正则表达式里的特殊符号。\r\n\r\n假如你要找的是hi 后面不远处跟着一个Lucy，你应该用\\bhi\\b.*\\bLucy\\b。\r\n\r\n这里，.是另一个元字符，匹配除了换行符以外的任意字符。*同样是元字符，不\r\n\r\n过它代表的不是字符，也不是位置，而是数量——它指定*前边的内容可以连续重复\r\n\r\n使用任意次以使整个表达式得到匹配。因此，.*连在一起就意味着任意数量的不包含\r\n\r\n换行的字符。现在\\bhi\\b.*\\bLucy\\b 的意思就很明显了： 先是一个单词hi,然后是任意\r\n\r\n个任意字符(但不能是换行)，最后是Lucy 这个单词。\r\n\r\n常用的元字符代码说明\r\n\r\n. 匹配除换行符以外的任意字符\r\n\r\n\\w 匹配字母或数字或下划线或汉字\r\n\r\n\\s 匹配任意的空白符\r\n\r\n\\d 匹配数字\r\n\r\n\\b 匹配单词的开始或结束\r\n\r\n^ 匹配字符串的开始\r\n\r\n$ 匹配字符串的结束\r\n\r\n&nbsp;\r\n\r\n这里要提一下\r\n\r\n和忽略大小写的选项类似，有些正则表达式处理工具还有一个处理多行的选项。\r\n\r\n如果选中了这个选项，^和$的意义就变成了匹配行的开始处和结束处。\r\n<h2>字符转义</h2>\r\n如果你想查找元字符本身的话，比如你查找.,或者*,就出现了问题：你没办法指\r\n\r\n定它们，因为它们会被解释成别的意思。这时你就得使用\\来取消这些字符的特殊意\r\n\r\n义。因此，你应该使用\\.和\\*。当然，要查找\\本身，你也得用\\\\.\r\n<h2>重复</h2>\r\n你已经看过了前面的 * 这个匹配重复的方式了。下面是正则表达式\r\n\r\n中所有的限定符(指定数量的代码，例如*,{5,12}等)：\r\n\r\n&nbsp;\r\n\r\n常用的限定符代码/语法说明\r\n\r\n* 重复零次或更多次\r\n\r\n+ 重复一次或更多次\r\n\r\n? 重复零次或一次\r\n\r\n{n} 重复n 次\r\n\r\n{n,} 重复n 次或更多次\r\n\r\n{n,m} 重复n 到m 次\r\n\r\n&nbsp;\r\n\r\n下面是一些使用重复的例子：\r\n\r\nWindows\\d+匹配Windows 后面跟1个或更多数字\r\n\r\n^\\w+匹配一行的第一个单词(或整个字符串的第一个单词，具体匹配哪个意思得\r\n\r\n看选项设置)\r\n<h2>字符组</h2>\r\n要想查找数字，字母或数字，空白是很简单的，因为已经有了对应这些字符集合\r\n\r\n的元字符，但是如果你想匹配没有预定义元字符的字符集合(比如元音字母a,e,i,o,u),\r\n\r\n应该怎么办？\r\n\r\n很简单，你只需要在方括号里列出它们就行了，像[aeiou]就匹配任何一个英文元\r\n\r\n音字母，[.?!]匹配标点符号(.或?或!)。\r\n\r\n我们也可以轻松地指定一个字符范围，像[0-9]代表的含意与\\d 就是完全一致的：\r\n\r\n一位数字；同理[a-z0-9A-Z_]也完全等同于\\w（如果只考虑英文的话）。\r\n\r\n&nbsp;\r\n<h2>反义</h2>\r\n有时需要查找不属于某个能简单定义的字符类的字符。比如想查找除了数字以\r\n\r\n外，其它任意字符都行的情况，这时需要用到反义：\r\n\r\n&nbsp;\r\n\r\n常用的反义代码代码/语法说明\r\n\r\n\\W 匹配任意不是字母，数字，下划线，汉字的字符\r\n\r\n\\S 匹配任意不是空白符的字符\r\n\r\n\\D 匹配任意非数字的字符\r\n\r\n\\B 匹配不是单词开头或结束的位置\r\n\r\n[^x] 匹配除了x 以外的任意字符\r\n\r\n[^aeiou] 匹配除了aeiou 这几个字母以外的任意字符\r\n\r\n&nbsp;\r\n\r\n例子：\\S+匹配不包含空白符的字符串。\r\n\r\n&lt;a[^&gt;]+&gt;匹配用尖括号括起来的以a 开头的字符串。\r\n<h2>分枝条件</h2>\r\n如果满足其中任意一种规则都应该当成匹配，具体方法是用|把不\r\n\r\n同的规则分隔开。\r\n\r\nc(a|e)t              ca|et\r\n\r\n|       竖线         匹配任意分个两边的任意一个表达式\r\n\r\n(…)   括号         限制竖线的作用范围。。\r\n<h2>分组</h2>\r\n我们已经提到了怎么重复单个字符（直接在字符后面加上限定符就行了）；但如\r\n\r\n果想要重复多个字符又该怎么办？你可以用小括号来指定子表达式(也叫做分组)，然\r\n\r\n后你就可以指定这个子表达式的重复次数了，你也可以对子表达式进行其它一些操作\r\n\r\n(后面会有介绍)。\r\n<h2>后向引用，捕获</h2>\r\n使用小括号指定一个子表达式后，匹配这个子表达式的文本(也就是此分组捕获\r\n\r\n的内容)可以在表达式或其它程序中作进一步的处理。默认情况下，每个分组会自动\r\n\r\n拥有一个组号，规则是：从左向右，以分组的左括号为标志，第一个出现的分组的组\r\n\r\n号为1，第二个为2，以此类推。\r\n\r\n呃……其实,组号分配还不像我刚说得那么简单：\r\n<ul>\r\n 	<li>分组0对应整个正则表达式</li>\r\n 	<li>实际上组号分配过程是要从左向右扫描两遍的：第一遍只给未命名组分配，第二遍</li>\r\n</ul>\r\n只给命名组分配－－因此所有命名组的组号都大于未命名的组号\r\n<ul>\r\n 	<li>你可以使用(?:exp)这样的语法来剥夺一个分组对组号分配的参与权．</li>\r\n</ul>\r\n后向引用用于重复搜索前面某个分组匹配的文本。例如， \\1代表分组1匹配的文\r\n\r\n本。难以理解？请看示例：\r\n\r\n\\b(\\w+)\\b\\s+\\1\\b 可以用来匹配重复的单词，像go go, 或者kitty kitty。这个表达式\r\n\r\n首先是一个单词，也就是单词开始处和结束处之间的多于一个的字母或数字\r\n\r\n&nbsp;\r\n\r\n(?:…)         分组文本，但不捕获\r\n\r\n(?=….)               肯定顺序环视\r\n\r\n(?&lt;=….)             肯定逆序环视\r\n\r\n&nbsp;\r\n\r\n(?!....)               否定顺序环视\r\n\r\n(?&lt;!...)              否定逆序环视\r\n<h2>贪婪与懒惰</h2>\r\n当正则表达式中包含能接受重复的限定符时，通常的行为是（在使整个表达式能\r\n\r\n得到匹配的前提下）匹配尽可能多的字符。以这个表达式为例：a.*b，它将会匹配最\r\n\r\n长的以a 开始，以b 结束的字符串。如果用它来搜索aabab 的话，它会匹配整个字符\r\n\r\n串aabab。这被称为贪婪匹配。\r\n\r\n有时，我们更需要懒惰匹配，也就是匹配尽可能少的字符。前面给出的限定符都\r\n\r\n可以被转化为懒惰匹配模式，只要在它后面加上一个问号?。这样.*?就意味着匹配任\r\n\r\n意数量的重复，但是在能使整个匹配成功的前提下使用最少的重复\r\n\r\n&nbsp;\r\n\r\na.*?b 匹配最短的，以a 开始，以b 结束的字符串。如果把它应用于aabab 的话，\r\n\r\n它会匹配aab（第一到第三个字符）和ab（第四到第五个字符）。\r\n\r\n为什么第一个匹配是aab（第一到第三个字符）而不是ab（第二到第三个字符）？\r\n\r\n简单地说，因为正则表达式有另一条规则，比懒惰／贪婪规则的优先级更高：最先开\r\n\r\n始的匹配拥有最高的优先权——The match that begins earliest wins。\r\n\r\n&nbsp;\r\n\r\n懒惰限定符代码/语法说明\r\n\r\n*? 重复任意次，但尽可能少重复\r\n\r\n+? 重复1次或更多次，但尽可能少重复\r\n\r\n?? 重复0次或1次，但尽可能少重复\r\n\r\n{n,m}? 重复n 到m 次，但尽可能少重复\r\n\r\n{n,}? 重复n 次以上，但尽可能少重复','正则表达式入门','','publish','open','open','','%e6%ad%a3%e5%88%99%e8%a1%a8%e8%be%be%e5%bc%8f%e5%85%a5%e9%97%a8','','','2018-10-10 07:42:52','2018-10-10 07:42:52','',0,'http://45.77.202.181/?p=155',0,'post','',0),(156,1,'2018-10-10 07:42:39','2018-10-10 07:42:39','<h2>正则表达式到底是什么东西？</h2>\r\n正则表达式（英语：Regular Expression，在代码中常简写为regex），计算机科学的一个概念。\r\n\r\n在编写处理字符串的程序或网页时，经常会有查找符合某些复杂规则的字符串的\r\n\r\n需要。正则表达式就是用于描述这些规则的工具。\r\n\r\n很可能你使用过Windows/Dos 下用于文件查找的通配符(wildcard)，也就是*和?。\r\n\r\n如果你想查找某个目录下的所有的Word 文档的话，你会搜索*.doc。在这里，*会被\r\n\r\n解释成任意的字符串。和通配符类似，正则表达式也是用来进行文本匹配的工具，只\r\n\r\n不过比起通配符，它能更精确地描述你的需要。\r\n<h2>入门</h2>\r\n假设你在一篇英文小说里查找hi，你可以使用正则表达式hi。这几乎是最简单的正则表达式了，它可以精确匹配这样的字符串：由两个字符组成，前一个字符是h,后一个是i。\r\n\r\n不幸的是，很多单词里包含hi 这两个连续的字符，比如him,history,high 等等。\r\n\r\n用hi 来查找的话，这里边的hi 也会被找出来。如果要精确地查找hi 这个单词的话，\r\n\r\n我们应该使用\\bhi\\b。或者 \\&lt;hi\\&gt;。\r\n\r\n\\b是正则表达式规定的一个特殊代码（好吧，某些人叫它元字符，metacharacter），\r\n\r\n代表着单词的开头或结尾，也就是单词的分界处。虽然通常英文的单词是由空格，标\r\n\r\n点符号或者换行来分隔的，但是\\b 并不匹配这些单词分隔字符中的任何一个，它只匹\r\n\r\n配一个位置。\r\n<h2>元字符</h2>\r\n可以认为是正则表达式里的特殊符号。\r\n\r\n假如你要找的是hi 后面不远处跟着一个Lucy，你应该用\\bhi\\b.*\\bLucy\\b。\r\n\r\n这里，.是另一个元字符，匹配除了换行符以外的任意字符。*同样是元字符，不\r\n\r\n过它代表的不是字符，也不是位置，而是数量——它指定*前边的内容可以连续重复\r\n\r\n使用任意次以使整个表达式得到匹配。因此，.*连在一起就意味着任意数量的不包含\r\n\r\n换行的字符。现在\\bhi\\b.*\\bLucy\\b 的意思就很明显了： 先是一个单词hi,然后是任意\r\n\r\n个任意字符(但不能是换行)，最后是Lucy 这个单词。\r\n\r\n常用的元字符代码说明\r\n\r\n. 匹配除换行符以外的任意字符\r\n\r\n\\w 匹配字母或数字或下划线或汉字\r\n\r\n\\s 匹配任意的空白符\r\n\r\n\\d 匹配数字\r\n\r\n\\b 匹配单词的开始或结束\r\n\r\n^ 匹配字符串的开始\r\n\r\n$ 匹配字符串的结束\r\n\r\n&nbsp;\r\n\r\n这里要提一下\r\n\r\n和忽略大小写的选项类似，有些正则表达式处理工具还有一个处理多行的选项。\r\n\r\n如果选中了这个选项，^和$的意义就变成了匹配行的开始处和结束处。\r\n<h2>字符转义</h2>\r\n如果你想查找元字符本身的话，比如你查找.,或者*,就出现了问题：你没办法指\r\n\r\n定它们，因为它们会被解释成别的意思。这时你就得使用\\来取消这些字符的特殊意\r\n\r\n义。因此，你应该使用\\.和\\*。当然，要查找\\本身，你也得用\\\\.\r\n<h2>重复</h2>\r\n你已经看过了前面的 * 这个匹配重复的方式了。下面是正则表达式\r\n\r\n中所有的限定符(指定数量的代码，例如*,{5,12}等)：\r\n\r\n&nbsp;\r\n\r\n常用的限定符代码/语法说明\r\n\r\n* 重复零次或更多次\r\n\r\n+ 重复一次或更多次\r\n\r\n? 重复零次或一次\r\n\r\n{n} 重复n 次\r\n\r\n{n,} 重复n 次或更多次\r\n\r\n{n,m} 重复n 到m 次\r\n\r\n&nbsp;\r\n\r\n下面是一些使用重复的例子：\r\n\r\nWindows\\d+匹配Windows 后面跟1个或更多数字\r\n\r\n^\\w+匹配一行的第一个单词(或整个字符串的第一个单词，具体匹配哪个意思得\r\n\r\n看选项设置)\r\n<h2>字符组</h2>\r\n要想查找数字，字母或数字，空白是很简单的，因为已经有了对应这些字符集合\r\n\r\n的元字符，但是如果你想匹配没有预定义元字符的字符集合(比如元音字母a,e,i,o,u),\r\n\r\n应该怎么办？\r\n\r\n很简单，你只需要在方括号里列出它们就行了，像[aeiou]就匹配任何一个英文元\r\n\r\n音字母，[.?!]匹配标点符号(.或?或!)。\r\n\r\n我们也可以轻松地指定一个字符范围，像[0-9]代表的含意与\\d 就是完全一致的：\r\n\r\n一位数字；同理[a-z0-9A-Z_]也完全等同于\\w（如果只考虑英文的话）。\r\n\r\n&nbsp;\r\n<h2>反义</h2>\r\n有时需要查找不属于某个能简单定义的字符类的字符。比如想查找除了数字以\r\n\r\n外，其它任意字符都行的情况，这时需要用到反义：\r\n\r\n&nbsp;\r\n\r\n常用的反义代码代码/语法说明\r\n\r\n\\W 匹配任意不是字母，数字，下划线，汉字的字符\r\n\r\n\\S 匹配任意不是空白符的字符\r\n\r\n\\D 匹配任意非数字的字符\r\n\r\n\\B 匹配不是单词开头或结束的位置\r\n\r\n[^x] 匹配除了x 以外的任意字符\r\n\r\n[^aeiou] 匹配除了aeiou 这几个字母以外的任意字符\r\n\r\n&nbsp;\r\n\r\n例子：\\S+匹配不包含空白符的字符串。\r\n\r\n&lt;a[^&gt;]+&gt;匹配用尖括号括起来的以a 开头的字符串。\r\n<h2>分枝条件</h2>\r\n如果满足其中任意一种规则都应该当成匹配，具体方法是用|把不\r\n\r\n同的规则分隔开。\r\n\r\nc(a|e)t              ca|et\r\n\r\n|       竖线         匹配任意分个两边的任意一个表达式\r\n\r\n(…)   括号         限制竖线的作用范围。。\r\n<h2>分组</h2>\r\n我们已经提到了怎么重复单个字符（直接在字符后面加上限定符就行了）；但如\r\n\r\n果想要重复多个字符又该怎么办？你可以用小括号来指定子表达式(也叫做分组)，然\r\n\r\n后你就可以指定这个子表达式的重复次数了，你也可以对子表达式进行其它一些操作\r\n\r\n(后面会有介绍)。\r\n<h2>后向引用，捕获</h2>\r\n使用小括号指定一个子表达式后，匹配这个子表达式的文本(也就是此分组捕获\r\n\r\n的内容)可以在表达式或其它程序中作进一步的处理。默认情况下，每个分组会自动\r\n\r\n拥有一个组号，规则是：从左向右，以分组的左括号为标志，第一个出现的分组的组\r\n\r\n号为1，第二个为2，以此类推。\r\n\r\n呃……其实,组号分配还不像我刚说得那么简单：\r\n<ul>\r\n 	<li>分组0对应整个正则表达式</li>\r\n 	<li>实际上组号分配过程是要从左向右扫描两遍的：第一遍只给未命名组分配，第二遍</li>\r\n</ul>\r\n只给命名组分配－－因此所有命名组的组号都大于未命名的组号\r\n<ul>\r\n 	<li>你可以使用(?:exp)这样的语法来剥夺一个分组对组号分配的参与权．</li>\r\n</ul>\r\n后向引用用于重复搜索前面某个分组匹配的文本。例如， \\1代表分组1匹配的文\r\n\r\n本。难以理解？请看示例：\r\n\r\n\\b(\\w+)\\b\\s+\\1\\b 可以用来匹配重复的单词，像go go, 或者kitty kitty。这个表达式\r\n\r\n首先是一个单词，也就是单词开始处和结束处之间的多于一个的字母或数字\r\n\r\n&nbsp;\r\n\r\n(?:…)         分组文本，但不捕获\r\n\r\n(?=….)               肯定顺序环视\r\n\r\n(?&lt;=….)             肯定逆序环视\r\n\r\n&nbsp;\r\n\r\n(?!....)               否定顺序环视\r\n\r\n(?&lt;!...)              否定逆序环视\r\n<h2>贪婪与懒惰</h2>\r\n当正则表达式中包含能接受重复的限定符时，通常的行为是（在使整个表达式能\r\n\r\n得到匹配的前提下）匹配尽可能多的字符。以这个表达式为例：a.*b，它将会匹配最\r\n\r\n长的以a 开始，以b 结束的字符串。如果用它来搜索aabab 的话，它会匹配整个字符\r\n\r\n串aabab。这被称为贪婪匹配。\r\n\r\n有时，我们更需要懒惰匹配，也就是匹配尽可能少的字符。前面给出的限定符都\r\n\r\n可以被转化为懒惰匹配模式，只要在它后面加上一个问号?。这样.*?就意味着匹配任\r\n\r\n意数量的重复，但是在能使整个匹配成功的前提下使用最少的重复\r\n\r\n&nbsp;\r\n\r\na.*?b 匹配最短的，以a 开始，以b 结束的字符串。如果把它应用于aabab 的话，\r\n\r\n它会匹配aab（第一到第三个字符）和ab（第四到第五个字符）。\r\n\r\n为什么第一个匹配是aab（第一到第三个字符）而不是ab（第二到第三个字符）？\r\n\r\n简单地说，因为正则表达式有另一条规则，比懒惰／贪婪规则的优先级更高：最先开\r\n\r\n始的匹配拥有最高的优先权——The match that begins earliest wins。\r\n\r\n&nbsp;\r\n\r\n懒惰限定符代码/语法说明\r\n\r\n*? 重复任意次，但尽可能少重复\r\n\r\n+? 重复1次或更多次，但尽可能少重复\r\n\r\n?? 重复0次或1次，但尽可能少重复\r\n\r\n{n,m}? 重复n 到m 次，但尽可能少重复\r\n\r\n{n,}? 重复n 次以上，但尽可能少重复','正则表达式入门','','inherit','closed','closed','','155-revision-v1','','','2018-10-10 07:42:39','2018-10-10 07:42:39','',155,'http://45.77.202.181/?p=156',0,'revision','',0),(157,1,'2018-10-10 07:43:54','2018-10-10 07:43:54','目录\r\n\r\n<a href=\"#_Toc451267476\">一个Makefile的进化... 2</a>\r\n\r\n<a href=\"#_Toc451267477\">1．概述... 2</a>\r\n\r\n<a href=\"#_Toc451267478\">2．环境... 2</a>\r\n\r\n<a href=\"#_Toc451267479\">3．第一版Makefile. 2</a>\r\n\r\n<a href=\"#_Toc451267480\">4．规则的语法... 3</a>\r\n\r\n<a href=\"#_Toc451267481\">5．第二版Makfile. 3</a>\r\n\r\n<a href=\"#_Toc451267482\">6．变量... 4</a>\r\n\r\n<a href=\"#_Toc451267483\">7．第三版Makefile. 5</a>\r\n\r\n<a href=\"#_Toc451267484\">8．隐晦规则... 5</a>\r\n\r\n<a href=\"#_Toc451267485\">9．第四版Makefile. 6</a>\r\n\r\n<a href=\"#_Toc451267486\">10．函数... 6</a>\r\n\r\n<a href=\"#_Toc451267487\">11．自动化变量... 8</a>\r\n\r\n<a href=\"#_Toc451267488\">12．第五版Makefile. 8</a>\r\n\r\n<a href=\"#_Toc451267489\">13．模式规则... 9</a>\r\n\r\n<a href=\"#_Toc451267490\">14．自动生成依赖关系... 10</a>\r\n\r\n<a href=\"#_Toc451267491\">15．最终版Makefile. 10</a>\r\n\r\n<a href=\"#_Toc451267492\">16．后记：... 12</a>\r\n\r\n<a href=\"#_Toc451267493\">17．参考文献：... 12</a>\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n<h2><a name=\"_Toc451267476\"></a>一个Makefile的进化</h2>\r\n软件平台开发部：鲍晓鹏\r\n<h2><a name=\"_Toc451267477\"></a>1．概述</h2>\r\n也许，Windows程序员不需要过多了解Makefile，但作为做为一个Linux程序员，掌握Makefile是一项必备的技能。\r\n\r\n本文从零开始学习Makefile，从一个最简单的Makefile逐渐进化，优化，升级。扩从到一个五脏俱全的小型Makefile。没进化的一次，附带学习相关的知识，使得备有成就感，也利于吸引读者的兴趣。\r\n\r\n本文只关心Makefile，关于编译和链接的用法，包括gcc的相关用法这里也不做赘述。\r\n<h2><a name=\"_Toc451267478\"></a>2．环境</h2>\r\n现有test.c test.h main.c几个文件，我们要写一个Makefile来告诉make命令如何编译和链接这几个文件。我们的要求是：\r\n\r\n1）如果这个工程没有编译过，那么我们的所有C文件都要编译并被链接。\r\n\r\n2）如果这个工程的某几个C文件被修改，那么我们只编译被修改的C文件，并链接目标程序。\r\n\r\n3）如果这个工程的头文件被改变了，那么我们需要编译引用了这几个头文件的C文件，并链接目标程序。\r\n<h2><a name=\"_Toc451267479\"></a>3．第一版Makefile</h2>\r\n根据以上的要求，我们先提供了第一版的Makefile：\r\n\r\n##################### Makefile ##################\r\n\r\ntest : main.o test.o\r\n\r\ngcc main.o test.o -o test\r\n\r\n&nbsp;\r\n\r\nmain.o :\r\n\r\ngcc -c main.c -o main.o\r\n\r\n&nbsp;\r\n\r\ntest.o : test.h\r\n\r\ngcc -c test.c -o test.o\r\n\r\n&nbsp;\r\n\r\nclean:\r\n\r\nrm main.o test.o test\r\n\r\n##############################################\r\n\r\n这里只用的Makefile的知识，那么就来介绍一下Makefile中的规则。\r\n<h2><a name=\"_Toc451267480\"></a>4．规则的语法</h2>\r\ntargets : prerequisites\r\n\r\ncommand\r\n\r\n&nbsp;\r\n\r\ntargets是文件名，以空格分开，可以使用通配符。一般来说，我们的目标基本上是一个文件，但也有可能是多个文件。\r\n\r\ncommand是命令行，必须以[Tab键]开头\r\n\r\nprerequisites也就是目标所依赖的文件（或依赖目标）。如果其中的某个文件要比目标文件要新，那么，目标就被认为是“过时的”，被认为是需要重生成的。\r\n\r\n规则举例\r\n\r\nfoo.o : foo.c defs.h # foo模块\r\n\r\ncc -c -g foo.c\r\n\r\n&nbsp;\r\n\r\n看到这个例子，各位应该不是很陌生了，前面也已说过，foo.o是我们的目标，foo.c和defs.h是目标所依赖的源文件，而只有一个命令“cc -c -g foo.c”（以Tab键开头）。这\r\n\r\n个规则告诉我们两件事：\r\n\r\n1、文件的依赖关系，foo.o依赖于foo.c和defs.h的文件，如果foo.c和defs.h的文件日期要比foo.o文件日期要新，或是foo.o不存在，那么依赖关系发生。\r\n\r\n2、如何生成（或更新）foo.o文件。也就是那个cc命令，其说明了，如何生成foo.o这个文件。（当然foo.c文件include了defs.h文件）\r\n\r\n在第一版的Makefile中，先让我们看看test的规则：\r\n\r\ntest : main.o test.o\r\n\r\ngcc main.o test.o -o test\r\n\r\n&nbsp;\r\n\r\n我们可以看到[.o]文件的字符串被重复了两次，如果我们的工程需要加入一个新的[.o]文件，那么我们需要在两个地方加（应该是三个地方，还有一个地方在clean中）。当然，我们的makefile并不复杂，所以在两个地方加也不累，但如果makefile变得复杂，那么我们就有可能会忘掉一个需要加入的地方，而导致编译失败。所以，为了makefile的易维护，在makefile中我们可以使用变量。makefile的变量也就是一个字符串，理解成C语言中的宏可能会更好。\r\n\r\n比如，我们声明一个变量，叫objects, OBJECTS, objs, OBJS, obj, 或是 OBJ，反正不管什么啦，只要能够表示obj文件就行了。我们在makefile一开始就这样定义：\r\n\r\nobjects = main.o test.o\r\n\r\n&nbsp;\r\n\r\n于是，我们就可以很方便地在我们的makefile中以“$(objects)”的方式来使用这个变量了，于是我们的改良版makefile就变成下面这个样子：\r\n<h2><a name=\"_Toc451267481\"></a>5．第二版Makfile</h2>\r\n##################### Makefile ##################\r\n\r\nobject = main.o test.o\r\n\r\n&nbsp;\r\n\r\ntest : $(object)\r\n\r\ngcc main.o test.o -o test\r\n\r\n&nbsp;\r\n\r\nmain.o :\r\n\r\ngcc -c main.c -o main.o\r\n\r\n&nbsp;\r\n\r\ntest.o : test.h\r\n\r\ngcc -c test.c -o test.o\r\n\r\n&nbsp;\r\n\r\nclean:\r\n\r\nrm $(object) test\r\n\r\n##############################################\r\n\r\n于是如果有新的 .o 文件加入，我们只需简单地修改一下 objects 变量就可以了。既然说到了变量，就来介绍一下变量的知识。\r\n<h2><a name=\"_Toc451267482\"></a>6．变量</h2>\r\n变量的命名字可以包含字符、数字，下划线（可以是数字开头），但不应该含有“:”、“#”、“=”或是空字符（空格、回车等）。变量是大小写敏感的，“foo”、“Foo”和\r\n\r\n“FOO”是三个不同的变量名\r\n\r\n变量在声明时需要给予初值，而在使用时，需要给在变量名前加上“$”符号，但最好用小括号“（）”或是大括号“{}”把变量给包括起来。如果你要使用真实的“$”字符，那么你需要用“$$”来表示。\r\n\r\n变量会在使用它的地方精确地展开，就像C/C++中的宏一样。下面就举例介绍一些变量的用法。\r\n\r\n&nbsp;\r\n\r\n<strong>6.1 </strong><strong>变量中的变量</strong>\r\n\r\nfoo = $(bar)\r\n\r\nbar = $(ugh)\r\n\r\nugh = Huh?\r\n\r\nall:\r\n\r\necho $(foo)\r\n\r\n“make all”将会打出变量$(foo)的值是“Huh?”（ $(foo)的值是$(bar)，$(bar)的值是$(ugh)，$(ugh)的值是“Huh?”）可见，变量是可以使用后面的变量来定义的。\r\n\r\n&nbsp;\r\n\r\n<strong>6.2</strong><strong>递归</strong>\r\nA = $(B)\r\n\r\nB = $(A)\r\n\r\n为了避免上面的这种方法，我们可以使用make中的另一种用变量来定义变量的方法。这种方法使用的是“:=”操作符\r\n\r\ny := $(x) bar\r\n\r\nx := foo\r\n\r\n那么，y的值是“bar”，而不是“foo bar”\r\n\r\n&nbsp;\r\n\r\n<strong>6.3</strong><strong>变量的替换</strong>\r\n\r\nfoo := a.o b.o c.o\r\n\r\nbar := $(foo:.o=.c)\r\n\r\n这个示例中，我们先定义了一个“$(foo)”变量，而第二行的意思是把“$(foo)”中所有以“.o”字串“结尾”全部替换成“.c”，所以我们的“$(bar)”的值就是“a.c b.c c.c”。\r\n\r\n&nbsp;\r\n\r\n<strong>6.4</strong><strong>追加变量值</strong>\r\n\r\n我们可以使用“+=”操作符给变量追加值，如：\r\n\r\nobjects = main.o foo.o bar.o utils.o\r\n\r\nobjects += another.o\r\n\r\n于是，我们的$(objects)值变成：“main.o foo.o bar.o utils.o another.o”（another.o被追加进去了）\r\n<h2><a name=\"_Toc451267483\"></a>7．第三版Makefile</h2>\r\n因为make有自动推导的能力，只要make看到一个[.o]文件，它就会自动的把[.c]文件加在依赖关系中，如果make找到一个whatever.o，那么whatever.c，就会是whatever.o 的依赖文件。并且 cc –c whatever.c 也会被推导出来，于是，我们的makefile再也不用写得这么复杂。我们新的makefile又出炉了。\r\n\r\n##################### Makefile ##################\r\n\r\nobject = main.o test.o\r\n\r\ntest : $(object)\r\n\r\ngcc main.o test.o -o test\r\n\r\nclean:\r\n\r\nrm $(object) test\r\n\r\n##################### Makefile ##################\r\n\r\n这种方法，叫做make的“隐晦规则”。\r\n<h2><a name=\"_Toc451267484\"></a>8．隐晦规则</h2>\r\n在我们使用Makefile时，有一些我们会经常使用，而且使用频率非常高的东西，比如，我们编译C/C++的源程序为中间目标文件（Unix下是[.o]文件，Windows下是[.obj]文件）。本章讲述的就是一些在Makefile中的“隐含的”，早先约定了的，不需要我们再写出来的规则。\r\n\r\n“隐含规则”也就是一种惯例，make会按照这种“惯例”心照不喧地来运行，那怕我们的Makefile中没有书写这样的规则。例如，把[.c]文件编译成[.o]文件这一规则，你根本就不用写出来，make会自动推导出这种规则，并生成我们需要的[.o]文件。\r\n\r\n<strong>8.1 </strong><strong>编译C</strong><strong>程序的隐含规则</strong>\r\n\r\n“&lt;n&gt;.o”的目标的依赖目标会自动推导为“&lt;n&gt;.c”，并且其生成命令是“$(CC) –c\r\n\r\n$(CPPFLAGS) $(CFLAGS)”\r\n\r\n<strong>8.2 </strong><strong>编译C++</strong><strong>程序的隐含规则</strong>\r\n\r\n“&lt;n&gt;.o”的目标的依赖目标会自动推导为“&lt;n&gt;.cc”或是“&lt;n&gt;.C”，并且其生成命令是“$(CXX) –c $(CPPFLAGS) $(CFLAGS)”。（建议使用“.cc”作为C++源文件的后缀，而不是“.C”）\r\n<h2><a name=\"_Toc451267485\"></a>9．第四版Makefile</h2>\r\n假如文件越来越多，每次都要在object中假如一项也会觉得很麻烦，这个时候我们就可以使用函数，自动找到文件夹下的文件。改良版如下：\r\n\r\n##################### Makefile ##################\r\n\r\nsrcfile = $(wildcard ./*.c)\r\n\r\nobject = $(patsubst %.c,%.o,$(srcfile))\r\n\r\n&nbsp;\r\n\r\ntest : $(object)\r\n\r\ngcc $^ -o test\r\n\r\n&nbsp;\r\n\r\nclean:\r\n\r\nrm $(object) test\r\n\r\n##################### Makefile ##################\r\n<h2><a name=\"_Toc451267486\"></a>10．函数</h2>\r\n<strong>10.1</strong><strong>函数的调用语法</strong>\r\n\r\n函数调用，很像变量的使用，也是以“$”来标识的，其语法如下：\r\n\r\n$(&lt;function&gt; &lt;arguments&gt; )\r\n\r\n其中()也可以使用{}大括号\r\n\r\n&nbsp;\r\n\r\n<strong>10.2</strong><strong>字符串处理函数</strong>\r\n\r\n<strong>10.2.1</strong>字符串替换函数——subst\r\n\r\n$(subst &lt;from&gt;,&lt;to&gt;,&lt;text&gt; )\r\n\r\n功能：把字串&lt;text&gt;中的&lt;from&gt;字符串替换成&lt;to&gt;。\r\n\r\n返回：函数返回被替换过后的字符串。\r\n\r\n示例：\r\n\r\n$(subst ee,EE,feet on the street)，\r\n\r\n把“feet on the street”中的“ee”替换成“EE”，返回结果是“fEEt on the strEEt”。\r\n\r\n<strong>10.2.2</strong>模式字符串替换函数——patsubst\r\n\r\n$(patsubst &lt;pattern&gt;,&lt;replacement&gt;,&lt;text&gt; )\r\n\r\n功能：查找&lt;text&gt;中的单词（单词以“空格”、“Tab”或“回车”“换行”分隔）是否符合模式&lt;pattern&gt;，如果匹配的话，则以&lt;replacement&gt;替换。这里，&lt;pattern&gt;可以包括通配符“%”，表示任意长度的字串。\r\n\r\n返回：函数返回被替换过后的字符串。\r\n\r\n示例：\r\n\r\n$(patsubst %.c,%.o,x.c.c bar.c)\r\n\r\n把字串“x.c.c bar.c”符合模式[%.c]的单词替换成[%.o]，返回结果是“x.c.o bar.o”\r\n\r\n<strong>10.2.3</strong>去空格函数——strip\r\n\r\n$(strip &lt;string&gt; )\r\n\r\n功能：去掉&lt;string&gt;字串中开头和结尾的空字符。\r\n\r\n返回：返回被去掉空格的字符串值。\r\n\r\n示例：\r\n\r\n$(strip a b c )\r\n\r\n把字串“a b c ”去到开头和结尾的空格，结果是“a b c”。\r\n\r\n<strong>10.2.4</strong>过滤函数——filter\r\n\r\n$(filter &lt;pattern...&gt;,&lt;text&gt; )\r\n\r\n功能：以&lt;pattern&gt;模式过滤&lt;text&gt;字符串中的单词，保留符合模式&lt;pattern&gt;的单词。可以有多个模式。\r\n\r\n返回：返回符合模式&lt;pattern&gt;的字串。\r\n\r\n示例：\r\n\r\nsources := foo.c bar.c baz.s ugh.h\r\n\r\nfoo: $(sources)\r\n\r\ncc $(filter %.c %.s,$(sources)) -o foo\r\n\r\n$(filter %.c %.s,$(sources))返回的值是“foo.c bar.c baz.s”。\r\n\r\n<strong>10.2.5</strong>排序函数——sort\r\n\r\n$(sort &lt;list&gt; )\r\n\r\n功能：给字符串&lt;list&gt;中的单词排序（升序）。\r\n\r\n返回：返回排序后的字符串。\r\n\r\n示例：$(sort foo bar lose)返回“bar foo lose” 。\r\n\r\n备注：sort函数会去掉&lt;list&gt;中相同的单词。\r\n\r\n&nbsp;\r\n\r\n<strong>10.3</strong><strong>文件名操作函数</strong>\r\n\r\n下面我们要介绍的函数主要是处理文件名的。每个函数的参数字符串都会被当做一个或是一系列的文件名来对待。\r\n\r\n<strong>10.3.1</strong>取目录函数——dir\r\n\r\n$(dir &lt;names...&gt; )\r\n\r\n功能：从文件名序列&lt;names&gt;中取出目录部分。目录部分是指最后一个反斜杠（“/”）之前的部分。如果没有反斜杠，那么返回“./”。\r\n\r\n返回：返回文件名序列&lt;names&gt;的目录部分。\r\n\r\n示例： $(dir src/foo.c hacks)返回值是“src/ ./”。\r\n\r\n<strong>10.3.2</strong>取文件函数——notdir\r\n\r\n$(notdir &lt;names...&gt; )\r\n\r\n功能：从文件名序列&lt;names&gt;中取出非目录部分。非目录部分是指最后一个反斜杠（“/”）之后的部分。\r\n\r\n返回：返回文件名序列&lt;names&gt;的非目录部分。\r\n\r\n示例： $(notdir src/foo.c hacks)返回值是“foo.c hacks”。\r\n\r\n<strong>10.3.3</strong>取后缀函数——suffix\r\n\r\n$(suffix &lt;names...&gt; )\r\n\r\n功能：从文件名序列&lt;names&gt;中取出各个文件名的后缀。\r\n\r\n返回：返回文件名序列&lt;names&gt;的后缀序列，如果文件没有后缀，则返回空字串。\r\n\r\n示例：$(suffix src/foo.c src-1.0/bar.c hacks)返回值是“.c .c”。\r\n\r\n<strong>10.4 foreach </strong><strong>函数</strong>\r\n\r\nforeach函数和别的函数非常的不一样。因为这个函数是用来做循环用的，它的语法是：\r\n\r\n$(foreach &lt;var&gt;,&lt;list&gt;,&lt;text&gt; )\r\n\r\n这个函数的意思是，把参数&lt;list&gt;中的单词逐一取出放到参数&lt;var&gt;所指定的变量中，然后再执行&lt;text&gt;所包含的表达式。每一次&lt;text&gt;会返回一个字符串，循环过程中，&lt;text&gt;的所返回的每个字符串会以空格分隔，最后当整个循环结束时，&lt;text&gt;所返回的每个字符串所组成的整个字符串（以空格分隔）将会是foreach函数的返回值。所以，&lt;var&gt;最好是一个变量名，&lt;list&gt;可以是一个表达式，而&lt;text&gt;中一般会使用&lt;var&gt;这个参数来依次枚举&lt;list&gt;中的单词。\r\n\r\n举个例子：\r\n\r\nnames := a b c d\r\n\r\nfiles := $(foreach n,$(names),$(n).o)\r\n\r\n上面的例子中，$(name)中的单词会被挨个取出，并存到变量“n”中，“$(n).o”每次根据“$(n)”计算出一个值，这些值以空格分隔，最后作为foreach函数的返回，所以\r\n\r\n$(files)的值是“a.o b.o c.o d.o”。\r\n\r\n注意，foreach 中的&lt;var&gt;参数是一个临时的局部变量，foreach 函数执行完后，参数&lt;var&gt;的变量将不在作用，其作用域只在foreach函数当中。\r\n<h2><a name=\"_Toc451267487\"></a>11．自动化变量</h2>\r\n第四版的Makefile中还使用到了自动化变量。很多时候目标和依赖文件都是一系例的文件，那么我们如何书写一个命令来完成从不同的依赖文件生成相应的目标？因为在每一次的对模式规则的解析时，都会是不同的目标和依赖文件。\r\n\r\n自动化变量就是完成这个功能的。所谓自动化变量，就是这种变量会把模式中所定义的一系列的文件自动地挨个取出，直至所有的符合模式的文件都取完了。这种自动化变量只应出现在规则的命令中。下面是3个常用的自动化变量及其说明：\r\n\r\n$@\r\n\r\n表示规则中的目标文件集。在模式规则中，如果有多个目标，那么，\"$@\"就是匹配于目标中模式定义的集合。\r\n\r\n$&lt;\r\n\r\n依赖目标中的第一个目标名字。如果依赖目标是以模式（即\"%\"）定义的，那么\"$&lt;\"将是符合模式的一系列的文件集。注意，其是一个一个取出来的。\r\n\r\n$^\r\n\r\n所有的依赖目标的集合。以空格分隔。如果在依赖目标中有多个重复的，那么这个变量\r\n\r\n会去除重复的依赖目标，只保留一份。\r\n<h2><a name=\"_Toc451267488\"></a>12．第五版Makefile</h2>\r\n在滴四版中，由于使用隐晦规则，我们丢掉了对.h文件的依赖关系。但是，有时一个庞大的工程，头文件有过修改，却要让整个工程重新编译，这个时间是比较长的。原则上我们只有让依赖修改过的头文件重新编译即可，那么有什么办法呢。能建立依赖关系的Makefile又出炉了：\r\n\r\n##################### Makefile ##################\r\n\r\nsrcfile = $(wildcard ./*.c)\r\n\r\nobject = $(patsubst %.c,%.o,$(srcfile))\r\n\r\nobj_d = $(patsubst %.c,%.d,$(srcfile))\r\n\r\n&nbsp;\r\n\r\ntest : $(object)\r\n\r\ngcc $^ -o test\r\n\r\n&nbsp;\r\n\r\n%.d: %.c\r\n\r\n@set -e; rm -f $@; \\\r\n\r\n$(CC) -MM $(CPPFLAGS) $&lt; &gt; $@.$$$$; \\\r\n\r\nsed \'s,\\($*\\)\\.o[ :]*,\\1.o $@ : ,g\' &lt; $@.$$$$ &gt; $@; \\\r\n\r\nrm -f $@.$$$$\r\n\r\n&nbsp;\r\n\r\ninclude $(obj_d)\r\n\r\n&nbsp;\r\n\r\nclean:\r\n\r\nrm $(object) $(obj_d) test\r\n\r\n##################### Makefile ##################\r\n<h2><a name=\"_Toc451267489\"></a>13．模式规则</h2>\r\n要看懂这个Makefile，我们要知道什么模式规则。你可以使用模式规则来定义一个隐含规则。一个模式规则就好像一个一般的规则，只是在规则中，目标的定义需要有\"%\"字符。\"%\"的意思是表示一个或多个任意字符。在依赖目标中同样可以使用\"%\"，只是依赖目标中的\"%\"的取值，取决于其目标。\r\n\r\n有一点需要注意的是，\"%\"的展开发生在变量和函数的展开之后，变量和函数的展开发生在make载入Makefile时，而模式规则中的\"%\"则发生在运行时。\r\n\r\n<strong>13.1</strong><strong>模式规则介绍</strong>\r\n\r\n模式规则中，至少在规则的目标定义中要包含\"%\"，否则，就是一般的规则。目标中的\"%\"定义表示对文件名的匹配，\"%\"表示长度任意的非空字符串。例如：\"%.c\"表示以\".c\"结尾的文件名（文件名的长度至少为3），而\"s.%.c\"则表示以\"s.\"开头，\".c\"结尾的文件名（文件名的长度至少为5）。\r\n\r\n如果\"%\"定义在目标中，那么，目标中的\"%\"的值决定了依赖目标中的\"%\"的值，也就是说，目标中的模式的\"%\"决定了依赖目标中\"%\"的样子。例如有一个模式规则如下：\r\n\r\n%.o : %.c ;\r\n\r\n&lt;command ......&gt;\r\n\r\n其含义是，指出了怎么从所有的[.c]文件生成相应的[.o]文件的规则。如果要生成的目标是\"a.o b.o\"，那么\"%c\"就是\"a.c b.c\"。一旦依赖目标中的\"%\"模式被确定，那么，make会被要求去匹配当前目录下所有的文件名，一旦找到，make就会规则下的命令，所以，在模式规则中，目标可能会是多个的，如果有模式匹配出多个目标，make就会产生所有的模式目标，此时，make关心的是依赖的文件名和生成目标的命令这两件事。\r\n\r\n<strong>13.2</strong><strong>模式规则示例</strong>\r\n\r\n下面这个例子表示了,把所有的[.c]文件都编译成[.o]文件.\r\n\r\n%.o : %.c\r\n\r\n$(CC) -c $(CFLAGS) $(CPPFLAGS) $&lt; -o $@\r\n<h2><a name=\"_Toc451267490\"></a>14．自动生成依赖关系</h2>\r\n在Makefile中，我们的依赖关系可能会需要包含一系列的头文件，比如，如果我们的\r\n\r\nmain.c中有一句“#include \"defs.h\"”，那么我们的依赖关系应该是：\r\n\r\nmain.o : main.c defs.h\r\n\r\n&nbsp;\r\n\r\n于是由编译器自动生成的依赖关系，这样一来，你就不必再手动书写若干文件的依赖\r\n\r\n关系，而由编译器自动生成了。需要提醒一句的是，如果你使用GNU的C/C++编译器，\r\n\r\n你得用“-MM”参数，不然，“-M”参数会把一些标准库的头文件也包含进来。\r\n\r\ngcc -MM main.c的输出则是：\r\n\r\nmain.o: main.c defs.h\r\n\r\n&nbsp;\r\n\r\n接下来我们可以看下这个模式规则的含义了\r\n\r\n%.d: %.c\r\n\r\n@set -e; rm -f $@; \\\r\n\r\n$(CC) -MM $(CPPFLAGS) $&lt; &gt; $@.$$$$; \\\r\n\r\nsed \'s,\\($*\\)\\.o[ :]*,\\1.o $@ : ,g\' &lt; $@.$$$$ &gt; $@; \\\r\n\r\nrm -f $@.$$$$\r\n\r\n&nbsp;\r\n\r\n“rm -f $@”的意思是删除所有的目标，也就是[.d]文件，第二行的意思是，为每个依赖文件“$&lt;”，也就是[.c]文件生成依赖文件，“$@”表示模式“%.d”文件，如果有一个C文件是name.c，那么“%”就是“name”，“$$$$”意为一个随机编号，第二行生成的文件有可能是“name.d.12345”，第三行使用sed命令做了一个替换，关于sed命令的用法请参看相关的使用文档。第四行就是删除临时文件。\r\n\r\n总而言之，这个模式要做的事就是在编译器生成的依赖关系中加入[.d]文件的依赖，即\r\n\r\n把依赖关系：\r\n\r\nmain.o : main.c defs.h\r\n\r\n转成：\r\n\r\nmain.o main.d : main.c defs.h\r\n\r\n于是，我们的[.d]文件也会自动更新了，并会自动生成了。一旦我们完成这个工作，接下来，我们就要把这些自动生成的规则放进我们的主Makefile 中。我们可以使用Makefile 的“include”命令，来引入别的Makefile文件（前面讲过），例如：\r\n\r\nsources = foo.c bar.c\r\n\r\ninclude $(sources:.c=.d)\r\n<h2><a name=\"_Toc451267491\"></a>15．最终版Makefile</h2>\r\n最后，我们为了编译方便，加上制定编译目标，指定源文件目录，制定存放中间件目录等，综合前面的知识，生成最终版的Makefile，相比大家已经可以自己读懂这个Makefile了：\r\n\r\n##################### Makefile ##################\r\n\r\n#编译选项\r\n\r\nCFLAGS += -I./Include\r\n\r\nCFLAGS += -Wall -O -Os -m64\r\n\r\n&nbsp;\r\n\r\n#源文件目录、中间层目录\r\n\r\nsrc_path = Src\r\n\r\nobj_path = obj\r\n\r\n$(shell mkdir -p ${obj_path})\r\n\r\n$(foreach dir,$(src_path),$(shell mkdir -p ${obj_path}/${dir}))\r\n\r\n&nbsp;\r\n\r\n#找出源文件\r\n\r\nsrcfile_c = $(foreach dir,$(src_path),$(wildcard $(dir)/*.c))\r\n\r\nsrcfile_cpp = $(foreach dir,$(src_path),$(wildcard $(dir)/*.cpp))\r\n\r\n&nbsp;\r\n\r\n#依赖中间.o文件\r\n\r\nobject = $(patsubst %.c,${obj_path}/%.o,$(srcfile_c))\r\n\r\nobject += $(patsubst %.cpp,${obj_path}/%.o,$(srcfile_cpp))\r\n\r\n&nbsp;\r\n\r\n#依赖关系文件\r\n\r\nobj_d = $(object:.o=.d)\r\n\r\n&nbsp;\r\n\r\n#目标文件\r\n\r\ntarget = haha\r\n\r\n&nbsp;\r\n\r\n#编译目标\r\n\r\n$(target) : $(object)\r\n\r\n$(CXX) $^ -o $@\r\n\r\n&nbsp;\r\n\r\n#模式规则\r\n\r\n${obj_path}/%.o: %.c\r\n\r\n$(CC) -c $(CFLAGS) $&lt; -o $@\r\n\r\n&nbsp;\r\n\r\n${obj_path}/%.o: %.cpp\r\n\r\n$(CXX) -c $(CFLAGS) $&lt; -o $@\r\n\r\n&nbsp;\r\n\r\n${obj_path}/%.d:%.c\r\n\r\n$(CC) -MM $(CFLAGS) $&lt; &gt; $@\r\n\r\n@sed \'s/.*\\.o/$(subst /,\\/, $(dir $@))&amp;${subst /,\\/, $@}/g\' $@ &gt;$@.tmp\r\n\r\n@mv $@.tmp $@\r\n\r\n&nbsp;\r\n\r\n${obj_path}/%.d:%.cpp\r\n\r\n$(CXX) -MM $(CFLAGS) $&lt; &gt; $@\r\n\r\n@sed \'s/.*\\.o/${subst /,\\/, $(dir $@)}&amp;${subst /,\\/, $@}/g\' $@ &gt;$@.tmp\r\n\r\n@mv $@.tmp $@\r\n\r\n&nbsp;\r\n\r\n#包含依赖关系文件\r\n\r\ninclude $(obj_d)\r\n\r\n&nbsp;\r\n\r\nclean:\r\n\r\nrm -rf $(obj_path) $(target)\r\n\r\n##################### Makefile ##################\r\n<h2><a name=\"_Toc451267492\"></a>16．后记：</h2>\r\n终于完成了一个Makefile的进化史，将这个Makefile稍加改动，已经可以是一个专业的Makefile了。\r\n\r\n本文主要参考了陈皓在csdn发表的跟我一起写 Makefile。包含了主要的Makefile知识。权威的解释还请参考GNU 的Makefile手册。\r\n\r\n时间匆忙，如果错误之处请指出，请联系 <a href=\"mailto:bao_xiaopeng@dahuatech.com。或者662593\">bao_xiaopeng@dahuatech.com。或者662593</a>联系作者。\r\n<h2><a name=\"_Toc451267493\"></a>17．参考文献：</h2>\r\n《跟我一起写 Makefile》------陈皓','一个Makefile的进化','','publish','open','open','','%e4%b8%80%e4%b8%aamakefile%e7%9a%84%e8%bf%9b%e5%8c%96','','','2018-10-10 07:44:59','2018-10-10 07:44:59','',0,'http://45.77.202.181/?p=157',0,'post','',0),(158,1,'2018-10-10 07:43:54','2018-10-10 07:43:54','目录\r\n\r\n<a href=\"#_Toc451267476\">一个Makefile的进化... 2</a>\r\n\r\n<a href=\"#_Toc451267477\">1．概述... 2</a>\r\n\r\n<a href=\"#_Toc451267478\">2．环境... 2</a>\r\n\r\n<a href=\"#_Toc451267479\">3．第一版Makefile. 2</a>\r\n\r\n<a href=\"#_Toc451267480\">4．规则的语法... 3</a>\r\n\r\n<a href=\"#_Toc451267481\">5．第二版Makfile. 3</a>\r\n\r\n<a href=\"#_Toc451267482\">6．变量... 4</a>\r\n\r\n<a href=\"#_Toc451267483\">7．第三版Makefile. 5</a>\r\n\r\n<a href=\"#_Toc451267484\">8．隐晦规则... 5</a>\r\n\r\n<a href=\"#_Toc451267485\">9．第四版Makefile. 6</a>\r\n\r\n<a href=\"#_Toc451267486\">10．函数... 6</a>\r\n\r\n<a href=\"#_Toc451267487\">11．自动化变量... 8</a>\r\n\r\n<a href=\"#_Toc451267488\">12．第五版Makefile. 8</a>\r\n\r\n<a href=\"#_Toc451267489\">13．模式规则... 9</a>\r\n\r\n<a href=\"#_Toc451267490\">14．自动生成依赖关系... 10</a>\r\n\r\n<a href=\"#_Toc451267491\">15．最终版Makefile. 10</a>\r\n\r\n<a href=\"#_Toc451267492\">16．后记：... 12</a>\r\n\r\n<a href=\"#_Toc451267493\">17．参考文献：... 12</a>\r\n\r\n&nbsp;\r\n<h2><a name=\"_Toc451267477\"></a>1．概述</h2>\r\n也许，Windows程序员不需要过多了解Makefile，但作为做为一个Linux程序员，掌握Makefile是一项必备的技能。\r\n\r\n本文从零开始学习Makefile，从一个最简单的Makefile逐渐进化，优化，升级。扩从到一个五脏俱全的小型Makefile。没进化的一次，附带学习相关的知识，使得备有成就感，也利于吸引读者的兴趣。\r\n\r\n本文只关心Makefile，关于编译和链接的用法，包括gcc的相关用法这里也不做赘述。\r\n<h2><a name=\"_Toc451267478\"></a>2．环境</h2>\r\n现有test.c test.h main.c几个文件，我们要写一个Makefile来告诉make命令如何编译和链接这几个文件。我们的要求是：\r\n\r\n1）如果这个工程没有编译过，那么我们的所有C文件都要编译并被链接。\r\n\r\n2）如果这个工程的某几个C文件被修改，那么我们只编译被修改的C文件，并链接目标程序。\r\n\r\n3）如果这个工程的头文件被改变了，那么我们需要编译引用了这几个头文件的C文件，并链接目标程序。\r\n<h2><a name=\"_Toc451267479\"></a>3．第一版Makefile</h2>\r\n根据以上的要求，我们先提供了第一版的Makefile：\r\n\r\n##################### Makefile ##################\r\n\r\ntest : main.o test.o\r\n\r\ngcc main.o test.o -o test\r\n\r\n&nbsp;\r\n\r\nmain.o :\r\n\r\ngcc -c main.c -o main.o\r\n\r\n&nbsp;\r\n\r\ntest.o : test.h\r\n\r\ngcc -c test.c -o test.o\r\n\r\n&nbsp;\r\n\r\nclean:\r\n\r\nrm main.o test.o test\r\n\r\n##############################################\r\n\r\n这里只用的Makefile的知识，那么就来介绍一下Makefile中的规则。\r\n<h2><a name=\"_Toc451267480\"></a>4．规则的语法</h2>\r\ntargets : prerequisites\r\n\r\ncommand\r\n\r\n&nbsp;\r\n\r\ntargets是文件名，以空格分开，可以使用通配符。一般来说，我们的目标基本上是一个文件，但也有可能是多个文件。\r\n\r\ncommand是命令行，必须以[Tab键]开头\r\n\r\nprerequisites也就是目标所依赖的文件（或依赖目标）。如果其中的某个文件要比目标文件要新，那么，目标就被认为是“过时的”，被认为是需要重生成的。\r\n\r\n规则举例\r\n\r\nfoo.o : foo.c defs.h # foo模块\r\n\r\ncc -c -g foo.c\r\n\r\n&nbsp;\r\n\r\n看到这个例子，各位应该不是很陌生了，前面也已说过，foo.o是我们的目标，foo.c和defs.h是目标所依赖的源文件，而只有一个命令“cc -c -g foo.c”（以Tab键开头）。这\r\n\r\n个规则告诉我们两件事：\r\n\r\n1、文件的依赖关系，foo.o依赖于foo.c和defs.h的文件，如果foo.c和defs.h的文件日期要比foo.o文件日期要新，或是foo.o不存在，那么依赖关系发生。\r\n\r\n2、如何生成（或更新）foo.o文件。也就是那个cc命令，其说明了，如何生成foo.o这个文件。（当然foo.c文件include了defs.h文件）\r\n\r\n在第一版的Makefile中，先让我们看看test的规则：\r\n\r\ntest : main.o test.o\r\n\r\ngcc main.o test.o -o test\r\n\r\n&nbsp;\r\n\r\n我们可以看到[.o]文件的字符串被重复了两次，如果我们的工程需要加入一个新的[.o]文件，那么我们需要在两个地方加（应该是三个地方，还有一个地方在clean中）。当然，我们的makefile并不复杂，所以在两个地方加也不累，但如果makefile变得复杂，那么我们就有可能会忘掉一个需要加入的地方，而导致编译失败。所以，为了makefile的易维护，在makefile中我们可以使用变量。makefile的变量也就是一个字符串，理解成C语言中的宏可能会更好。\r\n\r\n比如，我们声明一个变量，叫objects, OBJECTS, objs, OBJS, obj, 或是 OBJ，反正不管什么啦，只要能够表示obj文件就行了。我们在makefile一开始就这样定义：\r\n\r\nobjects = main.o test.o\r\n\r\n&nbsp;\r\n\r\n于是，我们就可以很方便地在我们的makefile中以“$(objects)”的方式来使用这个变量了，于是我们的改良版makefile就变成下面这个样子：\r\n<h2><a name=\"_Toc451267481\"></a>5．第二版Makfile</h2>\r\n##################### Makefile ##################\r\n\r\nobject = main.o test.o\r\n\r\n&nbsp;\r\n\r\ntest : $(object)\r\n\r\ngcc main.o test.o -o test\r\n\r\n&nbsp;\r\n\r\nmain.o :\r\n\r\ngcc -c main.c -o main.o\r\n\r\n&nbsp;\r\n\r\ntest.o : test.h\r\n\r\ngcc -c test.c -o test.o\r\n\r\n&nbsp;\r\n\r\nclean:\r\n\r\nrm $(object) test\r\n\r\n##############################################\r\n\r\n于是如果有新的 .o 文件加入，我们只需简单地修改一下 objects 变量就可以了。既然说到了变量，就来介绍一下变量的知识。\r\n<h2><a name=\"_Toc451267482\"></a>6．变量</h2>\r\n变量的命名字可以包含字符、数字，下划线（可以是数字开头），但不应该含有“:”、“#”、“=”或是空字符（空格、回车等）。变量是大小写敏感的，“foo”、“Foo”和\r\n\r\n“FOO”是三个不同的变量名\r\n\r\n变量在声明时需要给予初值，而在使用时，需要给在变量名前加上“$”符号，但最好用小括号“（）”或是大括号“{}”把变量给包括起来。如果你要使用真实的“$”字符，那么你需要用“$$”来表示。\r\n\r\n变量会在使用它的地方精确地展开，就像C/C++中的宏一样。下面就举例介绍一些变量的用法。\r\n\r\n&nbsp;\r\n\r\n<strong>6.1 </strong><strong>变量中的变量</strong>\r\n\r\nfoo = $(bar)\r\n\r\nbar = $(ugh)\r\n\r\nugh = Huh?\r\n\r\nall:\r\n\r\necho $(foo)\r\n\r\n“make all”将会打出变量$(foo)的值是“Huh?”（ $(foo)的值是$(bar)，$(bar)的值是$(ugh)，$(ugh)的值是“Huh?”）可见，变量是可以使用后面的变量来定义的。\r\n\r\n&nbsp;\r\n\r\n<strong>6.2</strong><strong>递归</strong>\r\nA = $(B)\r\n\r\nB = $(A)\r\n\r\n为了避免上面的这种方法，我们可以使用make中的另一种用变量来定义变量的方法。这种方法使用的是“:=”操作符\r\n\r\ny := $(x) bar\r\n\r\nx := foo\r\n\r\n那么，y的值是“bar”，而不是“foo bar”\r\n\r\n&nbsp;\r\n\r\n<strong>6.3</strong><strong>变量的替换</strong>\r\n\r\nfoo := a.o b.o c.o\r\n\r\nbar := $(foo:.o=.c)\r\n\r\n这个示例中，我们先定义了一个“$(foo)”变量，而第二行的意思是把“$(foo)”中所有以“.o”字串“结尾”全部替换成“.c”，所以我们的“$(bar)”的值就是“a.c b.c c.c”。\r\n\r\n&nbsp;\r\n\r\n<strong>6.4</strong><strong>追加变量值</strong>\r\n\r\n我们可以使用“+=”操作符给变量追加值，如：\r\n\r\nobjects = main.o foo.o bar.o utils.o\r\n\r\nobjects += another.o\r\n\r\n于是，我们的$(objects)值变成：“main.o foo.o bar.o utils.o another.o”（another.o被追加进去了）\r\n<h2><a name=\"_Toc451267483\"></a>7．第三版Makefile</h2>\r\n因为make有自动推导的能力，只要make看到一个[.o]文件，它就会自动的把[.c]文件加在依赖关系中，如果make找到一个whatever.o，那么whatever.c，就会是whatever.o 的依赖文件。并且 cc –c whatever.c 也会被推导出来，于是，我们的makefile再也不用写得这么复杂。我们新的makefile又出炉了。\r\n\r\n##################### Makefile ##################\r\n\r\nobject = main.o test.o\r\n\r\ntest : $(object)\r\n\r\ngcc main.o test.o -o test\r\n\r\nclean:\r\n\r\nrm $(object) test\r\n\r\n##################### Makefile ##################\r\n\r\n这种方法，叫做make的“隐晦规则”。\r\n<h2><a name=\"_Toc451267484\"></a>8．隐晦规则</h2>\r\n在我们使用Makefile时，有一些我们会经常使用，而且使用频率非常高的东西，比如，我们编译C/C++的源程序为中间目标文件（Unix下是[.o]文件，Windows下是[.obj]文件）。本章讲述的就是一些在Makefile中的“隐含的”，早先约定了的，不需要我们再写出来的规则。\r\n\r\n“隐含规则”也就是一种惯例，make会按照这种“惯例”心照不喧地来运行，那怕我们的Makefile中没有书写这样的规则。例如，把[.c]文件编译成[.o]文件这一规则，你根本就不用写出来，make会自动推导出这种规则，并生成我们需要的[.o]文件。\r\n\r\n<strong>8.1 </strong><strong>编译C</strong><strong>程序的隐含规则</strong>\r\n\r\n“&lt;n&gt;.o”的目标的依赖目标会自动推导为“&lt;n&gt;.c”，并且其生成命令是“$(CC) –c\r\n\r\n$(CPPFLAGS) $(CFLAGS)”\r\n\r\n<strong>8.2 </strong><strong>编译C++</strong><strong>程序的隐含规则</strong>\r\n\r\n“&lt;n&gt;.o”的目标的依赖目标会自动推导为“&lt;n&gt;.cc”或是“&lt;n&gt;.C”，并且其生成命令是“$(CXX) –c $(CPPFLAGS) $(CFLAGS)”。（建议使用“.cc”作为C++源文件的后缀，而不是“.C”）\r\n<h2><a name=\"_Toc451267485\"></a>9．第四版Makefile</h2>\r\n假如文件越来越多，每次都要在object中假如一项也会觉得很麻烦，这个时候我们就可以使用函数，自动找到文件夹下的文件。改良版如下：\r\n\r\n##################### Makefile ##################\r\n\r\nsrcfile = $(wildcard ./*.c)\r\n\r\nobject = $(patsubst %.c,%.o,$(srcfile))\r\n\r\n&nbsp;\r\n\r\ntest : $(object)\r\n\r\ngcc $^ -o test\r\n\r\n&nbsp;\r\n\r\nclean:\r\n\r\nrm $(object) test\r\n\r\n##################### Makefile ##################\r\n<h2><a name=\"_Toc451267486\"></a>10．函数</h2>\r\n<strong>10.1</strong><strong>函数的调用语法</strong>\r\n\r\n函数调用，很像变量的使用，也是以“$”来标识的，其语法如下：\r\n\r\n$(&lt;function&gt; &lt;arguments&gt; )\r\n\r\n其中()也可以使用{}大括号\r\n\r\n&nbsp;\r\n\r\n<strong>10.2</strong><strong>字符串处理函数</strong>\r\n\r\n<strong>10.2.1</strong>字符串替换函数——subst\r\n\r\n$(subst &lt;from&gt;,&lt;to&gt;,&lt;text&gt; )\r\n\r\n功能：把字串&lt;text&gt;中的&lt;from&gt;字符串替换成&lt;to&gt;。\r\n\r\n返回：函数返回被替换过后的字符串。\r\n\r\n示例：\r\n\r\n$(subst ee,EE,feet on the street)，\r\n\r\n把“feet on the street”中的“ee”替换成“EE”，返回结果是“fEEt on the strEEt”。\r\n\r\n<strong>10.2.2</strong>模式字符串替换函数——patsubst\r\n\r\n$(patsubst &lt;pattern&gt;,&lt;replacement&gt;,&lt;text&gt; )\r\n\r\n功能：查找&lt;text&gt;中的单词（单词以“空格”、“Tab”或“回车”“换行”分隔）是否符合模式&lt;pattern&gt;，如果匹配的话，则以&lt;replacement&gt;替换。这里，&lt;pattern&gt;可以包括通配符“%”，表示任意长度的字串。\r\n\r\n返回：函数返回被替换过后的字符串。\r\n\r\n示例：\r\n\r\n$(patsubst %.c,%.o,x.c.c bar.c)\r\n\r\n把字串“x.c.c bar.c”符合模式[%.c]的单词替换成[%.o]，返回结果是“x.c.o bar.o”\r\n\r\n<strong>10.2.3</strong>去空格函数——strip\r\n\r\n$(strip &lt;string&gt; )\r\n\r\n功能：去掉&lt;string&gt;字串中开头和结尾的空字符。\r\n\r\n返回：返回被去掉空格的字符串值。\r\n\r\n示例：\r\n\r\n$(strip a b c )\r\n\r\n把字串“a b c ”去到开头和结尾的空格，结果是“a b c”。\r\n\r\n<strong>10.2.4</strong>过滤函数——filter\r\n\r\n$(filter &lt;pattern...&gt;,&lt;text&gt; )\r\n\r\n功能：以&lt;pattern&gt;模式过滤&lt;text&gt;字符串中的单词，保留符合模式&lt;pattern&gt;的单词。可以有多个模式。\r\n\r\n返回：返回符合模式&lt;pattern&gt;的字串。\r\n\r\n示例：\r\n\r\nsources := foo.c bar.c baz.s ugh.h\r\n\r\nfoo: $(sources)\r\n\r\ncc $(filter %.c %.s,$(sources)) -o foo\r\n\r\n$(filter %.c %.s,$(sources))返回的值是“foo.c bar.c baz.s”。\r\n\r\n<strong>10.2.5</strong>排序函数——sort\r\n\r\n$(sort &lt;list&gt; )\r\n\r\n功能：给字符串&lt;list&gt;中的单词排序（升序）。\r\n\r\n返回：返回排序后的字符串。\r\n\r\n示例：$(sort foo bar lose)返回“bar foo lose” 。\r\n\r\n备注：sort函数会去掉&lt;list&gt;中相同的单词。\r\n\r\n&nbsp;\r\n\r\n<strong>10.3</strong><strong>文件名操作函数</strong>\r\n\r\n下面我们要介绍的函数主要是处理文件名的。每个函数的参数字符串都会被当做一个或是一系列的文件名来对待。\r\n\r\n<strong>10.3.1</strong>取目录函数——dir\r\n\r\n$(dir &lt;names...&gt; )\r\n\r\n功能：从文件名序列&lt;names&gt;中取出目录部分。目录部分是指最后一个反斜杠（“/”）之前的部分。如果没有反斜杠，那么返回“./”。\r\n\r\n返回：返回文件名序列&lt;names&gt;的目录部分。\r\n\r\n示例： $(dir src/foo.c hacks)返回值是“src/ ./”。\r\n\r\n<strong>10.3.2</strong>取文件函数——notdir\r\n\r\n$(notdir &lt;names...&gt; )\r\n\r\n功能：从文件名序列&lt;names&gt;中取出非目录部分。非目录部分是指最后一个反斜杠（“/”）之后的部分。\r\n\r\n返回：返回文件名序列&lt;names&gt;的非目录部分。\r\n\r\n示例： $(notdir src/foo.c hacks)返回值是“foo.c hacks”。\r\n\r\n<strong>10.3.3</strong>取后缀函数——suffix\r\n\r\n$(suffix &lt;names...&gt; )\r\n\r\n功能：从文件名序列&lt;names&gt;中取出各个文件名的后缀。\r\n\r\n返回：返回文件名序列&lt;names&gt;的后缀序列，如果文件没有后缀，则返回空字串。\r\n\r\n示例：$(suffix src/foo.c src-1.0/bar.c hacks)返回值是“.c .c”。\r\n\r\n<strong>10.4 foreach </strong><strong>函数</strong>\r\n\r\nforeach函数和别的函数非常的不一样。因为这个函数是用来做循环用的，它的语法是：\r\n\r\n$(foreach &lt;var&gt;,&lt;list&gt;,&lt;text&gt; )\r\n\r\n这个函数的意思是，把参数&lt;list&gt;中的单词逐一取出放到参数&lt;var&gt;所指定的变量中，然后再执行&lt;text&gt;所包含的表达式。每一次&lt;text&gt;会返回一个字符串，循环过程中，&lt;text&gt;的所返回的每个字符串会以空格分隔，最后当整个循环结束时，&lt;text&gt;所返回的每个字符串所组成的整个字符串（以空格分隔）将会是foreach函数的返回值。所以，&lt;var&gt;最好是一个变量名，&lt;list&gt;可以是一个表达式，而&lt;text&gt;中一般会使用&lt;var&gt;这个参数来依次枚举&lt;list&gt;中的单词。\r\n\r\n举个例子：\r\n\r\nnames := a b c d\r\n\r\nfiles := $(foreach n,$(names),$(n).o)\r\n\r\n上面的例子中，$(name)中的单词会被挨个取出，并存到变量“n”中，“$(n).o”每次根据“$(n)”计算出一个值，这些值以空格分隔，最后作为foreach函数的返回，所以\r\n\r\n$(files)的值是“a.o b.o c.o d.o”。\r\n\r\n注意，foreach 中的&lt;var&gt;参数是一个临时的局部变量，foreach 函数执行完后，参数&lt;var&gt;的变量将不在作用，其作用域只在foreach函数当中。\r\n<h2><a name=\"_Toc451267487\"></a>11．自动化变量</h2>\r\n第四版的Makefile中还使用到了自动化变量。很多时候目标和依赖文件都是一系例的文件，那么我们如何书写一个命令来完成从不同的依赖文件生成相应的目标？因为在每一次的对模式规则的解析时，都会是不同的目标和依赖文件。\r\n\r\n自动化变量就是完成这个功能的。所谓自动化变量，就是这种变量会把模式中所定义的一系列的文件自动地挨个取出，直至所有的符合模式的文件都取完了。这种自动化变量只应出现在规则的命令中。下面是3个常用的自动化变量及其说明：\r\n\r\n$@\r\n\r\n表示规则中的目标文件集。在模式规则中，如果有多个目标，那么，\"$@\"就是匹配于目标中模式定义的集合。\r\n\r\n$&lt;\r\n\r\n依赖目标中的第一个目标名字。如果依赖目标是以模式（即\"%\"）定义的，那么\"$&lt;\"将是符合模式的一系列的文件集。注意，其是一个一个取出来的。\r\n\r\n$^\r\n\r\n所有的依赖目标的集合。以空格分隔。如果在依赖目标中有多个重复的，那么这个变量\r\n\r\n会去除重复的依赖目标，只保留一份。\r\n<h2><a name=\"_Toc451267488\"></a>12．第五版Makefile</h2>\r\n在滴四版中，由于使用隐晦规则，我们丢掉了对.h文件的依赖关系。但是，有时一个庞大的工程，头文件有过修改，却要让整个工程重新编译，这个时间是比较长的。原则上我们只有让依赖修改过的头文件重新编译即可，那么有什么办法呢。能建立依赖关系的Makefile又出炉了：\r\n\r\n##################### Makefile ##################\r\n\r\nsrcfile = $(wildcard ./*.c)\r\n\r\nobject = $(patsubst %.c,%.o,$(srcfile))\r\n\r\nobj_d = $(patsubst %.c,%.d,$(srcfile))\r\n\r\n&nbsp;\r\n\r\ntest : $(object)\r\n\r\ngcc $^ -o test\r\n\r\n&nbsp;\r\n\r\n%.d: %.c\r\n\r\n@set -e; rm -f $@; \\\r\n\r\n$(CC) -MM $(CPPFLAGS) $&lt; &gt; $@.$$$$; \\\r\n\r\nsed \'s,\\($*\\)\\.o[ :]*,\\1.o $@ : ,g\' &lt; $@.$$$$ &gt; $@; \\\r\n\r\nrm -f $@.$$$$\r\n\r\n&nbsp;\r\n\r\ninclude $(obj_d)\r\n\r\n&nbsp;\r\n\r\nclean:\r\n\r\nrm $(object) $(obj_d) test\r\n\r\n##################### Makefile ##################\r\n<h2><a name=\"_Toc451267489\"></a>13．模式规则</h2>\r\n要看懂这个Makefile，我们要知道什么模式规则。你可以使用模式规则来定义一个隐含规则。一个模式规则就好像一个一般的规则，只是在规则中，目标的定义需要有\"%\"字符。\"%\"的意思是表示一个或多个任意字符。在依赖目标中同样可以使用\"%\"，只是依赖目标中的\"%\"的取值，取决于其目标。\r\n\r\n有一点需要注意的是，\"%\"的展开发生在变量和函数的展开之后，变量和函数的展开发生在make载入Makefile时，而模式规则中的\"%\"则发生在运行时。\r\n\r\n<strong>13.1</strong><strong>模式规则介绍</strong>\r\n\r\n模式规则中，至少在规则的目标定义中要包含\"%\"，否则，就是一般的规则。目标中的\"%\"定义表示对文件名的匹配，\"%\"表示长度任意的非空字符串。例如：\"%.c\"表示以\".c\"结尾的文件名（文件名的长度至少为3），而\"s.%.c\"则表示以\"s.\"开头，\".c\"结尾的文件名（文件名的长度至少为5）。\r\n\r\n如果\"%\"定义在目标中，那么，目标中的\"%\"的值决定了依赖目标中的\"%\"的值，也就是说，目标中的模式的\"%\"决定了依赖目标中\"%\"的样子。例如有一个模式规则如下：\r\n\r\n%.o : %.c ;\r\n\r\n&lt;command ......&gt;\r\n\r\n其含义是，指出了怎么从所有的[.c]文件生成相应的[.o]文件的规则。如果要生成的目标是\"a.o b.o\"，那么\"%c\"就是\"a.c b.c\"。一旦依赖目标中的\"%\"模式被确定，那么，make会被要求去匹配当前目录下所有的文件名，一旦找到，make就会规则下的命令，所以，在模式规则中，目标可能会是多个的，如果有模式匹配出多个目标，make就会产生所有的模式目标，此时，make关心的是依赖的文件名和生成目标的命令这两件事。\r\n\r\n<strong>13.2</strong><strong>模式规则示例</strong>\r\n\r\n下面这个例子表示了,把所有的[.c]文件都编译成[.o]文件.\r\n\r\n%.o : %.c\r\n\r\n$(CC) -c $(CFLAGS) $(CPPFLAGS) $&lt; -o $@\r\n<h2><a name=\"_Toc451267490\"></a>14．自动生成依赖关系</h2>\r\n在Makefile中，我们的依赖关系可能会需要包含一系列的头文件，比如，如果我们的\r\n\r\nmain.c中有一句“#include \"defs.h\"”，那么我们的依赖关系应该是：\r\n\r\nmain.o : main.c defs.h\r\n\r\n&nbsp;\r\n\r\n于是由编译器自动生成的依赖关系，这样一来，你就不必再手动书写若干文件的依赖\r\n\r\n关系，而由编译器自动生成了。需要提醒一句的是，如果你使用GNU的C/C++编译器，\r\n\r\n你得用“-MM”参数，不然，“-M”参数会把一些标准库的头文件也包含进来。\r\n\r\ngcc -MM main.c的输出则是：\r\n\r\nmain.o: main.c defs.h\r\n\r\n&nbsp;\r\n\r\n接下来我们可以看下这个模式规则的含义了\r\n\r\n%.d: %.c\r\n\r\n@set -e; rm -f $@; \\\r\n\r\n$(CC) -MM $(CPPFLAGS) $&lt; &gt; $@.$$$$; \\\r\n\r\nsed \'s,\\($*\\)\\.o[ :]*,\\1.o $@ : ,g\' &lt; $@.$$$$ &gt; $@; \\\r\n\r\nrm -f $@.$$$$\r\n\r\n&nbsp;\r\n\r\n“rm -f $@”的意思是删除所有的目标，也就是[.d]文件，第二行的意思是，为每个依赖文件“$&lt;”，也就是[.c]文件生成依赖文件，“$@”表示模式“%.d”文件，如果有一个C文件是name.c，那么“%”就是“name”，“$$$$”意为一个随机编号，第二行生成的文件有可能是“name.d.12345”，第三行使用sed命令做了一个替换，关于sed命令的用法请参看相关的使用文档。第四行就是删除临时文件。\r\n\r\n总而言之，这个模式要做的事就是在编译器生成的依赖关系中加入[.d]文件的依赖，即\r\n\r\n把依赖关系：\r\n\r\nmain.o : main.c defs.h\r\n\r\n转成：\r\n\r\nmain.o main.d : main.c defs.h\r\n\r\n于是，我们的[.d]文件也会自动更新了，并会自动生成了。一旦我们完成这个工作，接下来，我们就要把这些自动生成的规则放进我们的主Makefile 中。我们可以使用Makefile 的“include”命令，来引入别的Makefile文件（前面讲过），例如：\r\n\r\nsources = foo.c bar.c\r\n\r\ninclude $(sources:.c=.d)\r\n<h2><a name=\"_Toc451267491\"></a>15．最终版Makefile</h2>\r\n最后，我们为了编译方便，加上制定编译目标，指定源文件目录，制定存放中间件目录等，综合前面的知识，生成最终版的Makefile，相比大家已经可以自己读懂这个Makefile了：\r\n\r\n##################### Makefile ##################\r\n\r\n#编译选项\r\n\r\nCFLAGS += -I./Include\r\n\r\nCFLAGS += -Wall -O -Os -m64\r\n\r\n&nbsp;\r\n\r\n#源文件目录、中间层目录\r\n\r\nsrc_path = Src\r\n\r\nobj_path = obj\r\n\r\n$(shell mkdir -p ${obj_path})\r\n\r\n$(foreach dir,$(src_path),$(shell mkdir -p ${obj_path}/${dir}))\r\n\r\n&nbsp;\r\n\r\n#找出源文件\r\n\r\nsrcfile_c = $(foreach dir,$(src_path),$(wildcard $(dir)/*.c))\r\n\r\nsrcfile_cpp = $(foreach dir,$(src_path),$(wildcard $(dir)/*.cpp))\r\n\r\n&nbsp;\r\n\r\n#依赖中间.o文件\r\n\r\nobject = $(patsubst %.c,${obj_path}/%.o,$(srcfile_c))\r\n\r\nobject += $(patsubst %.cpp,${obj_path}/%.o,$(srcfile_cpp))\r\n\r\n&nbsp;\r\n\r\n#依赖关系文件\r\n\r\nobj_d = $(object:.o=.d)\r\n\r\n&nbsp;\r\n\r\n#目标文件\r\n\r\ntarget = haha\r\n\r\n&nbsp;\r\n\r\n#编译目标\r\n\r\n$(target) : $(object)\r\n\r\n$(CXX) $^ -o $@\r\n\r\n&nbsp;\r\n\r\n#模式规则\r\n\r\n${obj_path}/%.o: %.c\r\n\r\n$(CC) -c $(CFLAGS) $&lt; -o $@\r\n\r\n&nbsp;\r\n\r\n${obj_path}/%.o: %.cpp\r\n\r\n$(CXX) -c $(CFLAGS) $&lt; -o $@\r\n\r\n&nbsp;\r\n\r\n${obj_path}/%.d:%.c\r\n\r\n$(CC) -MM $(CFLAGS) $&lt; &gt; $@\r\n\r\n@sed \'s/.*\\.o/$(subst /,\\/, $(dir $@))&amp;${subst /,\\/, $@}/g\' $@ &gt;$@.tmp\r\n\r\n@mv $@.tmp $@\r\n\r\n&nbsp;\r\n\r\n${obj_path}/%.d:%.cpp\r\n\r\n$(CXX) -MM $(CFLAGS) $&lt; &gt; $@\r\n\r\n@sed \'s/.*\\.o/${subst /,\\/, $(dir $@)}&amp;${subst /,\\/, $@}/g\' $@ &gt;$@.tmp\r\n\r\n@mv $@.tmp $@\r\n\r\n&nbsp;\r\n\r\n#包含依赖关系文件\r\n\r\ninclude $(obj_d)\r\n\r\n&nbsp;\r\n\r\nclean:\r\n\r\nrm -rf $(obj_path) $(target)\r\n\r\n##################### Makefile ##################\r\n<h2><a name=\"_Toc451267492\"></a>16．后记：</h2>\r\n终于完成了一个Makefile的进化史，将这个Makefile稍加改动，已经可以是一个专业的Makefile了。\r\n\r\n本文主要参考了陈皓在csdn发表的跟我一起写 Makefile。包含了主要的Makefile知识。权威的解释还请参考GNU 的Makefile手册。\r\n\r\n时间匆忙，如果错误之处请指出，请联系 <a href=\"mailto:bao_xiaopeng@dahuatech.com。或者662593\">bao_xiaopeng@dahuatech.com。或者662593</a>联系作者。\r\n<h2><a name=\"_Toc451267493\"></a>17．参考文献：</h2>\r\n《跟我一起写 Makefile》------陈皓','一个Makefile的进化','','inherit','closed','closed','','157-revision-v1','','','2018-10-10 07:43:54','2018-10-10 07:43:54','',157,'http://45.77.202.181/?p=158',0,'revision','',0),(160,1,'2018-10-10 07:44:59','2018-10-10 07:44:59','目录\r\n\r\n<a href=\"#_Toc451267476\">一个Makefile的进化... 2</a>\r\n\r\n<a href=\"#_Toc451267477\">1．概述... 2</a>\r\n\r\n<a href=\"#_Toc451267478\">2．环境... 2</a>\r\n\r\n<a href=\"#_Toc451267479\">3．第一版Makefile. 2</a>\r\n\r\n<a href=\"#_Toc451267480\">4．规则的语法... 3</a>\r\n\r\n<a href=\"#_Toc451267481\">5．第二版Makfile. 3</a>\r\n\r\n<a href=\"#_Toc451267482\">6．变量... 4</a>\r\n\r\n<a href=\"#_Toc451267483\">7．第三版Makefile. 5</a>\r\n\r\n<a href=\"#_Toc451267484\">8．隐晦规则... 5</a>\r\n\r\n<a href=\"#_Toc451267485\">9．第四版Makefile. 6</a>\r\n\r\n<a href=\"#_Toc451267486\">10．函数... 6</a>\r\n\r\n<a href=\"#_Toc451267487\">11．自动化变量... 8</a>\r\n\r\n<a href=\"#_Toc451267488\">12．第五版Makefile. 8</a>\r\n\r\n<a href=\"#_Toc451267489\">13．模式规则... 9</a>\r\n\r\n<a href=\"#_Toc451267490\">14．自动生成依赖关系... 10</a>\r\n\r\n<a href=\"#_Toc451267491\">15．最终版Makefile. 10</a>\r\n\r\n<a href=\"#_Toc451267492\">16．后记：... 12</a>\r\n\r\n<a href=\"#_Toc451267493\">17．参考文献：... 12</a>\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n<h2><a name=\"_Toc451267476\"></a>一个Makefile的进化</h2>\r\n软件平台开发部：鲍晓鹏\r\n<h2><a name=\"_Toc451267477\"></a>1．概述</h2>\r\n也许，Windows程序员不需要过多了解Makefile，但作为做为一个Linux程序员，掌握Makefile是一项必备的技能。\r\n\r\n本文从零开始学习Makefile，从一个最简单的Makefile逐渐进化，优化，升级。扩从到一个五脏俱全的小型Makefile。没进化的一次，附带学习相关的知识，使得备有成就感，也利于吸引读者的兴趣。\r\n\r\n本文只关心Makefile，关于编译和链接的用法，包括gcc的相关用法这里也不做赘述。\r\n<h2><a name=\"_Toc451267478\"></a>2．环境</h2>\r\n现有test.c test.h main.c几个文件，我们要写一个Makefile来告诉make命令如何编译和链接这几个文件。我们的要求是：\r\n\r\n1）如果这个工程没有编译过，那么我们的所有C文件都要编译并被链接。\r\n\r\n2）如果这个工程的某几个C文件被修改，那么我们只编译被修改的C文件，并链接目标程序。\r\n\r\n3）如果这个工程的头文件被改变了，那么我们需要编译引用了这几个头文件的C文件，并链接目标程序。\r\n<h2><a name=\"_Toc451267479\"></a>3．第一版Makefile</h2>\r\n根据以上的要求，我们先提供了第一版的Makefile：\r\n\r\n##################### Makefile ##################\r\n\r\ntest : main.o test.o\r\n\r\ngcc main.o test.o -o test\r\n\r\n&nbsp;\r\n\r\nmain.o :\r\n\r\ngcc -c main.c -o main.o\r\n\r\n&nbsp;\r\n\r\ntest.o : test.h\r\n\r\ngcc -c test.c -o test.o\r\n\r\n&nbsp;\r\n\r\nclean:\r\n\r\nrm main.o test.o test\r\n\r\n##############################################\r\n\r\n这里只用的Makefile的知识，那么就来介绍一下Makefile中的规则。\r\n<h2><a name=\"_Toc451267480\"></a>4．规则的语法</h2>\r\ntargets : prerequisites\r\n\r\ncommand\r\n\r\n&nbsp;\r\n\r\ntargets是文件名，以空格分开，可以使用通配符。一般来说，我们的目标基本上是一个文件，但也有可能是多个文件。\r\n\r\ncommand是命令行，必须以[Tab键]开头\r\n\r\nprerequisites也就是目标所依赖的文件（或依赖目标）。如果其中的某个文件要比目标文件要新，那么，目标就被认为是“过时的”，被认为是需要重生成的。\r\n\r\n规则举例\r\n\r\nfoo.o : foo.c defs.h # foo模块\r\n\r\ncc -c -g foo.c\r\n\r\n&nbsp;\r\n\r\n看到这个例子，各位应该不是很陌生了，前面也已说过，foo.o是我们的目标，foo.c和defs.h是目标所依赖的源文件，而只有一个命令“cc -c -g foo.c”（以Tab键开头）。这\r\n\r\n个规则告诉我们两件事：\r\n\r\n1、文件的依赖关系，foo.o依赖于foo.c和defs.h的文件，如果foo.c和defs.h的文件日期要比foo.o文件日期要新，或是foo.o不存在，那么依赖关系发生。\r\n\r\n2、如何生成（或更新）foo.o文件。也就是那个cc命令，其说明了，如何生成foo.o这个文件。（当然foo.c文件include了defs.h文件）\r\n\r\n在第一版的Makefile中，先让我们看看test的规则：\r\n\r\ntest : main.o test.o\r\n\r\ngcc main.o test.o -o test\r\n\r\n&nbsp;\r\n\r\n我们可以看到[.o]文件的字符串被重复了两次，如果我们的工程需要加入一个新的[.o]文件，那么我们需要在两个地方加（应该是三个地方，还有一个地方在clean中）。当然，我们的makefile并不复杂，所以在两个地方加也不累，但如果makefile变得复杂，那么我们就有可能会忘掉一个需要加入的地方，而导致编译失败。所以，为了makefile的易维护，在makefile中我们可以使用变量。makefile的变量也就是一个字符串，理解成C语言中的宏可能会更好。\r\n\r\n比如，我们声明一个变量，叫objects, OBJECTS, objs, OBJS, obj, 或是 OBJ，反正不管什么啦，只要能够表示obj文件就行了。我们在makefile一开始就这样定义：\r\n\r\nobjects = main.o test.o\r\n\r\n&nbsp;\r\n\r\n于是，我们就可以很方便地在我们的makefile中以“$(objects)”的方式来使用这个变量了，于是我们的改良版makefile就变成下面这个样子：\r\n<h2><a name=\"_Toc451267481\"></a>5．第二版Makfile</h2>\r\n##################### Makefile ##################\r\n\r\nobject = main.o test.o\r\n\r\n&nbsp;\r\n\r\ntest : $(object)\r\n\r\ngcc main.o test.o -o test\r\n\r\n&nbsp;\r\n\r\nmain.o :\r\n\r\ngcc -c main.c -o main.o\r\n\r\n&nbsp;\r\n\r\ntest.o : test.h\r\n\r\ngcc -c test.c -o test.o\r\n\r\n&nbsp;\r\n\r\nclean:\r\n\r\nrm $(object) test\r\n\r\n##############################################\r\n\r\n于是如果有新的 .o 文件加入，我们只需简单地修改一下 objects 变量就可以了。既然说到了变量，就来介绍一下变量的知识。\r\n<h2><a name=\"_Toc451267482\"></a>6．变量</h2>\r\n变量的命名字可以包含字符、数字，下划线（可以是数字开头），但不应该含有“:”、“#”、“=”或是空字符（空格、回车等）。变量是大小写敏感的，“foo”、“Foo”和\r\n\r\n“FOO”是三个不同的变量名\r\n\r\n变量在声明时需要给予初值，而在使用时，需要给在变量名前加上“$”符号，但最好用小括号“（）”或是大括号“{}”把变量给包括起来。如果你要使用真实的“$”字符，那么你需要用“$$”来表示。\r\n\r\n变量会在使用它的地方精确地展开，就像C/C++中的宏一样。下面就举例介绍一些变量的用法。\r\n\r\n&nbsp;\r\n\r\n<strong>6.1 </strong><strong>变量中的变量</strong>\r\n\r\nfoo = $(bar)\r\n\r\nbar = $(ugh)\r\n\r\nugh = Huh?\r\n\r\nall:\r\n\r\necho $(foo)\r\n\r\n“make all”将会打出变量$(foo)的值是“Huh?”（ $(foo)的值是$(bar)，$(bar)的值是$(ugh)，$(ugh)的值是“Huh?”）可见，变量是可以使用后面的变量来定义的。\r\n\r\n&nbsp;\r\n\r\n<strong>6.2</strong><strong>递归</strong>\r\nA = $(B)\r\n\r\nB = $(A)\r\n\r\n为了避免上面的这种方法，我们可以使用make中的另一种用变量来定义变量的方法。这种方法使用的是“:=”操作符\r\n\r\ny := $(x) bar\r\n\r\nx := foo\r\n\r\n那么，y的值是“bar”，而不是“foo bar”\r\n\r\n&nbsp;\r\n\r\n<strong>6.3</strong><strong>变量的替换</strong>\r\n\r\nfoo := a.o b.o c.o\r\n\r\nbar := $(foo:.o=.c)\r\n\r\n这个示例中，我们先定义了一个“$(foo)”变量，而第二行的意思是把“$(foo)”中所有以“.o”字串“结尾”全部替换成“.c”，所以我们的“$(bar)”的值就是“a.c b.c c.c”。\r\n\r\n&nbsp;\r\n\r\n<strong>6.4</strong><strong>追加变量值</strong>\r\n\r\n我们可以使用“+=”操作符给变量追加值，如：\r\n\r\nobjects = main.o foo.o bar.o utils.o\r\n\r\nobjects += another.o\r\n\r\n于是，我们的$(objects)值变成：“main.o foo.o bar.o utils.o another.o”（another.o被追加进去了）\r\n<h2><a name=\"_Toc451267483\"></a>7．第三版Makefile</h2>\r\n因为make有自动推导的能力，只要make看到一个[.o]文件，它就会自动的把[.c]文件加在依赖关系中，如果make找到一个whatever.o，那么whatever.c，就会是whatever.o 的依赖文件。并且 cc –c whatever.c 也会被推导出来，于是，我们的makefile再也不用写得这么复杂。我们新的makefile又出炉了。\r\n\r\n##################### Makefile ##################\r\n\r\nobject = main.o test.o\r\n\r\ntest : $(object)\r\n\r\ngcc main.o test.o -o test\r\n\r\nclean:\r\n\r\nrm $(object) test\r\n\r\n##################### Makefile ##################\r\n\r\n这种方法，叫做make的“隐晦规则”。\r\n<h2><a name=\"_Toc451267484\"></a>8．隐晦规则</h2>\r\n在我们使用Makefile时，有一些我们会经常使用，而且使用频率非常高的东西，比如，我们编译C/C++的源程序为中间目标文件（Unix下是[.o]文件，Windows下是[.obj]文件）。本章讲述的就是一些在Makefile中的“隐含的”，早先约定了的，不需要我们再写出来的规则。\r\n\r\n“隐含规则”也就是一种惯例，make会按照这种“惯例”心照不喧地来运行，那怕我们的Makefile中没有书写这样的规则。例如，把[.c]文件编译成[.o]文件这一规则，你根本就不用写出来，make会自动推导出这种规则，并生成我们需要的[.o]文件。\r\n\r\n<strong>8.1 </strong><strong>编译C</strong><strong>程序的隐含规则</strong>\r\n\r\n“&lt;n&gt;.o”的目标的依赖目标会自动推导为“&lt;n&gt;.c”，并且其生成命令是“$(CC) –c\r\n\r\n$(CPPFLAGS) $(CFLAGS)”\r\n\r\n<strong>8.2 </strong><strong>编译C++</strong><strong>程序的隐含规则</strong>\r\n\r\n“&lt;n&gt;.o”的目标的依赖目标会自动推导为“&lt;n&gt;.cc”或是“&lt;n&gt;.C”，并且其生成命令是“$(CXX) –c $(CPPFLAGS) $(CFLAGS)”。（建议使用“.cc”作为C++源文件的后缀，而不是“.C”）\r\n<h2><a name=\"_Toc451267485\"></a>9．第四版Makefile</h2>\r\n假如文件越来越多，每次都要在object中假如一项也会觉得很麻烦，这个时候我们就可以使用函数，自动找到文件夹下的文件。改良版如下：\r\n\r\n##################### Makefile ##################\r\n\r\nsrcfile = $(wildcard ./*.c)\r\n\r\nobject = $(patsubst %.c,%.o,$(srcfile))\r\n\r\n&nbsp;\r\n\r\ntest : $(object)\r\n\r\ngcc $^ -o test\r\n\r\n&nbsp;\r\n\r\nclean:\r\n\r\nrm $(object) test\r\n\r\n##################### Makefile ##################\r\n<h2><a name=\"_Toc451267486\"></a>10．函数</h2>\r\n<strong>10.1</strong><strong>函数的调用语法</strong>\r\n\r\n函数调用，很像变量的使用，也是以“$”来标识的，其语法如下：\r\n\r\n$(&lt;function&gt; &lt;arguments&gt; )\r\n\r\n其中()也可以使用{}大括号\r\n\r\n&nbsp;\r\n\r\n<strong>10.2</strong><strong>字符串处理函数</strong>\r\n\r\n<strong>10.2.1</strong>字符串替换函数——subst\r\n\r\n$(subst &lt;from&gt;,&lt;to&gt;,&lt;text&gt; )\r\n\r\n功能：把字串&lt;text&gt;中的&lt;from&gt;字符串替换成&lt;to&gt;。\r\n\r\n返回：函数返回被替换过后的字符串。\r\n\r\n示例：\r\n\r\n$(subst ee,EE,feet on the street)，\r\n\r\n把“feet on the street”中的“ee”替换成“EE”，返回结果是“fEEt on the strEEt”。\r\n\r\n<strong>10.2.2</strong>模式字符串替换函数——patsubst\r\n\r\n$(patsubst &lt;pattern&gt;,&lt;replacement&gt;,&lt;text&gt; )\r\n\r\n功能：查找&lt;text&gt;中的单词（单词以“空格”、“Tab”或“回车”“换行”分隔）是否符合模式&lt;pattern&gt;，如果匹配的话，则以&lt;replacement&gt;替换。这里，&lt;pattern&gt;可以包括通配符“%”，表示任意长度的字串。\r\n\r\n返回：函数返回被替换过后的字符串。\r\n\r\n示例：\r\n\r\n$(patsubst %.c,%.o,x.c.c bar.c)\r\n\r\n把字串“x.c.c bar.c”符合模式[%.c]的单词替换成[%.o]，返回结果是“x.c.o bar.o”\r\n\r\n<strong>10.2.3</strong>去空格函数——strip\r\n\r\n$(strip &lt;string&gt; )\r\n\r\n功能：去掉&lt;string&gt;字串中开头和结尾的空字符。\r\n\r\n返回：返回被去掉空格的字符串值。\r\n\r\n示例：\r\n\r\n$(strip a b c )\r\n\r\n把字串“a b c ”去到开头和结尾的空格，结果是“a b c”。\r\n\r\n<strong>10.2.4</strong>过滤函数——filter\r\n\r\n$(filter &lt;pattern...&gt;,&lt;text&gt; )\r\n\r\n功能：以&lt;pattern&gt;模式过滤&lt;text&gt;字符串中的单词，保留符合模式&lt;pattern&gt;的单词。可以有多个模式。\r\n\r\n返回：返回符合模式&lt;pattern&gt;的字串。\r\n\r\n示例：\r\n\r\nsources := foo.c bar.c baz.s ugh.h\r\n\r\nfoo: $(sources)\r\n\r\ncc $(filter %.c %.s,$(sources)) -o foo\r\n\r\n$(filter %.c %.s,$(sources))返回的值是“foo.c bar.c baz.s”。\r\n\r\n<strong>10.2.5</strong>排序函数——sort\r\n\r\n$(sort &lt;list&gt; )\r\n\r\n功能：给字符串&lt;list&gt;中的单词排序（升序）。\r\n\r\n返回：返回排序后的字符串。\r\n\r\n示例：$(sort foo bar lose)返回“bar foo lose” 。\r\n\r\n备注：sort函数会去掉&lt;list&gt;中相同的单词。\r\n\r\n&nbsp;\r\n\r\n<strong>10.3</strong><strong>文件名操作函数</strong>\r\n\r\n下面我们要介绍的函数主要是处理文件名的。每个函数的参数字符串都会被当做一个或是一系列的文件名来对待。\r\n\r\n<strong>10.3.1</strong>取目录函数——dir\r\n\r\n$(dir &lt;names...&gt; )\r\n\r\n功能：从文件名序列&lt;names&gt;中取出目录部分。目录部分是指最后一个反斜杠（“/”）之前的部分。如果没有反斜杠，那么返回“./”。\r\n\r\n返回：返回文件名序列&lt;names&gt;的目录部分。\r\n\r\n示例： $(dir src/foo.c hacks)返回值是“src/ ./”。\r\n\r\n<strong>10.3.2</strong>取文件函数——notdir\r\n\r\n$(notdir &lt;names...&gt; )\r\n\r\n功能：从文件名序列&lt;names&gt;中取出非目录部分。非目录部分是指最后一个反斜杠（“/”）之后的部分。\r\n\r\n返回：返回文件名序列&lt;names&gt;的非目录部分。\r\n\r\n示例： $(notdir src/foo.c hacks)返回值是“foo.c hacks”。\r\n\r\n<strong>10.3.3</strong>取后缀函数——suffix\r\n\r\n$(suffix &lt;names...&gt; )\r\n\r\n功能：从文件名序列&lt;names&gt;中取出各个文件名的后缀。\r\n\r\n返回：返回文件名序列&lt;names&gt;的后缀序列，如果文件没有后缀，则返回空字串。\r\n\r\n示例：$(suffix src/foo.c src-1.0/bar.c hacks)返回值是“.c .c”。\r\n\r\n<strong>10.4 foreach </strong><strong>函数</strong>\r\n\r\nforeach函数和别的函数非常的不一样。因为这个函数是用来做循环用的，它的语法是：\r\n\r\n$(foreach &lt;var&gt;,&lt;list&gt;,&lt;text&gt; )\r\n\r\n这个函数的意思是，把参数&lt;list&gt;中的单词逐一取出放到参数&lt;var&gt;所指定的变量中，然后再执行&lt;text&gt;所包含的表达式。每一次&lt;text&gt;会返回一个字符串，循环过程中，&lt;text&gt;的所返回的每个字符串会以空格分隔，最后当整个循环结束时，&lt;text&gt;所返回的每个字符串所组成的整个字符串（以空格分隔）将会是foreach函数的返回值。所以，&lt;var&gt;最好是一个变量名，&lt;list&gt;可以是一个表达式，而&lt;text&gt;中一般会使用&lt;var&gt;这个参数来依次枚举&lt;list&gt;中的单词。\r\n\r\n举个例子：\r\n\r\nnames := a b c d\r\n\r\nfiles := $(foreach n,$(names),$(n).o)\r\n\r\n上面的例子中，$(name)中的单词会被挨个取出，并存到变量“n”中，“$(n).o”每次根据“$(n)”计算出一个值，这些值以空格分隔，最后作为foreach函数的返回，所以\r\n\r\n$(files)的值是“a.o b.o c.o d.o”。\r\n\r\n注意，foreach 中的&lt;var&gt;参数是一个临时的局部变量，foreach 函数执行完后，参数&lt;var&gt;的变量将不在作用，其作用域只在foreach函数当中。\r\n<h2><a name=\"_Toc451267487\"></a>11．自动化变量</h2>\r\n第四版的Makefile中还使用到了自动化变量。很多时候目标和依赖文件都是一系例的文件，那么我们如何书写一个命令来完成从不同的依赖文件生成相应的目标？因为在每一次的对模式规则的解析时，都会是不同的目标和依赖文件。\r\n\r\n自动化变量就是完成这个功能的。所谓自动化变量，就是这种变量会把模式中所定义的一系列的文件自动地挨个取出，直至所有的符合模式的文件都取完了。这种自动化变量只应出现在规则的命令中。下面是3个常用的自动化变量及其说明：\r\n\r\n$@\r\n\r\n表示规则中的目标文件集。在模式规则中，如果有多个目标，那么，\"$@\"就是匹配于目标中模式定义的集合。\r\n\r\n$&lt;\r\n\r\n依赖目标中的第一个目标名字。如果依赖目标是以模式（即\"%\"）定义的，那么\"$&lt;\"将是符合模式的一系列的文件集。注意，其是一个一个取出来的。\r\n\r\n$^\r\n\r\n所有的依赖目标的集合。以空格分隔。如果在依赖目标中有多个重复的，那么这个变量\r\n\r\n会去除重复的依赖目标，只保留一份。\r\n<h2><a name=\"_Toc451267488\"></a>12．第五版Makefile</h2>\r\n在滴四版中，由于使用隐晦规则，我们丢掉了对.h文件的依赖关系。但是，有时一个庞大的工程，头文件有过修改，却要让整个工程重新编译，这个时间是比较长的。原则上我们只有让依赖修改过的头文件重新编译即可，那么有什么办法呢。能建立依赖关系的Makefile又出炉了：\r\n\r\n##################### Makefile ##################\r\n\r\nsrcfile = $(wildcard ./*.c)\r\n\r\nobject = $(patsubst %.c,%.o,$(srcfile))\r\n\r\nobj_d = $(patsubst %.c,%.d,$(srcfile))\r\n\r\n&nbsp;\r\n\r\ntest : $(object)\r\n\r\ngcc $^ -o test\r\n\r\n&nbsp;\r\n\r\n%.d: %.c\r\n\r\n@set -e; rm -f $@; \\\r\n\r\n$(CC) -MM $(CPPFLAGS) $&lt; &gt; $@.$$$$; \\\r\n\r\nsed \'s,\\($*\\)\\.o[ :]*,\\1.o $@ : ,g\' &lt; $@.$$$$ &gt; $@; \\\r\n\r\nrm -f $@.$$$$\r\n\r\n&nbsp;\r\n\r\ninclude $(obj_d)\r\n\r\n&nbsp;\r\n\r\nclean:\r\n\r\nrm $(object) $(obj_d) test\r\n\r\n##################### Makefile ##################\r\n<h2><a name=\"_Toc451267489\"></a>13．模式规则</h2>\r\n要看懂这个Makefile，我们要知道什么模式规则。你可以使用模式规则来定义一个隐含规则。一个模式规则就好像一个一般的规则，只是在规则中，目标的定义需要有\"%\"字符。\"%\"的意思是表示一个或多个任意字符。在依赖目标中同样可以使用\"%\"，只是依赖目标中的\"%\"的取值，取决于其目标。\r\n\r\n有一点需要注意的是，\"%\"的展开发生在变量和函数的展开之后，变量和函数的展开发生在make载入Makefile时，而模式规则中的\"%\"则发生在运行时。\r\n\r\n<strong>13.1</strong><strong>模式规则介绍</strong>\r\n\r\n模式规则中，至少在规则的目标定义中要包含\"%\"，否则，就是一般的规则。目标中的\"%\"定义表示对文件名的匹配，\"%\"表示长度任意的非空字符串。例如：\"%.c\"表示以\".c\"结尾的文件名（文件名的长度至少为3），而\"s.%.c\"则表示以\"s.\"开头，\".c\"结尾的文件名（文件名的长度至少为5）。\r\n\r\n如果\"%\"定义在目标中，那么，目标中的\"%\"的值决定了依赖目标中的\"%\"的值，也就是说，目标中的模式的\"%\"决定了依赖目标中\"%\"的样子。例如有一个模式规则如下：\r\n\r\n%.o : %.c ;\r\n\r\n&lt;command ......&gt;\r\n\r\n其含义是，指出了怎么从所有的[.c]文件生成相应的[.o]文件的规则。如果要生成的目标是\"a.o b.o\"，那么\"%c\"就是\"a.c b.c\"。一旦依赖目标中的\"%\"模式被确定，那么，make会被要求去匹配当前目录下所有的文件名，一旦找到，make就会规则下的命令，所以，在模式规则中，目标可能会是多个的，如果有模式匹配出多个目标，make就会产生所有的模式目标，此时，make关心的是依赖的文件名和生成目标的命令这两件事。\r\n\r\n<strong>13.2</strong><strong>模式规则示例</strong>\r\n\r\n下面这个例子表示了,把所有的[.c]文件都编译成[.o]文件.\r\n\r\n%.o : %.c\r\n\r\n$(CC) -c $(CFLAGS) $(CPPFLAGS) $&lt; -o $@\r\n<h2><a name=\"_Toc451267490\"></a>14．自动生成依赖关系</h2>\r\n在Makefile中，我们的依赖关系可能会需要包含一系列的头文件，比如，如果我们的\r\n\r\nmain.c中有一句“#include \"defs.h\"”，那么我们的依赖关系应该是：\r\n\r\nmain.o : main.c defs.h\r\n\r\n&nbsp;\r\n\r\n于是由编译器自动生成的依赖关系，这样一来，你就不必再手动书写若干文件的依赖\r\n\r\n关系，而由编译器自动生成了。需要提醒一句的是，如果你使用GNU的C/C++编译器，\r\n\r\n你得用“-MM”参数，不然，“-M”参数会把一些标准库的头文件也包含进来。\r\n\r\ngcc -MM main.c的输出则是：\r\n\r\nmain.o: main.c defs.h\r\n\r\n&nbsp;\r\n\r\n接下来我们可以看下这个模式规则的含义了\r\n\r\n%.d: %.c\r\n\r\n@set -e; rm -f $@; \\\r\n\r\n$(CC) -MM $(CPPFLAGS) $&lt; &gt; $@.$$$$; \\\r\n\r\nsed \'s,\\($*\\)\\.o[ :]*,\\1.o $@ : ,g\' &lt; $@.$$$$ &gt; $@; \\\r\n\r\nrm -f $@.$$$$\r\n\r\n&nbsp;\r\n\r\n“rm -f $@”的意思是删除所有的目标，也就是[.d]文件，第二行的意思是，为每个依赖文件“$&lt;”，也就是[.c]文件生成依赖文件，“$@”表示模式“%.d”文件，如果有一个C文件是name.c，那么“%”就是“name”，“$$$$”意为一个随机编号，第二行生成的文件有可能是“name.d.12345”，第三行使用sed命令做了一个替换，关于sed命令的用法请参看相关的使用文档。第四行就是删除临时文件。\r\n\r\n总而言之，这个模式要做的事就是在编译器生成的依赖关系中加入[.d]文件的依赖，即\r\n\r\n把依赖关系：\r\n\r\nmain.o : main.c defs.h\r\n\r\n转成：\r\n\r\nmain.o main.d : main.c defs.h\r\n\r\n于是，我们的[.d]文件也会自动更新了，并会自动生成了。一旦我们完成这个工作，接下来，我们就要把这些自动生成的规则放进我们的主Makefile 中。我们可以使用Makefile 的“include”命令，来引入别的Makefile文件（前面讲过），例如：\r\n\r\nsources = foo.c bar.c\r\n\r\ninclude $(sources:.c=.d)\r\n<h2><a name=\"_Toc451267491\"></a>15．最终版Makefile</h2>\r\n最后，我们为了编译方便，加上制定编译目标，指定源文件目录，制定存放中间件目录等，综合前面的知识，生成最终版的Makefile，相比大家已经可以自己读懂这个Makefile了：\r\n\r\n##################### Makefile ##################\r\n\r\n#编译选项\r\n\r\nCFLAGS += -I./Include\r\n\r\nCFLAGS += -Wall -O -Os -m64\r\n\r\n&nbsp;\r\n\r\n#源文件目录、中间层目录\r\n\r\nsrc_path = Src\r\n\r\nobj_path = obj\r\n\r\n$(shell mkdir -p ${obj_path})\r\n\r\n$(foreach dir,$(src_path),$(shell mkdir -p ${obj_path}/${dir}))\r\n\r\n&nbsp;\r\n\r\n#找出源文件\r\n\r\nsrcfile_c = $(foreach dir,$(src_path),$(wildcard $(dir)/*.c))\r\n\r\nsrcfile_cpp = $(foreach dir,$(src_path),$(wildcard $(dir)/*.cpp))\r\n\r\n&nbsp;\r\n\r\n#依赖中间.o文件\r\n\r\nobject = $(patsubst %.c,${obj_path}/%.o,$(srcfile_c))\r\n\r\nobject += $(patsubst %.cpp,${obj_path}/%.o,$(srcfile_cpp))\r\n\r\n&nbsp;\r\n\r\n#依赖关系文件\r\n\r\nobj_d = $(object:.o=.d)\r\n\r\n&nbsp;\r\n\r\n#目标文件\r\n\r\ntarget = haha\r\n\r\n&nbsp;\r\n\r\n#编译目标\r\n\r\n$(target) : $(object)\r\n\r\n$(CXX) $^ -o $@\r\n\r\n&nbsp;\r\n\r\n#模式规则\r\n\r\n${obj_path}/%.o: %.c\r\n\r\n$(CC) -c $(CFLAGS) $&lt; -o $@\r\n\r\n&nbsp;\r\n\r\n${obj_path}/%.o: %.cpp\r\n\r\n$(CXX) -c $(CFLAGS) $&lt; -o $@\r\n\r\n&nbsp;\r\n\r\n${obj_path}/%.d:%.c\r\n\r\n$(CC) -MM $(CFLAGS) $&lt; &gt; $@\r\n\r\n@sed \'s/.*\\.o/$(subst /,\\/, $(dir $@))&amp;${subst /,\\/, $@}/g\' $@ &gt;$@.tmp\r\n\r\n@mv $@.tmp $@\r\n\r\n&nbsp;\r\n\r\n${obj_path}/%.d:%.cpp\r\n\r\n$(CXX) -MM $(CFLAGS) $&lt; &gt; $@\r\n\r\n@sed \'s/.*\\.o/${subst /,\\/, $(dir $@)}&amp;${subst /,\\/, $@}/g\' $@ &gt;$@.tmp\r\n\r\n@mv $@.tmp $@\r\n\r\n&nbsp;\r\n\r\n#包含依赖关系文件\r\n\r\ninclude $(obj_d)\r\n\r\n&nbsp;\r\n\r\nclean:\r\n\r\nrm -rf $(obj_path) $(target)\r\n\r\n##################### Makefile ##################\r\n<h2><a name=\"_Toc451267492\"></a>16．后记：</h2>\r\n终于完成了一个Makefile的进化史，将这个Makefile稍加改动，已经可以是一个专业的Makefile了。\r\n\r\n本文主要参考了陈皓在csdn发表的跟我一起写 Makefile。包含了主要的Makefile知识。权威的解释还请参考GNU 的Makefile手册。\r\n\r\n时间匆忙，如果错误之处请指出，请联系 <a href=\"mailto:bao_xiaopeng@dahuatech.com。或者662593\">bao_xiaopeng@dahuatech.com。或者662593</a>联系作者。\r\n<h2><a name=\"_Toc451267493\"></a>17．参考文献：</h2>\r\n《跟我一起写 Makefile》------陈皓','一个Makefile的进化','','inherit','closed','closed','','157-revision-v1','','','2018-10-10 07:44:59','2018-10-10 07:44:59','',157,'http://45.77.202.181/?p=160',0,'revision','',0),(161,1,'2018-10-10 07:45:07','2018-10-10 07:45:07','目录\r\n\r\n<a href=\"#_Toc451267476\">一个Makefile的进化... 2</a>\r\n\r\n<a href=\"#_Toc451267477\">1．概述... 2</a>\r\n\r\n<a href=\"#_Toc451267478\">2．环境... 2</a>\r\n\r\n<a href=\"#_Toc451267479\">3．第一版Makefile. 2</a>\r\n\r\n<a href=\"#_Toc451267480\">4．规则的语法... 3</a>\r\n\r\n<a href=\"#_Toc451267481\">5．第二版Makfile. 3</a>\r\n\r\n<a href=\"#_Toc451267482\">6．变量... 4</a>\r\n\r\n<a href=\"#_Toc451267483\">7．第三版Makefile. 5</a>\r\n\r\n<a href=\"#_Toc451267484\">8．隐晦规则... 5</a>\r\n\r\n<a href=\"#_Toc451267485\">9．第四版Makefile. 6</a>\r\n\r\n<a href=\"#_Toc451267486\">10．函数... 6</a>\r\n\r\n<a href=\"#_Toc451267487\">11．自动化变量... 8</a>\r\n\r\n<a href=\"#_Toc451267488\">12．第五版Makefile. 8</a>\r\n\r\n<a href=\"#_Toc451267489\">13．模式规则... 9</a>\r\n\r\n<a href=\"#_Toc451267490\">14．自动生成依赖关系... 10</a>\r\n\r\n<a href=\"#_Toc451267491\">15．最终版Makefile. 10</a>\r\n\r\n<a href=\"#_Toc451267492\">16．后记：... 12</a>\r\n\r\n<a href=\"#_Toc451267493\">17．参考文献：... 12</a>\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n<h2><a name=\"_Toc451267476\"></a>一个Makefile的进化</h2>\r\n软件平台开发部：鲍晓鹏\r\n<h2><a name=\"_Toc451267477\"></a>1．概述</h2>\r\n也许，Windows程序员不需要过多了解Makefile，但作为做为一个Linux程序员，掌握Makefile是一项必备的技能。\r\n\r\n本文从零开始学习Makefile，从一个最简单的Makefile逐渐进化，优化，升级。扩从到一个五脏俱全的小型Makefile。没进化的一次，附带学习相关的知识，使得备有成就感，也利于吸引读者的兴趣。\r\n\r\n本文只关心Makefile，关于编译和链接的用法，包括gcc的相关用法这里也不做赘述。\r\n<h2><a name=\"_Toc451267478\"></a>2．环境</h2>\r\n现有test.c test.h main.c几个文件，我们要写一个Makefile来告诉make命令如何编译和链接这几个文件。我们的要求是：\r\n\r\n1）如果这个工程没有编译过，那么我们的所有C文件都要编译并被链接。\r\n\r\n2）如果这个工程的某几个C文件被修改，那么我们只编译被修改的C文件，并链接目标程序。\r\n\r\n3）如果这个工程的头文件被改变了，那么我们需要编译引用了这几个头文件的C文件，并链接目标程序。\r\n<h2><a name=\"_Toc451267479\"></a>3．第一版Makefile</h2>\r\n根据以上的要求，我们先提供了第一版的Makefile：\r\n\r\n##################### Makefile ##################\r\n\r\ntest : main.o test.o\r\n\r\ngcc main.o test.o -o test\r\n\r\n&nbsp;\r\n\r\nmain.o :\r\n\r\ngcc -c main.c -o main.o\r\n\r\n&nbsp;\r\n\r\ntest.o : test.h\r\n\r\ngcc -c test.c -o test.o\r\n\r\n&nbsp;\r\n\r\nclean:\r\n\r\nrm main.o test.o test\r\n\r\n##############################################\r\n\r\n这里只用的Makefile的知识，那么就来介绍一下Makefile中的规则。\r\n<h2><a name=\"_Toc451267480\"></a>4．规则的语法</h2>\r\ntargets : prerequisites\r\n\r\ncommand\r\n\r\n&nbsp;\r\n\r\ntargets是文件名，以空格分开，可以使用通配符。一般来说，我们的目标基本上是一个文件，但也有可能是多个文件。\r\n\r\ncommand是命令行，必须以[Tab键]开头\r\n\r\nprerequisites也就是目标所依赖的文件（或依赖目标）。如果其中的某个文件要比目标文件要新，那么，目标就被认为是“过时的”，被认为是需要重生成的。\r\n\r\n规则举例\r\n\r\nfoo.o : foo.c defs.h # foo模块\r\n\r\ncc -c -g foo.c\r\n\r\n&nbsp;\r\n\r\n看到这个例子，各位应该不是很陌生了，前面也已说过，foo.o是我们的目标，foo.c和defs.h是目标所依赖的源文件，而只有一个命令“cc -c -g foo.c”（以Tab键开头）。这\r\n\r\n个规则告诉我们两件事：\r\n\r\n1、文件的依赖关系，foo.o依赖于foo.c和defs.h的文件，如果foo.c和defs.h的文件日期要比foo.o文件日期要新，或是foo.o不存在，那么依赖关系发生。\r\n\r\n2、如何生成（或更新）foo.o文件。也就是那个cc命令，其说明了，如何生成foo.o这个文件。（当然foo.c文件include了defs.h文件）\r\n\r\n在第一版的Makefile中，先让我们看看test的规则：\r\n\r\ntest : main.o test.o\r\n\r\ngcc main.o test.o -o test\r\n\r\n&nbsp;\r\n\r\n我们可以看到[.o]文件的字符串被重复了两次，如果我们的工程需要加入一个新的[.o]文件，那么我们需要在两个地方加（应该是三个地方，还有一个地方在clean中）。当然，我们的makefile并不复杂，所以在两个地方加也不累，但如果makefile变得复杂，那么我们就有可能会忘掉一个需要加入的地方，而导致编译失败。所以，为了makefile的易维护，在makefile中我们可以使用变量。makefile的变量也就是一个字符串，理解成C语言中的宏可能会更好。\r\n\r\n比如，我们声明一个变量，叫objects, OBJECTS, objs, OBJS, obj, 或是 OBJ，反正不管什么啦，只要能够表示obj文件就行了。我们在makefile一开始就这样定义：\r\n\r\nobjects = main.o test.o\r\n\r\n&nbsp;\r\n\r\n于是，我们就可以很方便地在我们的makefile中以“$(objects)”的方式来使用这个变量了，于是我们的改良版makefile就变成下面这个样子：\r\n<h2><a name=\"_Toc451267481\"></a>5．第二版Makfile</h2>\r\n##################### Makefile ##################\r\n\r\nobject = main.o test.o\r\n\r\n&nbsp;\r\n\r\ntest : $(object)\r\n\r\ngcc main.o test.o -o test\r\n\r\n&nbsp;\r\n\r\nmain.o :\r\n\r\ngcc -c main.c -o main.o\r\n\r\n&nbsp;\r\n\r\ntest.o : test.h\r\n\r\ngcc -c test.c -o test.o\r\n\r\n&nbsp;\r\n\r\nclean:\r\n\r\nrm $(object) test\r\n\r\n##############################################\r\n\r\n于是如果有新的 .o 文件加入，我们只需简单地修改一下 objects 变量就可以了。既然说到了变量，就来介绍一下变量的知识。\r\n<h2><a name=\"_Toc451267482\"></a>6．变量</h2>\r\n变量的命名字可以包含字符、数字，下划线（可以是数字开头），但不应该含有“:”、“#”、“=”或是空字符（空格、回车等）。变量是大小写敏感的，“foo”、“Foo”和\r\n\r\n“FOO”是三个不同的变量名\r\n\r\n变量在声明时需要给予初值，而在使用时，需要给在变量名前加上“$”符号，但最好用小括号“（）”或是大括号“{}”把变量给包括起来。如果你要使用真实的“$”字符，那么你需要用“$$”来表示。\r\n\r\n变量会在使用它的地方精确地展开，就像C/C++中的宏一样。下面就举例介绍一些变量的用法。\r\n\r\n&nbsp;\r\n\r\n<strong>6.1 </strong><strong>变量中的变量</strong>\r\n\r\nfoo = $(bar)\r\n\r\nbar = $(ugh)\r\n\r\nugh = Huh?\r\n\r\nall:\r\n\r\necho $(foo)\r\n\r\n“make all”将会打出变量$(foo)的值是“Huh?”（ $(foo)的值是$(bar)，$(bar)的值是$(ugh)，$(ugh)的值是“Huh?”）可见，变量是可以使用后面的变量来定义的。\r\n\r\n&nbsp;\r\n\r\n<strong>6.2</strong><strong>递归</strong>\r\nA = $(B)\r\n\r\nB = $(A)\r\n\r\n为了避免上面的这种方法，我们可以使用make中的另一种用变量来定义变量的方法。这种方法使用的是“:=”操作符\r\n\r\ny := $(x) bar\r\n\r\nx := foo\r\n\r\n那么，y的值是“bar”，而不是“foo bar”\r\n\r\n&nbsp;\r\n\r\n<strong>6.3</strong><strong>变量的替换</strong>\r\n\r\nfoo := a.o b.o c.o\r\n\r\nbar := $(foo:.o=.c)\r\n\r\n这个示例中，我们先定义了一个“$(foo)”变量，而第二行的意思是把“$(foo)”中所有以“.o”字串“结尾”全部替换成“.c”，所以我们的“$(bar)”的值就是“a.c b.c c.c”。\r\n\r\n&nbsp;\r\n\r\n<strong>6.4</strong><strong>追加变量值</strong>\r\n\r\n我们可以使用“+=”操作符给变量追加值，如：\r\n\r\nobjects = main.o foo.o bar.o utils.o\r\n\r\nobjects += another.o\r\n\r\n于是，我们的$(objects)值变成：“main.o foo.o bar.o utils.o another.o”（another.o被追加进去了）\r\n<h2><a name=\"_Toc451267483\"></a>7．第三版Makefile</h2>\r\n因为make有自动推导的能力，只要make看到一个[.o]文件，它就会自动的把[.c]文件加在依赖关系中，如果make找到一个whatever.o，那么whatever.c，就会是whatever.o 的依赖文件。并且 cc –c whatever.c 也会被推导出来，于是，我们的makefile再也不用写得这么复杂。我们新的makefile又出炉了。\r\n\r\n##################### Makefile ##################\r\n\r\nobject = main.o test.o\r\n\r\ntest : $(object)\r\n\r\ngcc main.o test.o -o test\r\n\r\nclean:\r\n\r\nrm $(object) test\r\n\r\n##################### Makefile ##################\r\n\r\n这种方法，叫做make的“隐晦规则”。\r\n<h2><a name=\"_Toc451267484\"></a>8．隐晦规则</h2>\r\n在我们使用Makefile时，有一些我们会经常使用，而且使用频率非常高的东西，比如，我们编译C/C++的源程序为中间目标文件（Unix下是[.o]文件，Windows下是[.obj]文件）。本章讲述的就是一些在Makefile中的“隐含的”，早先约定了的，不需要我们再写出来的规则。\r\n\r\n“隐含规则”也就是一种惯例，make会按照这种“惯例”心照不喧地来运行，那怕我们的Makefile中没有书写这样的规则。例如，把[.c]文件编译成[.o]文件这一规则，你根本就不用写出来，make会自动推导出这种规则，并生成我们需要的[.o]文件。\r\n\r\n<strong>8.1 </strong><strong>编译C</strong><strong>程序的隐含规则</strong>\r\n\r\n“&lt;n&gt;.o”的目标的依赖目标会自动推导为“&lt;n&gt;.c”，并且其生成命令是“$(CC) –c\r\n\r\n$(CPPFLAGS) $(CFLAGS)”\r\n\r\n<strong>8.2 </strong><strong>编译C++</strong><strong>程序的隐含规则</strong>\r\n\r\n“&lt;n&gt;.o”的目标的依赖目标会自动推导为“&lt;n&gt;.cc”或是“&lt;n&gt;.C”，并且其生成命令是“$(CXX) –c $(CPPFLAGS) $(CFLAGS)”。（建议使用“.cc”作为C++源文件的后缀，而不是“.C”）\r\n<h2><a name=\"_Toc451267485\"></a>9．第四版Makefile</h2>\r\n假如文件越来越多，每次都要在object中假如一项也会觉得很麻烦，这个时候我们就可以使用函数，自动找到文件夹下的文件。改良版如下：\r\n\r\n##################### Makefile ##################\r\n\r\nsrcfile = $(wildcard ./*.c)\r\n\r\nobject = $(patsubst %.c,%.o,$(srcfile))\r\n\r\n&nbsp;\r\n\r\ntest : $(object)\r\n\r\ngcc $^ -o test\r\n\r\n&nbsp;\r\n\r\nclean:\r\n\r\nrm $(object) test\r\n\r\n##################### Makefile ##################\r\n<h2><a name=\"_Toc451267486\"></a>10．函数</h2>\r\n<strong>10.1</strong><strong>函数的调用语法</strong>\r\n\r\n函数调用，很像变量的使用，也是以“$”来标识的，其语法如下：\r\n\r\n$(&lt;function&gt; &lt;arguments&gt; )\r\n\r\n其中()也可以使用{}大括号\r\n\r\n&nbsp;\r\n\r\n<strong>10.2</strong><strong>字符串处理函数</strong>\r\n\r\n<strong>10.2.1</strong>字符串替换函数——subst\r\n\r\n$(subst &lt;from&gt;,&lt;to&gt;,&lt;text&gt; )\r\n\r\n功能：把字串&lt;text&gt;中的&lt;from&gt;字符串替换成&lt;to&gt;。\r\n\r\n返回：函数返回被替换过后的字符串。\r\n\r\n示例：\r\n\r\n$(subst ee,EE,feet on the street)，\r\n\r\n把“feet on the street”中的“ee”替换成“EE”，返回结果是“fEEt on the strEEt”。\r\n\r\n<strong>10.2.2</strong>模式字符串替换函数——patsubst\r\n\r\n$(patsubst &lt;pattern&gt;,&lt;replacement&gt;,&lt;text&gt; )\r\n\r\n功能：查找&lt;text&gt;中的单词（单词以“空格”、“Tab”或“回车”“换行”分隔）是否符合模式&lt;pattern&gt;，如果匹配的话，则以&lt;replacement&gt;替换。这里，&lt;pattern&gt;可以包括通配符“%”，表示任意长度的字串。\r\n\r\n返回：函数返回被替换过后的字符串。\r\n\r\n示例：\r\n\r\n$(patsubst %.c,%.o,x.c.c bar.c)\r\n\r\n把字串“x.c.c bar.c”符合模式[%.c]的单词替换成[%.o]，返回结果是“x.c.o bar.o”\r\n\r\n<strong>10.2.3</strong>去空格函数——strip\r\n\r\n$(strip &lt;string&gt; )\r\n\r\n功能：去掉&lt;string&gt;字串中开头和结尾的空字符。\r\n\r\n返回：返回被去掉空格的字符串值。\r\n\r\n示例：\r\n\r\n$(strip a b c )\r\n\r\n把字串“a b c ”去到开头和结尾的空格，结果是“a b c”。\r\n\r\n<strong>10.2.4</strong>过滤函数——filter\r\n\r\n$(filter &lt;pattern...&gt;,&lt;text&gt; )\r\n\r\n功能：以&lt;pattern&gt;模式过滤&lt;text&gt;字符串中的单词，保留符合模式&lt;pattern&gt;的单词。可以有多个模式。\r\n\r\n返回：返回符合模式&lt;pattern&gt;的字串。\r\n\r\n示例：\r\n\r\nsources := foo.c bar.c baz.s ugh.h\r\n\r\nfoo: $(sources)\r\n\r\ncc $(filter %.c %.s,$(sources)) -o foo\r\n\r\n$(filter %.c %.s,$(sources))返回的值是“foo.c bar.c baz.s”。\r\n\r\n<strong>10.2.5</strong>排序函数——sort\r\n\r\n$(sort &lt;list&gt; )\r\n\r\n功能：给字符串&lt;list&gt;中的单词排序（升序）。\r\n\r\n返回：返回排序后的字符串。\r\n\r\n示例：$(sort foo bar lose)返回“bar foo lose” 。\r\n\r\n备注：sort函数会去掉&lt;list&gt;中相同的单词。\r\n\r\n&nbsp;\r\n\r\n<strong>10.3</strong><strong>文件名操作函数</strong>\r\n\r\n下面我们要介绍的函数主要是处理文件名的。每个函数的参数字符串都会被当做一个或是一系列的文件名来对待。\r\n\r\n<strong>10.3.1</strong>取目录函数——dir\r\n\r\n$(dir &lt;names...&gt; )\r\n\r\n功能：从文件名序列&lt;names&gt;中取出目录部分。目录部分是指最后一个反斜杠（“/”）之前的部分。如果没有反斜杠，那么返回“./”。\r\n\r\n返回：返回文件名序列&lt;names&gt;的目录部分。\r\n\r\n示例： $(dir src/foo.c hacks)返回值是“src/ ./”。\r\n\r\n<strong>10.3.2</strong>取文件函数——notdir\r\n\r\n$(notdir &lt;names...&gt; )\r\n\r\n功能：从文件名序列&lt;names&gt;中取出非目录部分。非目录部分是指最后一个反斜杠（“/”）之后的部分。\r\n\r\n返回：返回文件名序列&lt;names&gt;的非目录部分。\r\n\r\n示例： $(notdir src/foo.c hacks)返回值是“foo.c hacks”。\r\n\r\n<strong>10.3.3</strong>取后缀函数——suffix\r\n\r\n$(suffix &lt;names...&gt; )\r\n\r\n功能：从文件名序列&lt;names&gt;中取出各个文件名的后缀。\r\n\r\n返回：返回文件名序列&lt;names&gt;的后缀序列，如果文件没有后缀，则返回空字串。\r\n\r\n示例：$(suffix src/foo.c src-1.0/bar.c hacks)返回值是“.c .c”。\r\n\r\n<strong>10.4 foreach </strong><strong>函数</strong>\r\n\r\nforeach函数和别的函数非常的不一样。因为这个函数是用来做循环用的，它的语法是：\r\n\r\n$(foreach &lt;var&gt;,&lt;list&gt;,&lt;text&gt; )\r\n\r\n这个函数的意思是，把参数&lt;list&gt;中的单词逐一取出放到参数&lt;var&gt;所指定的变量中，然后再执行&lt;text&gt;所包含的表达式。每一次&lt;text&gt;会返回一个字符串，循环过程中，&lt;text&gt;的所返回的每个字符串会以空格分隔，最后当整个循环结束时，&lt;text&gt;所返回的每个字符串所组成的整个字符串（以空格分隔）将会是foreach函数的返回值。所以，&lt;var&gt;最好是一个变量名，&lt;list&gt;可以是一个表达式，而&lt;text&gt;中一般会使用&lt;var&gt;这个参数来依次枚举&lt;list&gt;中的单词。\r\n\r\n举个例子：\r\n\r\nnames := a b c d\r\n\r\nfiles := $(foreach n,$(names),$(n).o)\r\n\r\n上面的例子中，$(name)中的单词会被挨个取出，并存到变量“n”中，“$(n).o”每次根据“$(n)”计算出一个值，这些值以空格分隔，最后作为foreach函数的返回，所以\r\n\r\n$(files)的值是“a.o b.o c.o d.o”。\r\n\r\n注意，foreach 中的&lt;var&gt;参数是一个临时的局部变量，foreach 函数执行完后，参数&lt;var&gt;的变量将不在作用，其作用域只在foreach函数当中。\r\n<h2><a name=\"_Toc451267487\"></a>11．自动化变量</h2>\r\n第四版的Makefile中还使用到了自动化变量。很多时候目标和依赖文件都是一系例的文件，那么我们如何书写一个命令来完成从不同的依赖文件生成相应的目标？因为在每一次的对模式规则的解析时，都会是不同的目标和依赖文件。\r\n\r\n自动化变量就是完成这个功能的。所谓自动化变量，就是这种变量会把模式中所定义的一系列的文件自动地挨个取出，直至所有的符合模式的文件都取完了。这种自动化变量只应出现在规则的命令中。下面是3个常用的自动化变量及其说明：\r\n\r\n$@\r\n\r\n表示规则中的目标文件集。在模式规则中，如果有多个目标，那么，\"$@\"就是匹配于目标中模式定义的集合。\r\n\r\n$&lt;\r\n\r\n依赖目标中的第一个目标名字。如果依赖目标是以模式（即\"%\"）定义的，那么\"$&lt;\"将是符合模式的一系列的文件集。注意，其是一个一个取出来的。\r\n\r\n$^\r\n\r\n所有的依赖目标的集合。以空格分隔。如果在依赖目标中有多个重复的，那么这个变量\r\n\r\n会去除重复的依赖目标，只保留一份。\r\n<h2><a name=\"_Toc451267488\"></a>12．第五版Makefile</h2>\r\n在滴四版中，由于使用隐晦规则，我们丢掉了对.h文件的依赖关系。但是，有时一个庞大的工程，头文件有过修改，却要让整个工程重新编译，这个时间是比较长的。原则上我们只有让依赖修改过的头文件重新编译即可，那么有什么办法呢。能建立依赖关系的Makefile又出炉了：\r\n\r\n##################### Makefile ##################\r\n\r\nsrcfile = $(wildcard ./*.c)\r\n\r\nobject = $(patsubst %.c,%.o,$(srcfile))\r\n\r\nobj_d = $(patsubst %.c,%.d,$(srcfile))\r\n\r\n&nbsp;\r\n\r\ntest : $(object)\r\n\r\ngcc $^ -o test\r\n\r\n&nbsp;\r\n\r\n%.d: %.c\r\n\r\n@set -e; rm -f $@; \\\r\n\r\n$(CC) -MM $(CPPFLAGS) $&lt; &gt; $@.$$$$; \\\r\n\r\nsed \'s,\\($*\\)\\.o[ :]*,\\1.o $@ : ,g\' &lt; $@.$$$$ &gt; $@; \\\r\n\r\nrm -f $@.$$$$\r\n\r\n&nbsp;\r\n\r\ninclude $(obj_d)\r\n\r\n&nbsp;\r\n\r\nclean:\r\n\r\nrm $(object) $(obj_d) test\r\n\r\n##################### Makefile ##################\r\n<h2><a name=\"_Toc451267489\"></a>13．模式规则</h2>\r\n要看懂这个Makefile，我们要知道什么模式规则。你可以使用模式规则来定义一个隐含规则。一个模式规则就好像一个一般的规则，只是在规则中，目标的定义需要有\"%\"字符。\"%\"的意思是表示一个或多个任意字符。在依赖目标中同样可以使用\"%\"，只是依赖目标中的\"%\"的取值，取决于其目标。\r\n\r\n有一点需要注意的是，\"%\"的展开发生在变量和函数的展开之后，变量和函数的展开发生在make载入Makefile时，而模式规则中的\"%\"则发生在运行时。\r\n\r\n<strong>13.1</strong><strong>模式规则介绍</strong>\r\n\r\n模式规则中，至少在规则的目标定义中要包含\"%\"，否则，就是一般的规则。目标中的\"%\"定义表示对文件名的匹配，\"%\"表示长度任意的非空字符串。例如：\"%.c\"表示以\".c\"结尾的文件名（文件名的长度至少为3），而\"s.%.c\"则表示以\"s.\"开头，\".c\"结尾的文件名（文件名的长度至少为5）。\r\n\r\n如果\"%\"定义在目标中，那么，目标中的\"%\"的值决定了依赖目标中的\"%\"的值，也就是说，目标中的模式的\"%\"决定了依赖目标中\"%\"的样子。例如有一个模式规则如下：\r\n\r\n%.o : %.c ;\r\n\r\n&lt;command ......&gt;\r\n\r\n其含义是，指出了怎么从所有的[.c]文件生成相应的[.o]文件的规则。如果要生成的目标是\"a.o b.o\"，那么\"%c\"就是\"a.c b.c\"。一旦依赖目标中的\"%\"模式被确定，那么，make会被要求去匹配当前目录下所有的文件名，一旦找到，make就会规则下的命令，所以，在模式规则中，目标可能会是多个的，如果有模式匹配出多个目标，make就会产生所有的模式目标，此时，make关心的是依赖的文件名和生成目标的命令这两件事。\r\n\r\n<strong>13.2</strong><strong>模式规则示例</strong>\r\n\r\n下面这个例子表示了,把所有的[.c]文件都编译成[.o]文件.\r\n\r\n%.o : %.c\r\n\r\n$(CC) -c $(CFLAGS) $(CPPFLAGS) $&lt; -o $@\r\n<h2><a name=\"_Toc451267490\"></a>14．自动生成依赖关系</h2>\r\n在Makefile中，我们的依赖关系可能会需要包含一系列的头文件，比如，如果我们的\r\n\r\nmain.c中有一句“#include \"defs.h\"”，那么我们的依赖关系应该是：\r\n\r\nmain.o : main.c defs.h\r\n\r\n&nbsp;\r\n\r\n于是由编译器自动生成的依赖关系，这样一来，你就不必再手动书写若干文件的依赖\r\n\r\n关系，而由编译器自动生成了。需要提醒一句的是，如果你使用GNU的C/C++编译器，\r\n\r\n你得用“-MM”参数，不然，“-M”参数会把一些标准库的头文件也包含进来。\r\n\r\ngcc -MM main.c的输出则是：\r\n\r\nmain.o: main.c defs.h\r\n\r\n&nbsp;\r\n\r\n接下来我们可以看下这个模式规则的含义了\r\n\r\n%.d: %.c\r\n\r\n@set -e; rm -f $@; \\\r\n\r\n$(CC) -MM $(CPPFLAGS) $&lt; &gt; $@.$$$$; \\\r\n\r\nsed \'s,\\($*\\)\\.o[ :]*,\\1.o $@ : ,g\' &lt; $@.$$$$ &gt; $@; \\\r\n\r\nrm -f $@.$$$$\r\n\r\n&nbsp;\r\n\r\n“rm -f $@”的意思是删除所有的目标，也就是[.d]文件，第二行的意思是，为每个依赖文件“$&lt;”，也就是[.c]文件生成依赖文件，“$@”表示模式“%.d”文件，如果有一个C文件是name.c，那么“%”就是“name”，“$$$$”意为一个随机编号，第二行生成的文件有可能是“name.d.12345”，第三行使用sed命令做了一个替换，关于sed命令的用法请参看相关的使用文档。第四行就是删除临时文件。\r\n\r\n总而言之，这个模式要做的事就是在编译器生成的依赖关系中加入[.d]文件的依赖，即\r\n\r\n把依赖关系：\r\n\r\nmain.o : main.c defs.h\r\n\r\n转成：\r\n\r\nmain.o main.d : main.c defs.h\r\n\r\n于是，我们的[.d]文件也会自动更新了，并会自动生成了。一旦我们完成这个工作，接下来，我们就要把这些自动生成的规则放进我们的主Makefile 中。我们可以使用Makefile 的“include”命令，来引入别的Makefile文件（前面讲过），例如：\r\n\r\nsources = foo.c bar.c\r\n\r\ninclude $(sources:.c=.d)\r\n<h2><a name=\"_Toc451267491\"></a>15．最终版Makefile</h2>\r\n最后，我们为了编译方便，加上制定编译目标，指定源文件目录，制定存放中间件目录等，综合前面的知识，生成最终版的Makefile，相比大家已经可以自己读懂这个Makefile了：\r\n\r\n##################### Makefile ##################\r\n\r\n#编译选项\r\n\r\nCFLAGS += -I./Include\r\n\r\nCFLAGS += -Wall -O -Os -m64\r\n\r\n&nbsp;\r\n\r\n#源文件目录、中间层目录\r\n\r\nsrc_path = Src\r\n\r\nobj_path = obj\r\n\r\n$(shell mkdir -p ${obj_path})\r\n\r\n$(foreach dir,$(src_path),$(shell mkdir -p ${obj_path}/${dir}))\r\n\r\n&nbsp;\r\n\r\n#找出源文件\r\n\r\nsrcfile_c = $(foreach dir,$(src_path),$(wildcard $(dir)/*.c))\r\n\r\nsrcfile_cpp = $(foreach dir,$(src_path),$(wildcard $(dir)/*.cpp))\r\n\r\n&nbsp;\r\n\r\n#依赖中间.o文件\r\n\r\nobject = $(patsubst %.c,${obj_path}/%.o,$(srcfile_c))\r\n\r\nobject += $(patsubst %.cpp,${obj_path}/%.o,$(srcfile_cpp))\r\n\r\n&nbsp;\r\n\r\n#依赖关系文件\r\n\r\nobj_d = $(object:.o=.d)\r\n\r\n&nbsp;\r\n\r\n#目标文件\r\n\r\ntarget = haha\r\n\r\n&nbsp;\r\n\r\n#编译目标\r\n\r\n$(target) : $(object)\r\n\r\n$(CXX) $^ -o $@\r\n\r\n&nbsp;\r\n\r\n#模式规则\r\n\r\n${obj_path}/%.o: %.c\r\n\r\n$(CC) -c $(CFLAGS) $&lt; -o $@\r\n\r\n&nbsp;\r\n\r\n${obj_path}/%.o: %.cpp\r\n\r\n$(CXX) -c $(CFLAGS) $&lt; -o $@\r\n\r\n&nbsp;\r\n\r\n${obj_path}/%.d:%.c\r\n\r\n$(CC) -MM $(CFLAGS) $&lt; &gt; $@\r\n\r\n@sed \'s/.*\\.o/$(subst /,\\/, $(dir $@))&amp;${subst /,\\/, $@}/g\' $@ &gt;$@.tmp\r\n\r\n@mv $@.tmp $@\r\n\r\n&nbsp;\r\n\r\n${obj_path}/%.d:%.cpp\r\n\r\n$(CXX) -MM $(CFLAGS) $&lt; &gt; $@\r\n\r\n@sed \'s/.*\\.o/${subst /,\\/, $(dir $@)}&amp;${subst /,\\/, $@}/g\' $@ &gt;$@.tmp\r\n\r\n@mv $@.tmp $@\r\n\r\n&nbsp;\r\n\r\n#包含依赖关系文件\r\n\r\ninclude $(obj_d)\r\n\r\n&nbsp;\r\n\r\nclean:\r\n\r\nrm -rf $(obj_path) $(target)\r\n\r\n##################### Makefile ##################\r\n<h2><a name=\"_Toc451267492\"></a>16．后记：</h2>\r\n终于完成了一个Makefile的进化史，将这个Makefile稍加改动，已经可以是一个专业的Makefile了。\r\n\r\n本文主要参考了陈皓在csdn发表的跟我一起写 Makefile。包含了主要的Makefile知识。权威的解释还请参考GNU 的Makefile手册。\r\n\r\n时间匆忙，如果错误之处请指出，请联系 <a href=\"mailto:bao_xiaopeng@dahuatech.com。或者662593\">bao_xiaopeng@dahuatech.com。或者662593</a>联系作者。\r\n<h2><a name=\"_Toc451267493\"></a>17．参考文献：</h2>\r\n《跟我一起写 Makefile》------陈皓','一个Makefile的进化','','inherit','closed','closed','','157-autosave-v1','','','2018-10-10 07:45:07','2018-10-10 07:45:07','',157,'http://45.77.202.181/?p=161',0,'revision','',0),(162,1,'2018-10-10 07:48:00','2018-10-10 07:48:00','在一个线程中回调一个函数，这函数中申请一把锁，这时候另一个地方（同一个对象）占有了这把锁，然后创建线程，就死锁了。\r\n原因：之前的线程回调没有结束，线程没有结束，任占据着线程锁，所以这边线程创建不起来，就死锁了。。\r\n服务器：\r\ncd /home/share/bao_xiaopeng/\r\nsh4-linux-uclibc-gdb Challenge_Debug\r\n\r\n设备端：\r\nadmin$thread\r\n13:10:06|trace thread1 1234 64 Normal\r\n13:10:06|trace thread2 1231 64 Normal\r\n\r\nmount -t nfs -o nolock,tcp 10.6.5.63:/home/share/bao_xiaopeng /home;cd /home\r\n./gdbserver --attach 10.6.5.63:9876 1234\r\n\r\n服务器：\r\ntarget remote 10.43.1.93:9876\r\n(gdb)bt\r\n#0 0x00c23ef2 in __lll_mutex_lock_wait ()\r\n#1 0x00c226fc in pthread_mutex_lock ()\r\n#2 0x00a8c4dc in MutexEnter ()\r\n#3 0x0078aa36 in CMutex::Enter (this=0x112f864) at ../../MultiTask/Trunk/MultiTask/Mutex.cpp:35\r\n#4 0x005ec2b6 in CConsole::thread2 (this=&lt;value optimized out&gt;, p=&lt;value optimized out&gt;) at ../../Console/Console.cpp:256\r\n#5 0x0078b7da in PooledThread::ThreadProc (this=0x28042b0) at ../../MultiTask/Trunk/MultiTask/Thread.cpp:285\r\n#6 0x0078bcf6 in ThreadBody (pdat=0x28042b0) at ../../MultiTask/Trunk/MultiTask/Thread.cpp:30\r\n#7 0x00c2182e in ?? ()\r\n(gdb) f 3\r\n#3 0x0078aa36 in CMutex::Enter (this=0x112f868) at ../../MultiTask/Trunk/MultiTask/Mutex.cpp:35\r\n35 ../../MultiTask/Trunk/MultiTask/Mutex.cpp: No such file or directory.\r\nin ../../MultiTask/Trunk/MultiTask/Mutex.cpp\r\n(gdb) p *this\r\n$1 = {m_hMutex = 0x14329c0}\r\n(gdb) x /32b 0x14329c0\r\n0x14329c0: 0x02 0x00 0x00 0x00 0x00 0x00 0x00 0x00\r\n0x14329c8: 0xd1 0x04 0x00 0x00 0x00 0x00 0x00 0x00\r\n0x14329d0: 0x01 0x00 0x00 0x00 0x00 0x00 0x00 0x00\r\n0x14329d8: 0x00 0x00 0x00 0x00 0x21 0x00 0x00 0x00\r\n\r\n可知，1234线程在等待( 0xd1 0x04 )--&gt;1233线程','查死锁方法','','publish','open','open','','%e6%9f%a5%e6%ad%bb%e9%94%81%e6%96%b9%e6%b3%95','','','2018-10-10 07:48:00','2018-10-10 07:48:00','',0,'http://45.77.202.181/?p=162',0,'post','',0),(163,1,'2018-10-10 07:48:00','2018-10-10 07:48:00','在一个线程中回调一个函数，这函数中申请一把锁，这时候另一个地方（同一个对象）占有了这把锁，然后创建线程，就死锁了。\r\n原因：之前的线程回调没有结束，线程没有结束，任占据着线程锁，所以这边线程创建不起来，就死锁了。。\r\n服务器：\r\ncd /home/share/bao_xiaopeng/\r\nsh4-linux-uclibc-gdb Challenge_Debug\r\n\r\n设备端：\r\nadmin$thread\r\n13:10:06|trace thread1 1234 64 Normal\r\n13:10:06|trace thread2 1231 64 Normal\r\n\r\nmount -t nfs -o nolock,tcp 10.6.5.63:/home/share/bao_xiaopeng /home;cd /home\r\n./gdbserver --attach 10.6.5.63:9876 1234\r\n\r\n服务器：\r\ntarget remote 10.43.1.93:9876\r\n(gdb)bt\r\n#0 0x00c23ef2 in __lll_mutex_lock_wait ()\r\n#1 0x00c226fc in pthread_mutex_lock ()\r\n#2 0x00a8c4dc in MutexEnter ()\r\n#3 0x0078aa36 in CMutex::Enter (this=0x112f864) at ../../MultiTask/Trunk/MultiTask/Mutex.cpp:35\r\n#4 0x005ec2b6 in CConsole::thread2 (this=&lt;value optimized out&gt;, p=&lt;value optimized out&gt;) at ../../Console/Console.cpp:256\r\n#5 0x0078b7da in PooledThread::ThreadProc (this=0x28042b0) at ../../MultiTask/Trunk/MultiTask/Thread.cpp:285\r\n#6 0x0078bcf6 in ThreadBody (pdat=0x28042b0) at ../../MultiTask/Trunk/MultiTask/Thread.cpp:30\r\n#7 0x00c2182e in ?? ()\r\n(gdb) f 3\r\n#3 0x0078aa36 in CMutex::Enter (this=0x112f868) at ../../MultiTask/Trunk/MultiTask/Mutex.cpp:35\r\n35 ../../MultiTask/Trunk/MultiTask/Mutex.cpp: No such file or directory.\r\nin ../../MultiTask/Trunk/MultiTask/Mutex.cpp\r\n(gdb) p *this\r\n$1 = {m_hMutex = 0x14329c0}\r\n(gdb) x /32b 0x14329c0\r\n0x14329c0: 0x02 0x00 0x00 0x00 0x00 0x00 0x00 0x00\r\n0x14329c8: 0xd1 0x04 0x00 0x00 0x00 0x00 0x00 0x00\r\n0x14329d0: 0x01 0x00 0x00 0x00 0x00 0x00 0x00 0x00\r\n0x14329d8: 0x00 0x00 0x00 0x00 0x21 0x00 0x00 0x00\r\n\r\n可知，1234线程在等待( 0xd1 0x04 )--&gt;1233线程','查死锁方法','','inherit','closed','closed','','162-revision-v1','','','2018-10-10 07:48:00','2018-10-10 07:48:00','',162,'http://45.77.202.181/?p=163',0,'revision','',0),(164,1,'2018-10-10 07:51:35','2018-10-10 07:51:35','1、下载gdb，gdbserver目录在gdb6.5/gdb/gdbserver\r\n2、./configure --host=arm-linux-gnueabihf --target=arm-linux-gnueabihf\r\n3、make CC=arm-linux-gnueabihf-4.9.1-gcc\r\n4、//#define HAVE_SYS_REG_H 1\r\n5、file gdbserver\r\ngdbserver: ELF 32-bit LSB executable, ARM, version 1 (SYSV), dynamically linked (uses shared libs), for GNU/Linux 2.6.16, not stripped\r\n\r\n6、arm-linux-gnueabihf-4.9.1-gdb sonia\r\n7、set sysroot /home/18440/anba/\r\n8、target remote 172.23.188.188:1234\r\n9、c\r\n\r\n10、./gdbserver :1234 /usr/bin/sonia AEWB','编译gdbserver','','publish','open','open','','%e7%bc%96%e8%af%91gdbserver','','','2018-10-10 07:51:35','2018-10-10 07:51:35','',0,'http://45.77.202.181/?p=164',0,'post','',0),(165,1,'2018-10-10 07:51:35','2018-10-10 07:51:35','1、下载gdb，gdbserver目录在gdb6.5/gdb/gdbserver\r\n2、./configure --host=arm-linux-gnueabihf --target=arm-linux-gnueabihf\r\n3、make CC=arm-linux-gnueabihf-4.9.1-gcc\r\n4、//#define HAVE_SYS_REG_H 1\r\n5、file gdbserver\r\ngdbserver: ELF 32-bit LSB executable, ARM, version 1 (SYSV), dynamically linked (uses shared libs), for GNU/Linux 2.6.16, not stripped\r\n\r\n6、arm-linux-gnueabihf-4.9.1-gdb sonia\r\n7、set sysroot /home/18440/anba/\r\n8、target remote 172.23.188.188:1234\r\n9、c\r\n\r\n10、./gdbserver :1234 /usr/bin/sonia AEWB','编译gdbserver','','inherit','closed','closed','','164-revision-v1','','','2018-10-10 07:51:35','2018-10-10 07:51:35','',164,'http://45.77.202.181/?p=165',0,'revision','',0),(166,1,'2018-10-10 07:57:13','0000-00-00 00:00:00','du -ah --max-depth 1 查看文件夹大小，深度为1\n\necho 3 &gt;/proc/sys/vm/drop_caches;cat /proc/meminfo； drop cache并查看内存\n\n查找\ngrep \"abc\" . -Rna\nfind . -name \"abc\"\n\n生成core文件\nmount -t nfs -o nolock,tcp 10.34.6.32:/c/public_dev /home;;ulimit -c unlimited;\necho \"/home/kissbaofish-core-%e-%p-%t\" &gt; proc/sys/kernel/core_pattern;\n\n&nbsp;\n\ngdb命令\n\nhandle SIGPIPE noprint nostop\nhandle ignore SIGUSR2 noprint nostop','linux常用命令','','draft','open','open','','','','','2018-10-10 07:57:13','2018-10-10 07:57:13','',0,'http://45.77.202.181/?p=166',0,'post','',0),(167,1,'2018-10-10 08:07:32','2018-10-10 08:07:32','<h1><a name=\"_Toc422242609\"></a>设备无响应死锁分析</h1>\r\n目录\r\n\r\n<a href=\"#_Toc422242609\">设备无响应死锁分析... 1</a>\r\n\r\n<a href=\"#_Toc422242610\">前言概述... 1</a>\r\n\r\n<a href=\"#_Toc422242611\">分析过程... 1</a>\r\n\r\n<a href=\"#_Toc422242612\">根因分析... 5</a>\r\n\r\n<a href=\"#_Toc422242613\">问题解决... 5</a>\r\n\r\n<a href=\"#_Toc422242614\">经验总结... 6</a>\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n<h1><a name=\"_Toc422242610\"></a>前言概述</h1>\r\nEVS模块化项目，在最后的稳定性测试中，发现了设备无响应的严重问题，导致项目延期发布，这是非常遗憾的。最后调查尽是因为编程中缺乏对线程安全的考虑，因为死锁造成的。\r\n\r\n从现象看分析，设备无响应，web登陆不上。初步怀疑设备卡主，但原因不详。串口也无sonia打印给排查问题带来一定的难度。\r\n<h1><a name=\"_Toc422242611\"></a>分析过程</h1>\r\n<ul>\r\n 	<li><strong>找出线程列表</strong></li>\r\n</ul>\r\n设备卡主，怀疑是死锁照成的，由于串口无打印，无法输入thread命令查看线程号，只能通过查看开机日志获取对应线程\r\n\r\n[libInfra] info Threads:\r\n\r\n[libInfra] info                Name            TID  Prior State\r\n\r\n[libInfra] info _______________________________________________________\r\n\r\n[libInfra] info                     Main      22157   64  Normal\r\n\r\n[libInfra] info            NetWorkService      23452   64  Normal\r\n\r\n[libInfra] info             RPCFramework      23450   64  Normal\r\n\r\n[libInfra] info             RPCFramework      23449   64  Normal\r\n\r\n[libInfra] info             RPCFramework      23448   64  Normal\r\n\r\n[libInfra] info             RPCFramework      23447   64  Normal\r\n\r\n[libInfra] info             NetFramework      22493   64  Normal\r\n\r\n[libInfra] info             NetFramework      22491   64  Normal\r\n\r\n[libInfra] info             NetFramework      22492   64  Normal\r\n\r\n[libInfra] info             NetFramework      22490   64  Normal\r\n\r\n[libInfra] info             NetFramework      22489   64  Normal\r\n\r\n[libInfra] info                  Console      22487    1  Normal\r\n\r\n[libInfra] info                 WatchDog      22486    1  Normal\r\n\r\n[libInfra] info             TimerManager      22158    1  Normal\r\n\r\n…….\r\n\r\n这里只显示了部分线程。\r\n\r\n&nbsp;\r\n<ul>\r\n 	<li><strong>跟踪</strong><strong>23450</strong><strong>线程</strong></li>\r\n</ul>\r\n由于设备对命令无响应，这里我们选择RPCFramework 23450 线程开始查找，一般我们都从怀疑的线程开始查找，开始找错几个都没关系，最后都能找到的。\r\n\r\n(gdb) attach 23450\r\n\r\nAttaching to program: /home/sonia, process 23450\r\n\r\nReading symbols from /lib64/libpthread.so.0...(no debugging symbols found)...done.\r\n\r\n[Thread debugging using libthread_db enabled]\r\n\r\n(gdb) bt\r\n\r\n#0  0x000000321240e054 in __lll_lock_wait () from /lib64/libpthread.so.0\r\n\r\n#1  0x0000003212409388 in _L_lock_854 () from /lib64/libpthread.so.0\r\n\r\n#2  0x0000003212409257 in pthread_mutex_lock () from /lib64/libpthread.so.0\r\n\r\n#3  0x0000000001047c40 in Dahua::Infra::CMutex::enter (this=&lt;value optimized out&gt;) at Src/Infra3/Mutex.cpp:107\r\n\r\n#4  0x000000000104b5e3 in CGuard (this=0x2174590, id=23450, name=...) at ./Include/Infra/Infra3/Guard.h:66\r\n\r\n#5  Dahua::Infra::ThreadManagerInternal::getThreadNameByID (this=0x2174590, id=23450, name=...) at Src/Infra3/Thread.cpp:839\r\n\r\n#6  0x0000000000a81627 in Dahua::Logger::CInternalLoggingEvent::getThreadName (this=&lt;value optimized out&gt;) at Src/Logger//Src/InternalLoggingEvent.cpp:108\r\n\r\n………….\r\n\r\n#23 0x0000000000fcb618 in Dahua::RPCFramework::CRPCSession::handle_rpc_request (this=0x7f415c003b40, req=&lt;value optimized out&gt;, pkt=&lt;value optimized out&gt;) at Src/Server/RPCSession.cpp:772\r\n\r\n#24 0x0000000000fcb953 in Dahua::RPCFramework::CRPCThreadPool::ThreadProc (avg=...) at Src/Server/RPCThreadPool.cpp:126\r\n\r\n#25 0x000000000104c72c in (anonymous namespace)::InternalThreadBody (pdat=&lt;value optimized out&gt;) at Src/Infra3/Thread.cpp:103\r\n\r\n#26 0x0000003212407851 in start_thread () from /lib64/libpthread.so.0\r\n\r\n#27 0x00000032120e767d in clone () from /lib64/libc.so.6\r\n\r\n&nbsp;\r\n\r\n跳转到堆栈最后一个函数\r\n\r\n(gdb) f 5\r\n\r\n#5  Dahua::Infra::ThreadManagerInternal::getThreadNameByID (this=0x2174590, id=23450, name=...) at Src/Infra3/Thread.cpp:839\r\n\r\n839     in Src/Infra3/Thread.cpp\r\n\r\n&nbsp;\r\n\r\n从当前堆栈中将锁的信息打印出来\r\n\r\n(gdb) p *this\r\n\r\n$6 = {m_pHead = 0x29371f60, m_mutex = {m_internal = 0x21745b0}, m_mainThreadID = 22157}\r\n\r\n(gdb) p *(pthread_mutex_t*)m_mutex\r\n\r\n$7 = {__data = {__lock = 2, __count = 0, __owner = 22486, __nusers = 1, __kind = 0, __spins = 0, __list = {__prev = 0x0, __next = 0x0}}, __size = \"\\002\\000\\000\\000\\000\\000\\000\\000\\326W\\000\\000\\001\", \'\\000\' &lt;repeats 26 times&gt;, __align = 2}\r\n\r\n堆栈信息太多，中间忽略部分堆栈。从信息中可以看出线程RPCFramework 23450最后调用的getThreadNameByID 函数在等待一把锁，而这把锁被__owner = 22486 ，22486线程占用。\r\n\r\n&nbsp;\r\n\r\n<strong>3</strong><strong>、查看</strong><strong>22486</strong><strong>线程</strong>\r\n\r\n(gdb) attach 22486\r\n\r\nAttaching to program: /home/sonia, process 22486\r\n\r\nwarning: process 22486 is a cloned process\r\n\r\nReading symbols from /lib64/libpthread.so.0...(no debugging symbols found)...done.\r\n\r\n[Thread debugging using libthread_db enabled]\r\n\r\n(gdb) bt\r\n\r\n#0  0x000000321240e054 in __lll_lock_wait () from /lib64/libpthread.so.0\r\n\r\n#1  0x0000003212409388 in _L_lock_854 () from /lib64/libpthread.so.0\r\n\r\n#2  0x0000003212409257 in pthread_mutex_lock () from /lib64/libpthread.so.0\r\n\r\n#3  0x0000000001047c40 in Dahua::Infra::CMutex::enter (this=&lt;value optimized out&gt;) at Src/Infra3/Mutex.cpp:107\r\n\r\n#4  0x000000000104cf6a in Dahua::Infra::ThreadManagerInternal::getTimeOutThreads (this=0x2174590, threadName=...) at Src/Infra3/Thread.cpp:866\r\n\r\n#5  0x0000000000a10ace in Dahua::Manager::CMagicBox::threadProc (this=0x180f49a0) at Src/MagicBox.cpp:1725\r\n\r\n#6  0x000000000104c72c in (anonymous namespace)::InternalThreadBody (pdat=&lt;value optimized out&gt;) at Src/Infra3/Thread.cpp:103\r\n\r\n#7  0x0000003212407851 in start_thread () from /lib64/libpthread.so.0\r\n\r\n#8  0x00000032120e767d in clone () from /lib64/libc.so.6\r\n\r\n(gdb) f 4\r\n\r\n#4  0x000000000104cf6a in Dahua::Infra::ThreadManagerInternal::getTimeOutThreads (this=0x2174590, threadName=...) at Src/Infra3/Thread.cpp:866\r\n\r\n866     in Src/Infra3/Thread.cpp\r\n\r\n此处要分析代码，从代码的886行可以看出，此处在等待p-&gt;m_mutex这把锁\r\n\r\n(gdb) p p-&gt;m_mutex\r\n\r\n$4 = {m_internal = 0x2190720}\r\n\r\n(gdb) p *(pthread_mutex_t*)0x2190720\r\n\r\n$5 = {__data = {__lock = 2, __count = 0, __owner = 23452, __nusers = 1, __kind = 0, __spins = 0, __list = {__prev = 0x0, __next = 0x0}}, __size = \"\\002\\000\\000\\000\\000\\000\\000\\000\\234[\\000\\000\\001\", \'\\000\' &lt;repeats 26 times&gt;, __align =\r\n\r\n同理可得这个线程是被__owner = 23452, NetWorkService 23542这个线程占用了\r\n\r\n&nbsp;\r\n\r\n<strong>4</strong><strong>、跟踪</strong><strong>23452</strong>\r\n\r\n(gdb) attach 23452\r\n\r\nAttaching to program: /home/sonia, process 23452\r\n\r\n(gdb) bt\r\n\r\n#0  0x000000321240e054 in __lll_lock_wait () from /lib64/libpthread.so.0\r\n\r\n#1  0x0000003212409388 in _L_lock_854 () from /lib64/libpthread.so.0\r\n\r\n#2  0x0000003212409257 in pthread_mutex_lock () from /lib64/libpthread.so.0\r\n\r\n#3  0x0000000001047c40 in Dahua::Infra::CMutex::enter (this=&lt;value optimized out&gt;) at Src/Infra3/Mutex.cpp:107\r\n\r\n#4  0x000000000104b5e3 in CGuard (this=0x2174590, id=23452, name=...) at ./Include/Infra/Infra3/Guard.h:66\r\n\r\n#5  Dahua::Infra::ThreadManagerInternal::getThreadNameByID (this=0x2174590, id=23452, name=...) at Src/Infra3/Thread.cpp:839\r\n\r\n#6  0x0000000000a81627 in Dahua::Logger::CInternalLoggingEvent::getThreadName (this=&lt;value optimized out&gt;) at Src/Logger//Src/InternalLoggingEvent.cpp:108\r\n\r\n………\r\n\r\n#17 0x000000000104c325 in Dahua::Infra::CThread::createThread (this=0x180e1000) at Src/Infra3/Thread.cpp:236\r\n\r\n#18 0x0000000000a66916 in Dahua::Manager::CConsole::start (this=0x180e0ff0) at Src/Console.cpp:195\r\n\r\n……\r\n\r\n#25 0x000000000104c72c in (anonymous namespace)::InternalThreadBody (pdat=&lt;value optimized out&gt;) at Src/Infra3/Thread.cpp:103\r\n\r\n#26 0x0000003212407851 in start_thread () from /lib64/libpthread.so.0\r\n\r\n#27 0x00000032120e767d in clone () from /lib64/libc.so.6\r\n\r\n(gdb) f 5\r\n\r\n#5  Dahua::Infra::ThreadManagerInternal::getThreadNameByID (this=0x2174590, id=23452, name=...) at Src/Infra3/Thread.cpp:839\r\n\r\n839     Src/Infra3/Thread.cpp: No such file or directory.\r\n\r\nin Src/Infra3/Thread.cpp\r\n\r\n(gdb) p *this\r\n\r\n$1 = {m_pHead = 0x29371f60, m_mutex = {m_internal = 0x21745b0}, m_mainThreadID = 22157}\r\n\r\n(gdb) p *(pthread_mutex_t*)m_mutex\r\n\r\n$2 = {__data = {__lock = 2, __count = 0, __owner = 22486, __nusers = 1, __kind = 0, __spins = 0, __list = {__prev = 0x0, __next = 0x0}}, __size = \"\\002\\000\\000\\000\\000\\000\\000\\000\\326W\\000\\000\\001\", \'\\000\' &lt;repeats 26 times&gt;, __align = 2}\r\n\r\n致此，我们已经发现了死锁的一个环，线程WatchDog  22486在等待NetWorkService 23542，而线程NetWorkService 23542，又在等待WatchDog  22486，从而导致了死锁。其他死锁线程都在等在WatchDog  22486。通过对照堆栈和代码，确定了这个死锁的原因和代码。\r\n\r\n<a href=\"http://45.77.202.181/wp-content/uploads/2018/10/image1.bmp\"><img class=\"alignleft size-full wp-image-168\" src=\"http://45.77.202.181/wp-content/uploads/2018/10/image1.bmp\" alt=\"\" width=\"443\" height=\"332\" /></a>\r\n<h1><a name=\"_Toc422242612\"></a>根因分析</h1>\r\n由于规范日志打印需求的增加，log组件对tracef，warnf，errorf的打印进行了重定向，内部会调用getThreadNameByID函数获取线程名，可是这个函数是有锁的，开发人员忽略了这个危险性，没有去查找这把锁的安全性，比如此处在getTimeOutThreads的函数中又回去申请另一把锁。 需要开发人员依次查找下去排除每一种可能发生死锁的可能。\r\n<h1><a name=\"_Toc422242613\"></a>问题解决</h1>\r\n--- C:/Users/18440/AppData/Local/Temp/Thread.cpp-rev276427.svn000.tmp.cpp     周二 六月 16 14:35:54 2015\r\n\r\n+++ C:/Users/18440/AppData/Local/Temp/Thread.cpp-rev276428.svn000.tmp.cpp  周二 六月 16 14:35:54 2015\r\n\r\n@@ -211,12 +211,12 @@\r\n\r\n&nbsp;\r\n\r\nbool CThread::createThread()\r\n\r\n{\r\n\r\n-       CGuard guard(m_internal-&gt;m_mutex);\r\n\r\n+       m_internal-&gt;m_mutex.enter();\r\n\r\n&nbsp;\r\n\r\nif(m_internal-&gt;m_bLoop)\r\n\r\n{\r\n\r\n+               m_internal-&gt;m_mutex.leave();\r\n\r\nwarnf(\"CThread::CreateThread() thread \'%s\' is still running!\\n\", m_internal-&gt;m_Name);\r\n\r\nreturn false;\r\n\r\n}\r\n\r\n因为warnf内部钩子会调用getThreadNameByID从而导致死锁，这里要移到锁外面来。\r\n<h1><a name=\"_Toc422242614\"></a>经验总结</h1>\r\n1、锁的使用要明确保护对象，范围要尽量小。切不可感觉要加锁就加一下，保护什么资源也都不知道\r\n\r\n2、Guard和enter，leave要配套使用，这是一种风格问题，更是为了帮组我们避免问题。\r\n\r\n比如下面这段乍一看没什么问题。而且一般也不会出问题，两次leave一般也没事，但在多线程调用是会发生死机问题。\r\n\r\nInfar::CGuard guard(m_mutex);\r\n\r\nIf (something)\r\n\r\n{\r\n\r\nm_mutex.leave(); //回调前先退出锁\r\n\r\ncallback();\r\n\r\nreturn;\r\n\r\n}\r\n\r\n&nbsp;\r\n\r\n3、优化好代码结构，选择适当的设计模式，很多时候可以不加锁而保证线程安全。\r\n\r\n4、锁的使用最难的不是不死锁，而是保护了资源的情况下，代码逻辑也要正确，这个就不是一两句话说的清楚的了。总之使用好锁是多线程编程的一部分，写出线程安全的代码是C++的难点，也正C++的神奇的地方。','设备无响应死锁分析','','publish','open','open','','%e8%ae%be%e5%a4%87%e6%97%a0%e5%93%8d%e5%ba%94%e6%ad%bb%e9%94%81%e5%88%86%e6%9e%90','','','2018-10-10 08:18:43','2018-10-10 08:18:43','',0,'http://45.77.202.181/?p=167',0,'post','',0),(168,1,'2018-10-10 08:07:08','2018-10-10 08:07:08','','image1','','inherit','open','closed','','image1','','','2018-10-10 08:07:08','2018-10-10 08:07:08','',167,'http://45.77.202.181/wp-content/uploads/2018/10/image1.bmp',0,'attachment','image/bmp',0),(169,1,'2018-10-10 08:07:32','2018-10-10 08:07:32','<h1><a name=\"_Toc422242609\"></a>设备无响应死锁分析</h1>\r\n目录\r\n\r\n<a href=\"#_Toc422242609\">设备无响应死锁分析... 1</a>\r\n\r\n<a href=\"#_Toc422242610\">前言概述... 1</a>\r\n\r\n<a href=\"#_Toc422242611\">分析过程... 1</a>\r\n\r\n<a href=\"#_Toc422242612\">根因分析... 5</a>\r\n\r\n<a href=\"#_Toc422242613\">问题解决... 5</a>\r\n\r\n<a href=\"#_Toc422242614\">经验总结... 6</a>\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n<h1><a name=\"_Toc422242610\"></a>前言概述</h1>\r\nEVS模块化项目，在最后的稳定性测试中，发现了设备无响应的严重问题，导致项目延期发布，这是非常遗憾的。最后调查尽是因为编程中缺乏对线程安全的考虑，因为死锁造成的。\r\n\r\n从现象看分析，设备无响应，web登陆不上。初步怀疑设备卡主，但原因不详。串口也无sonia打印给排查问题带来一定的难度。\r\n<h1><a name=\"_Toc422242611\"></a>分析过程</h1>\r\n<ul>\r\n 	<li><strong>找出线程列表</strong></li>\r\n</ul>\r\n设备卡主，怀疑是死锁照成的，由于串口无打印，无法输入thread命令查看线程号，只能通过查看开机日志获取对应线程\r\n\r\n[libInfra] info Threads:\r\n\r\n[libInfra] info                Name            TID  Prior State\r\n\r\n[libInfra] info _______________________________________________________\r\n\r\n[libInfra] info                     Main      22157   64  Normal\r\n\r\n[libInfra] info            NetWorkService      23452   64  Normal\r\n\r\n[libInfra] info             RPCFramework      23450   64  Normal\r\n\r\n[libInfra] info             RPCFramework      23449   64  Normal\r\n\r\n[libInfra] info             RPCFramework      23448   64  Normal\r\n\r\n[libInfra] info             RPCFramework      23447   64  Normal\r\n\r\n[libInfra] info             NetFramework      22493   64  Normal\r\n\r\n[libInfra] info             NetFramework      22491   64  Normal\r\n\r\n[libInfra] info             NetFramework      22492   64  Normal\r\n\r\n[libInfra] info             NetFramework      22490   64  Normal\r\n\r\n[libInfra] info             NetFramework      22489   64  Normal\r\n\r\n[libInfra] info                  Console      22487    1  Normal\r\n\r\n[libInfra] info                 WatchDog      22486    1  Normal\r\n\r\n[libInfra] info             TimerManager      22158    1  Normal\r\n\r\n…….\r\n\r\n这里只显示了部分线程。\r\n\r\n&nbsp;\r\n<ul>\r\n 	<li><strong>跟踪</strong><strong>23450</strong><strong>线程</strong></li>\r\n</ul>\r\n由于设备对命令无响应，这里我们选择RPCFramework 23450 线程开始查找，一般我们都从怀疑的线程开始查找，开始找错几个都没关系，最后都能找到的。\r\n\r\n(gdb) attach 23450\r\n\r\nAttaching to program: /home/sonia, process 23450\r\n\r\nReading symbols from /lib64/libpthread.so.0...(no debugging symbols found)...done.\r\n\r\n[Thread debugging using libthread_db enabled]\r\n\r\n(gdb) bt\r\n\r\n#0  0x000000321240e054 in __lll_lock_wait () from /lib64/libpthread.so.0\r\n\r\n#1  0x0000003212409388 in _L_lock_854 () from /lib64/libpthread.so.0\r\n\r\n#2  0x0000003212409257 in pthread_mutex_lock () from /lib64/libpthread.so.0\r\n\r\n#3  0x0000000001047c40 in Dahua::Infra::CMutex::enter (this=&lt;value optimized out&gt;) at Src/Infra3/Mutex.cpp:107\r\n\r\n#4  0x000000000104b5e3 in CGuard (this=0x2174590, id=23450, name=...) at ./Include/Infra/Infra3/Guard.h:66\r\n\r\n#5  Dahua::Infra::ThreadManagerInternal::getThreadNameByID (this=0x2174590, id=23450, name=...) at Src/Infra3/Thread.cpp:839\r\n\r\n#6  0x0000000000a81627 in Dahua::Logger::CInternalLoggingEvent::getThreadName (this=&lt;value optimized out&gt;) at Src/Logger//Src/InternalLoggingEvent.cpp:108\r\n\r\n………….\r\n\r\n#23 0x0000000000fcb618 in Dahua::RPCFramework::CRPCSession::handle_rpc_request (this=0x7f415c003b40, req=&lt;value optimized out&gt;, pkt=&lt;value optimized out&gt;) at Src/Server/RPCSession.cpp:772\r\n\r\n#24 0x0000000000fcb953 in Dahua::RPCFramework::CRPCThreadPool::ThreadProc (avg=...) at Src/Server/RPCThreadPool.cpp:126\r\n\r\n#25 0x000000000104c72c in (anonymous namespace)::InternalThreadBody (pdat=&lt;value optimized out&gt;) at Src/Infra3/Thread.cpp:103\r\n\r\n#26 0x0000003212407851 in start_thread () from /lib64/libpthread.so.0\r\n\r\n#27 0x00000032120e767d in clone () from /lib64/libc.so.6\r\n\r\n&nbsp;\r\n\r\n跳转到堆栈最后一个函数\r\n\r\n(gdb) f 5\r\n\r\n#5  Dahua::Infra::ThreadManagerInternal::getThreadNameByID (this=0x2174590, id=23450, name=...) at Src/Infra3/Thread.cpp:839\r\n\r\n839     in Src/Infra3/Thread.cpp\r\n\r\n&nbsp;\r\n\r\n从当前堆栈中将锁的信息打印出来\r\n\r\n(gdb) p *this\r\n\r\n$6 = {m_pHead = 0x29371f60, m_mutex = {m_internal = 0x21745b0}, m_mainThreadID = 22157}\r\n\r\n(gdb) p *(pthread_mutex_t*)m_mutex\r\n\r\n$7 = {__data = {__lock = 2, __count = 0, __owner = 22486, __nusers = 1, __kind = 0, __spins = 0, __list = {__prev = 0x0, __next = 0x0}}, __size = \"\\002\\000\\000\\000\\000\\000\\000\\000\\326W\\000\\000\\001\", \'\\000\' &lt;repeats 26 times&gt;, __align = 2}\r\n\r\n堆栈信息太多，中间忽略部分堆栈。从信息中可以看出线程RPCFramework 23450最后调用的getThreadNameByID 函数在等待一把锁，而这把锁被__owner = 22486 ，22486线程占用。\r\n\r\n&nbsp;\r\n\r\n<strong>3</strong><strong>、查看</strong><strong>22486</strong><strong>线程</strong>\r\n\r\n(gdb) attach 22486\r\n\r\nAttaching to program: /home/sonia, process 22486\r\n\r\nwarning: process 22486 is a cloned process\r\n\r\nReading symbols from /lib64/libpthread.so.0...(no debugging symbols found)...done.\r\n\r\n[Thread debugging using libthread_db enabled]\r\n\r\n(gdb) bt\r\n\r\n#0  0x000000321240e054 in __lll_lock_wait () from /lib64/libpthread.so.0\r\n\r\n#1  0x0000003212409388 in _L_lock_854 () from /lib64/libpthread.so.0\r\n\r\n#2  0x0000003212409257 in pthread_mutex_lock () from /lib64/libpthread.so.0\r\n\r\n#3  0x0000000001047c40 in Dahua::Infra::CMutex::enter (this=&lt;value optimized out&gt;) at Src/Infra3/Mutex.cpp:107\r\n\r\n#4  0x000000000104cf6a in Dahua::Infra::ThreadManagerInternal::getTimeOutThreads (this=0x2174590, threadName=...) at Src/Infra3/Thread.cpp:866\r\n\r\n#5  0x0000000000a10ace in Dahua::Manager::CMagicBox::threadProc (this=0x180f49a0) at Src/MagicBox.cpp:1725\r\n\r\n#6  0x000000000104c72c in (anonymous namespace)::InternalThreadBody (pdat=&lt;value optimized out&gt;) at Src/Infra3/Thread.cpp:103\r\n\r\n#7  0x0000003212407851 in start_thread () from /lib64/libpthread.so.0\r\n\r\n#8  0x00000032120e767d in clone () from /lib64/libc.so.6\r\n\r\n(gdb) f 4\r\n\r\n#4  0x000000000104cf6a in Dahua::Infra::ThreadManagerInternal::getTimeOutThreads (this=0x2174590, threadName=...) at Src/Infra3/Thread.cpp:866\r\n\r\n866     in Src/Infra3/Thread.cpp\r\n\r\n此处要分析代码，从代码的886行可以看出，此处在等待p-&gt;m_mutex这把锁\r\n\r\n(gdb) p p-&gt;m_mutex\r\n\r\n$4 = {m_internal = 0x2190720}\r\n\r\n(gdb) p *(pthread_mutex_t*)0x2190720\r\n\r\n$5 = {__data = {__lock = 2, __count = 0, __owner = 23452, __nusers = 1, __kind = 0, __spins = 0, __list = {__prev = 0x0, __next = 0x0}}, __size = \"\\002\\000\\000\\000\\000\\000\\000\\000\\234[\\000\\000\\001\", \'\\000\' &lt;repeats 26 times&gt;, __align =\r\n\r\n同理可得这个线程是被__owner = 23452, NetWorkService 23542这个线程占用了\r\n\r\n&nbsp;\r\n\r\n<strong>4</strong><strong>、跟踪</strong><strong>23452</strong>\r\n\r\n(gdb) attach 23452\r\n\r\nAttaching to program: /home/sonia, process 23452\r\n\r\n(gdb) bt\r\n\r\n#0  0x000000321240e054 in __lll_lock_wait () from /lib64/libpthread.so.0\r\n\r\n#1  0x0000003212409388 in _L_lock_854 () from /lib64/libpthread.so.0\r\n\r\n#2  0x0000003212409257 in pthread_mutex_lock () from /lib64/libpthread.so.0\r\n\r\n#3  0x0000000001047c40 in Dahua::Infra::CMutex::enter (this=&lt;value optimized out&gt;) at Src/Infra3/Mutex.cpp:107\r\n\r\n#4  0x000000000104b5e3 in CGuard (this=0x2174590, id=23452, name=...) at ./Include/Infra/Infra3/Guard.h:66\r\n\r\n#5  Dahua::Infra::ThreadManagerInternal::getThreadNameByID (this=0x2174590, id=23452, name=...) at Src/Infra3/Thread.cpp:839\r\n\r\n#6  0x0000000000a81627 in Dahua::Logger::CInternalLoggingEvent::getThreadName (this=&lt;value optimized out&gt;) at Src/Logger//Src/InternalLoggingEvent.cpp:108\r\n\r\n………\r\n\r\n#17 0x000000000104c325 in Dahua::Infra::CThread::createThread (this=0x180e1000) at Src/Infra3/Thread.cpp:236\r\n\r\n#18 0x0000000000a66916 in Dahua::Manager::CConsole::start (this=0x180e0ff0) at Src/Console.cpp:195\r\n\r\n……\r\n\r\n#25 0x000000000104c72c in (anonymous namespace)::InternalThreadBody (pdat=&lt;value optimized out&gt;) at Src/Infra3/Thread.cpp:103\r\n\r\n#26 0x0000003212407851 in start_thread () from /lib64/libpthread.so.0\r\n\r\n#27 0x00000032120e767d in clone () from /lib64/libc.so.6\r\n\r\n(gdb) f 5\r\n\r\n#5  Dahua::Infra::ThreadManagerInternal::getThreadNameByID (this=0x2174590, id=23452, name=...) at Src/Infra3/Thread.cpp:839\r\n\r\n839     Src/Infra3/Thread.cpp: No such file or directory.\r\n\r\nin Src/Infra3/Thread.cpp\r\n\r\n(gdb) p *this\r\n\r\n$1 = {m_pHead = 0x29371f60, m_mutex = {m_internal = 0x21745b0}, m_mainThreadID = 22157}\r\n\r\n(gdb) p *(pthread_mutex_t*)m_mutex\r\n\r\n$2 = {__data = {__lock = 2, __count = 0, __owner = 22486, __nusers = 1, __kind = 0, __spins = 0, __list = {__prev = 0x0, __next = 0x0}}, __size = \"\\002\\000\\000\\000\\000\\000\\000\\000\\326W\\000\\000\\001\", \'\\000\' &lt;repeats 26 times&gt;, __align = 2}\r\n\r\n致此，我们已经发现了死锁的一个环，线程WatchDog  22486在等待NetWorkService 23542，而线程NetWorkService 23542，又在等待WatchDog  22486，从而导致了死锁。其他死锁线程都在等在WatchDog  22486。通过对照堆栈和代码，确定了这个死锁的原因和代码。\r\n\r\n<a href=\"http://45.77.202.181/wp-content/uploads/2018/10/image1.bmp\"><img class=\"alignleft size-full wp-image-168\" src=\"http://45.77.202.181/wp-content/uploads/2018/10/image1.bmp\" alt=\"\" width=\"443\" height=\"332\" /></a>\r\n<h1><a name=\"_Toc422242612\"></a>根因分析</h1>\r\n由于规范日志打印需求的增加，log组件对tracef，warnf，errorf的打印进行了重定向，内部会调用getThreadNameByID函数获取线程名，可是这个函数是有锁的，开发人员忽略了这个危险性，没有去查找这把锁的安全性，比如此处在getTimeOutThreads的函数中又回去申请另一把锁。 需要开发人员依次查找下去排除每一种可能发生死锁的可能。\r\n<h1><a name=\"_Toc422242613\"></a>问题解决</h1>\r\n--- C:/Users/18440/AppData/Local/Temp/Thread.cpp-rev276427.svn000.tmp.cpp     周二 六月 16 14:35:54 2015\r\n\r\n+++ C:/Users/18440/AppData/Local/Temp/Thread.cpp-rev276428.svn000.tmp.cpp  周二 六月 16 14:35:54 2015\r\n\r\n@@ -211,12 +211,12 @@\r\n\r\n&nbsp;\r\n\r\nbool CThread::createThread()\r\n\r\n{\r\n\r\n-       CGuard guard(m_internal-&gt;m_mutex);\r\n\r\n+       m_internal-&gt;m_mutex.enter();\r\n\r\n&nbsp;\r\n\r\nif(m_internal-&gt;m_bLoop)\r\n\r\n{\r\n\r\n+               m_internal-&gt;m_mutex.leave();\r\n\r\nwarnf(\"CThread::CreateThread() thread \'%s\' is still running!\\n\", m_internal-&gt;m_Name);\r\n\r\nreturn false;\r\n\r\n}\r\n\r\n因为warnf内部钩子会调用getThreadNameByID从而导致死锁，这里要移到锁外面来。\r\n<h1><a name=\"_Toc422242614\"></a>经验总结</h1>\r\n1、锁的使用要明确保护对象，范围要尽量小。切不可感觉要加锁就加一下，保护什么资源也都不知道\r\n\r\n2、Guard和enter，leave要配套使用，这是一种风格问题，更是为了帮组我们避免问题。\r\n\r\n比如下面这段乍一看没什么问题。而且一般也不会出问题，两次leave一般也没事，但在多线程调用是会发生死机问题。\r\n\r\nInfar::CGuard guard(m_mutex);\r\n\r\nIf (something)\r\n\r\n{\r\n\r\nm_mutex.leave(); //回调前先退出锁\r\n\r\ncallback();\r\n\r\nreturn;\r\n\r\n}\r\n\r\n&nbsp;\r\n\r\n3、优化好代码结构，选择适当的设计模式，很多时候可以不加锁而保证线程安全。\r\n\r\n4、锁的使用最难的不是不死锁，而是保护了资源的情况下，代码逻辑也要正确，这个就不是一两句话说的清楚的了。总之使用好锁是多线程编程的一部分，写出线程安全的代码是C++的难点，也正C++的神奇的地方。','设备无响应死锁分析','','inherit','closed','closed','','167-revision-v1','','','2018-10-10 08:07:32','2018-10-10 08:07:32','',167,'http://45.77.202.181/?p=169',0,'revision','',0),(170,1,'2018-10-10 08:19:46','0000-00-00 00:00:00','','自动草稿','','auto-draft','open','open','','','','','2018-10-10 08:19:46','0000-00-00 00:00:00','',0,'http://45.77.202.181/?p=170',0,'post','',0);
/*!40000 ALTER TABLE `wp_posts` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_snippets`
--

DROP TABLE IF EXISTS `wp_snippets`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_snippets` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `name` tinytext COLLATE utf8mb4_unicode_ci NOT NULL,
  `description` text COLLATE utf8mb4_unicode_ci NOT NULL,
  `code` longtext COLLATE utf8mb4_unicode_ci NOT NULL,
  `tags` longtext COLLATE utf8mb4_unicode_ci NOT NULL,
  `scope` varchar(15) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT 'global',
  `priority` smallint(6) NOT NULL DEFAULT '10',
  `active` tinyint(1) NOT NULL DEFAULT '0',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_snippets`
--

LOCK TABLES `wp_snippets` WRITE;
/*!40000 ALTER TABLE `wp_snippets` DISABLE KEYS */;
/*!40000 ALTER TABLE `wp_snippets` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_statistics_exclusions`
--

DROP TABLE IF EXISTS `wp_statistics_exclusions`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_statistics_exclusions` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `date` date NOT NULL,
  `reason` varchar(255) DEFAULT NULL,
  `count` bigint(20) NOT NULL,
  PRIMARY KEY (`ID`),
  KEY `date` (`date`),
  KEY `reason` (`reason`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_statistics_exclusions`
--

LOCK TABLES `wp_statistics_exclusions` WRITE;
/*!40000 ALTER TABLE `wp_statistics_exclusions` DISABLE KEYS */;
/*!40000 ALTER TABLE `wp_statistics_exclusions` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_statistics_historical`
--

DROP TABLE IF EXISTS `wp_statistics_historical`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_statistics_historical` (
  `ID` bigint(20) NOT NULL AUTO_INCREMENT,
  `category` varchar(25) NOT NULL,
  `page_id` bigint(20) NOT NULL,
  `uri` varchar(255) NOT NULL,
  `value` bigint(20) NOT NULL,
  PRIMARY KEY (`ID`),
  UNIQUE KEY `page_id` (`page_id`),
  UNIQUE KEY `uri` (`uri`),
  KEY `category` (`category`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_statistics_historical`
--

LOCK TABLES `wp_statistics_historical` WRITE;
/*!40000 ALTER TABLE `wp_statistics_historical` DISABLE KEYS */;
/*!40000 ALTER TABLE `wp_statistics_historical` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_statistics_pages`
--

DROP TABLE IF EXISTS `wp_statistics_pages`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_statistics_pages` (
  `uri` varchar(255) NOT NULL,
  `date` date NOT NULL,
  `count` int(11) NOT NULL,
  `id` int(11) NOT NULL,
  UNIQUE KEY `date_2` (`date`,`uri`),
  KEY `url` (`uri`),
  KEY `date` (`date`),
  KEY `id` (`id`),
  KEY `uri` (`uri`,`count`,`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_statistics_pages`
--

LOCK TABLES `wp_statistics_pages` WRITE;
/*!40000 ALTER TABLE `wp_statistics_pages` DISABLE KEYS */;
INSERT INTO `wp_statistics_pages` VALUES ('/?p=46','2018-10-09',1,46),('/?p=52','2018-10-10',1,52),('/?p=60','2018-10-09',1,60),('/?p=76','2018-10-09',4,76),('/?p=80','2018-10-10',1,80),('/?p=82','2018-10-09',1,82),('/?p=82','2018-10-10',4,82),('/?p=84','2018-10-09',1,84),('/?p=84','2018-10-10',1,84),('/?p=86','2018-10-09',1,86),('/?p=86','2018-10-10',10,86),('/?page_id=8','2018-10-09',1,8),('/?page_id=8','2018-10-10',2,8),('/?page_id=9','2018-10-10',1,9),('/?page_id=9','2018-10-09',2,9);
/*!40000 ALTER TABLE `wp_statistics_pages` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_statistics_search`
--

DROP TABLE IF EXISTS `wp_statistics_search`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_statistics_search` (
  `ID` bigint(20) NOT NULL AUTO_INCREMENT,
  `last_counter` date NOT NULL,
  `engine` varchar(64) NOT NULL,
  `host` varchar(255) DEFAULT NULL,
  `words` varchar(255) DEFAULT NULL,
  `visitor` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`ID`),
  KEY `last_counter` (`last_counter`),
  KEY `engine` (`engine`),
  KEY `host` (`host`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_statistics_search`
--

LOCK TABLES `wp_statistics_search` WRITE;
/*!40000 ALTER TABLE `wp_statistics_search` DISABLE KEYS */;
/*!40000 ALTER TABLE `wp_statistics_search` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_statistics_useronline`
--

DROP TABLE IF EXISTS `wp_statistics_useronline`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_statistics_useronline` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `ip` varchar(60) NOT NULL,
  `created` int(11) DEFAULT NULL,
  `timestamp` int(10) NOT NULL,
  `date` datetime NOT NULL,
  `referred` text NOT NULL,
  `agent` varchar(255) NOT NULL,
  `platform` varchar(255) DEFAULT NULL,
  `version` varchar(255) DEFAULT NULL,
  `location` varchar(10) DEFAULT NULL,
  PRIMARY KEY (`ID`)
) ENGINE=InnoDB AUTO_INCREMENT=80 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_statistics_useronline`
--

LOCK TABLES `wp_statistics_useronline` WRITE;
/*!40000 ALTER TABLE `wp_statistics_useronline` DISABLE KEYS */;
/*!40000 ALTER TABLE `wp_statistics_useronline` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_statistics_visit`
--

DROP TABLE IF EXISTS `wp_statistics_visit`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_statistics_visit` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `last_visit` datetime NOT NULL,
  `last_counter` date NOT NULL,
  `visit` int(10) NOT NULL,
  PRIMARY KEY (`ID`),
  UNIQUE KEY `unique_date` (`last_counter`)
) ENGINE=InnoDB AUTO_INCREMENT=64 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_statistics_visit`
--

LOCK TABLES `wp_statistics_visit` WRITE;
/*!40000 ALTER TABLE `wp_statistics_visit` DISABLE KEYS */;
INSERT INTO `wp_statistics_visit` VALUES (1,'2018-10-09 09:33:42','2018-10-09',62),(2,'2018-10-10 08:02:18','2018-10-10',72);
/*!40000 ALTER TABLE `wp_statistics_visit` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_statistics_visitor`
--

DROP TABLE IF EXISTS `wp_statistics_visitor`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_statistics_visitor` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `last_counter` date NOT NULL,
  `referred` text NOT NULL,
  `agent` varchar(255) NOT NULL,
  `platform` varchar(255) DEFAULT NULL,
  `version` varchar(255) DEFAULT NULL,
  `UAString` varchar(255) DEFAULT NULL,
  `ip` varchar(60) NOT NULL,
  `location` varchar(10) DEFAULT NULL,
  `hits` int(11) DEFAULT NULL,
  `honeypot` int(11) DEFAULT NULL,
  PRIMARY KEY (`ID`),
  UNIQUE KEY `date_ip_agent` (`last_counter`,`ip`,`agent`(75),`platform`(75),`version`(75)),
  KEY `agent` (`agent`),
  KEY `platform` (`platform`),
  KEY `version` (`version`),
  KEY `location` (`location`)
) ENGINE=InnoDB AUTO_INCREMENT=69 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_statistics_visitor`
--

LOCK TABLES `wp_statistics_visitor` WRITE;
/*!40000 ALTER TABLE `wp_statistics_visitor` DISABLE KEYS */;
INSERT INTO `wp_statistics_visitor` VALUES (1,'2018-10-09','http://45.77.202.181/wp-admin/plugin-install.php?s=Statistics&tab=search&type=term','Chrome','Windows','69.0.3497.100',NULL,'131.228.2.20','000',NULL,NULL),(2,'2018-10-09','http://45.77.202.181','Chrome','Windows','38.0.2125.122','','123.186.222.139','000',2,0),(3,'2018-10-09','http://45.77.202.181/','Chrome','Windows','38.0.2125.122','','23.239.119.11','000',2,0),(4,'2018-10-09','http://45.77.202.181','MSIE','Windows','11.0','','131.228.2.20','000',1,0),(5,'2018-10-09','http://45.77.202.181','Firefox','Windows','45.0','','222.82.48.194','000',1,0),(6,'2018-10-09','http://45.77.202.181','Chrome','Windows','52.0.2743.116','','187.109.234.98','000',1,0),(7,'2018-10-09','http://45.77.202.181','Safari','iPad','10.0','','115.195.170.58','000',22,0),(8,'2018-10-09','http://45.77.202.181','Safari','Macintosh','9.1.2','','189.19.147.21','000',1,0),(9,'2018-10-09','http://45.77.202.181','Firefox','Windows','45.0','','219.142.240.148','000',2,0),(10,'2018-10-09','http://45.77.202.181','Firefox','Windows','45.0','','125.76.61.20','000',1,0),(11,'2018-10-09','http://45.77.202.181','Chrome','Windows','45.0.2454.101','','125.76.61.20','000',1,0),(12,'2018-10-09','http://45.77.202.181','未知','未知','未知','','173.249.24.115','000',1,0),(13,'2018-10-09','http://45.77.202.181','未知','未知','未知','','46.148.26.2','000',1,0),(14,'2018-10-09','http://45.77.202.181','RPS','未知','HTTP','','171.13.14.49','000',1,0),(15,'2018-10-09','http://45.77.202.181','Chrome','Android','57.0.2987.108','','115.195.170.58','000',4,0),(16,'2018-10-09','http://45.77.202.181','未知','未知','未知','','198.108.66.176','000',1,0),(17,'2018-10-09','http://45.77.202.181','Safari','Macintosh','9.1.2','','177.105.227.87','000',1,0),(18,'2018-10-09','http://45.77.202.181','未知','未知','未知','','196.188.63.44','000',1,0),(19,'2018-10-09','http://45.77.202.181','未知','未知','未知','','172.104.144.112','000',1,0),(20,'2018-10-09','http://45.77.202.181','未知','未知','未知','','107.170.204.138','000',1,0),(21,'2018-10-09','http://45.77.202.181','Chrome','Windows','38.0.2125.122','','123.186.217.206','000',2,0),(22,'2018-10-09','http://45.77.202.181','Chrome','Windows','45.0.2454.101','','1.80.71.177','000',1,0),(23,'2018-10-09','http://45.77.202.181','MSIE','Windows','11.0','','1.80.71.177','000',1,0),(24,'2018-10-09','http://45.77.202.181','Chrome','Windows','51.0.2704.103','','201.43.185.37','000',1,0),(25,'2018-10-09','http://45.77.202.181','Safari','Macintosh','9.1.2','','201.43.185.37','000',1,0),(26,'2018-10-09','https://45.77.202.181','Chrome','Windows','50.0.2661.102','','59.36.132.222','000',1,0),(27,'2018-10-09','http://45.77.202.181','curl','Linux','7.19.7','','59.36.132.222','000',1,0),(28,'2018-10-09','http://45.77.202.181','Chrome','Windows','51.0.2704.103','','138.255.15.174','000',1,0),(29,'2018-10-09','http://45.77.202.181','Chrome','Windows','51.0.2704.103','','122.102.27.140','000',1,0),(30,'2018-10-09','http://45.77.202.181','Chrome','Windows','52.0.2743.116','','179.106.98.106','000',1,0),(31,'2018-10-09','http://45.77.202.181','Chrome','Windows','52.0.2743.116','','187.35.36.191','000',1,0),(32,'2018-10-09','http://45.77.202.181','Chrome','Windows','51.0.2704.103','','37.128.171.198','000',1,0),(33,'2018-10-09','http://45.77.202.181','Firefox','Macintosh','47.0','','60.191.38.77','000',2,0),(34,'2018-10-10','http://45.77.202.181','Chrome','Windows','51.0.2704.103','','201.27.46.136','000',1,0),(35,'2018-10-10','http://45.77.202.181','RPS','未知','HTTP','','171.13.14.35','000',1,0),(36,'2018-10-10','http://45.77.202.181','Chrome','Android','65.0.3325.109','','183.131.240.166','000',1,0),(37,'2018-10-10','http://45.77.202.181','Chrome','Windows','69.0.3497.100','','183.131.240.165','000',24,0),(38,'2018-10-10','http://45.77.202.181','Chrome','Windows','69.0.3497.100','','221.12.3.195','000',4,0),(39,'2018-10-10','http://45.77.202.181','Firefox','未知','31.0','','196.52.43.112','000',1,0),(40,'2018-10-10','http://45.77.202.181','未知','未知','未知','','190.97.3.234','000',1,0),(41,'2018-10-10','http://45.77.202.181','Firefox','Linux','47.0','','190.97.3.234','000',1,0),(42,'2018-10-10','http://45.77.202.181','Chrome','Windows','50.0.2661.102','','123.179.14.191','000',1,0),(43,'2018-10-10','http://45.77.202.181:80','MSIE','Windows','9.0','','182.48.105.210','000',1,0),(44,'2018-10-10','http://45.77.202.181','Chrome','Windows','52.0.2743.116','','150.242.255.94','000',1,0),(45,'2018-10-10','http://45.77.202.181','MSIE','Windows','11.0','','113.128.104.8','000',1,0),(46,'2018-10-10','http://45.77.202.181','Firefox','Windows','45.0','','113.128.104.8','000',1,0),(47,'2018-10-10','http://45.77.202.181','Chrome','iPhone','30.0.1599.12','','61.151.207.252','000',1,0),(48,'2018-10-10','http://45.77.202.181','Chrome','iPhone','30.0.1599.12','','61.151.179.27','000',1,0),(49,'2018-10-10','http://45.77.202.181','Firefox','Windows','3.0b4','','120.204.17.46','000',1,0),(50,'2018-10-10','http://45.77.202.181','Firefox','Windows','3.0b4','','223.167.152.21','000',1,0),(51,'2018-10-10','http://45.77.202.181','AppleWebKit','iPhone','602.4.6','','101.91.60.107','000',1,0),(52,'2018-10-10','http://45.77.202.181','Chrome','Android','53.0.2785.49','','101.89.19.149','000',1,0),(53,'2018-10-10','http://45.77.202.181','Chrome','Android','46.0.2490.11','','101.91.60.11','000',1,0),(54,'2018-10-10','http://45.77.202.181','Chrome','iPhone','30.0.1599.12','','14.116.133.169','000',1,0),(55,'2018-10-10','http://45.77.202.181','Chrome','Android','37.0.0.0','','61.129.6.251','000',1,0),(56,'2018-10-10','http://45.77.202.181','Chrome','Android','65.0.3325.109','','112.17.235.242','000',3,0),(57,'2018-10-10','http://45.77.202.181','Chrome','Windows','51.0.2704.103','','154.126.178.59','000',1,0),(58,'2018-10-10','http://45.77.202.181','MSIE','Windows','11.0','','131.228.2.20','000',4,0),(59,'2018-10-10','http://45.77.202.181/','MSIE','Windows','11.0','','131.228.2.21','000',2,0),(60,'2018-10-10','http://45.77.202.181','Chrome','Windows','52.0.2743.116','','177.69.245.108','000',1,0),(61,'2018-10-10','http://45.77.202.181','未知','未知','未知','','185.100.87.248','000',3,0),(62,'2018-10-10','http://45.77.202.181','Chrome','Windows','36.0.1985.125','','185.100.87.248','000',1,0),(63,'2018-10-10','http://45.77.202.181','Chrome','Windows','52.0.2743.116','','152.169.225.173','000',1,0),(64,'2018-10-10','http://45.77.202.181','Chrome','Android','61.0.3163.128','','36.23.72.209','000',3,0),(65,'2018-10-10','http://45.77.202.181','Chrome','Windows','59.0.3071.115','','120.92.72.66','000',1,0),(66,'2018-10-10','http://45.77.202.181','Chrome','Windows','52.0.2743.116','','189.78.156.248','000',1,0),(67,'2018-10-10','http://45.77.202.181','未知','未知','未知','','24.156.125.118','000',2,0),(68,'2018-10-10','http://45.77.202.181','Chrome','Windows','51.0.2704.103','','173.216.240.191','000',1,0);
/*!40000 ALTER TABLE `wp_statistics_visitor` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_term_relationships`
--

DROP TABLE IF EXISTS `wp_term_relationships`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_term_relationships` (
  `object_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  `term_taxonomy_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  `term_order` int(11) NOT NULL DEFAULT '0',
  PRIMARY KEY (`object_id`,`term_taxonomy_id`),
  KEY `term_taxonomy_id` (`term_taxonomy_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_term_relationships`
--

LOCK TABLES `wp_term_relationships` WRITE;
/*!40000 ALTER TABLE `wp_term_relationships` DISABLE KEYS */;
INSERT INTO `wp_term_relationships` VALUES (18,2,0),(19,2,0),(21,2,0),(26,3,0),(41,6,0),(43,10,0),(46,10,0),(48,12,0),(50,12,0),(52,6,0),(60,9,0),(62,11,0),(68,9,0),(70,9,0),(72,6,0),(74,9,0),(76,9,0),(78,10,0),(80,6,0),(82,9,0),(84,9,0),(86,9,0),(131,1,0),(148,13,0),(150,13,0),(152,1,0),(155,12,0),(157,12,0),(162,14,0),(164,14,0),(166,10,0),(167,14,0);
/*!40000 ALTER TABLE `wp_term_relationships` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_term_taxonomy`
--

DROP TABLE IF EXISTS `wp_term_taxonomy`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_term_taxonomy` (
  `term_taxonomy_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `term_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  `taxonomy` varchar(32) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `description` longtext COLLATE utf8mb4_unicode_ci NOT NULL,
  `parent` bigint(20) unsigned NOT NULL DEFAULT '0',
  `count` bigint(20) NOT NULL DEFAULT '0',
  PRIMARY KEY (`term_taxonomy_id`),
  UNIQUE KEY `term_id_taxonomy` (`term_id`,`taxonomy`),
  KEY `taxonomy` (`taxonomy`)
) ENGINE=InnoDB AUTO_INCREMENT=15 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_term_taxonomy`
--

LOCK TABLES `wp_term_taxonomy` WRITE;
/*!40000 ALTER TABLE `wp_term_taxonomy` DISABLE KEYS */;
INSERT INTO `wp_term_taxonomy` VALUES (1,1,'category','',0,1),(2,2,'nav_menu','',0,3),(3,3,'nav_menu','',0,1),(6,6,'category','',0,4),(7,7,'post_tag','',0,0),(8,8,'post_tag','',0,0),(9,9,'category','',0,8),(10,10,'category','',0,3),(11,11,'category','',0,1),(12,12,'category','',0,4),(13,13,'category','',0,2),(14,14,'category','',0,3);
/*!40000 ALTER TABLE `wp_term_taxonomy` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_termmeta`
--

DROP TABLE IF EXISTS `wp_termmeta`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_termmeta` (
  `meta_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `term_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  `meta_key` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `meta_value` longtext COLLATE utf8mb4_unicode_ci,
  PRIMARY KEY (`meta_id`),
  KEY `term_id` (`term_id`),
  KEY `meta_key` (`meta_key`(191))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_termmeta`
--

LOCK TABLES `wp_termmeta` WRITE;
/*!40000 ALTER TABLE `wp_termmeta` DISABLE KEYS */;
/*!40000 ALTER TABLE `wp_termmeta` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_terms`
--

DROP TABLE IF EXISTS `wp_terms`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_terms` (
  `term_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(200) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `slug` varchar(200) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `term_group` bigint(10) NOT NULL DEFAULT '0',
  PRIMARY KEY (`term_id`),
  KEY `slug` (`slug`(191)),
  KEY `name` (`name`(191))
) ENGINE=InnoDB AUTO_INCREMENT=15 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_terms`
--

LOCK TABLES `wp_terms` WRITE;
/*!40000 ALTER TABLE `wp_terms` DISABLE KEYS */;
INSERT INTO `wp_terms` VALUES (1,'Uncategorized','uncategorized',0),(2,'Top Menu','top-menu',0),(3,'Social Links Menu','social-links-menu',0),(6,'Nokia Learn','nokia-learn',0),(7,'aaaaa','aaaaaa',0),(8,'six666','six666',0),(9,'c++','cplusplus',0),(10,'linux','linux',0),(11,'开源项目','opensource',0),(12,'基础技能','basic-skill',0),(13,'vps建站','vps%e5%bb%ba%e7%ab%99',0),(14,'调试技巧','%e8%b0%83%e8%af%95%e6%8a%80%e5%b7%a7',0);
/*!40000 ALTER TABLE `wp_terms` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_usermeta`
--

DROP TABLE IF EXISTS `wp_usermeta`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_usermeta` (
  `umeta_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `user_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  `meta_key` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `meta_value` longtext COLLATE utf8mb4_unicode_ci,
  PRIMARY KEY (`umeta_id`),
  KEY `user_id` (`user_id`),
  KEY `meta_key` (`meta_key`(191))
) ENGINE=InnoDB AUTO_INCREMENT=36 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_usermeta`
--

LOCK TABLES `wp_usermeta` WRITE;
/*!40000 ALTER TABLE `wp_usermeta` DISABLE KEYS */;
INSERT INTO `wp_usermeta` VALUES (1,1,'nickname','wordpress'),(2,1,'first_name',''),(3,1,'last_name',''),(4,1,'description',''),(5,1,'rich_editing','true'),(6,1,'syntax_highlighting','true'),(7,1,'comment_shortcuts','false'),(8,1,'admin_color','fresh'),(9,1,'use_ssl','0'),(10,1,'show_admin_bar_front','true'),(11,1,'locale',''),(12,1,'wp_capabilities','a:1:{s:13:\"administrator\";b:1;}'),(13,1,'wp_user_level','10'),(14,1,'dismissed_wp_pointers','wp496_privacy,theme_editor_notice'),(15,1,'show_welcome_panel','0'),(17,1,'wp_dashboard_quick_press_last_post_id','4'),(18,1,'community-events-location','a:1:{s:2:\"ip\";s:10:\"221.12.3.0\";}'),(19,1,'show_try_gutenberg_panel','0'),(20,1,'wp_user-settings','mfold=o&editor=tinymce&post_dfw=off&libraryContent=browse&align=left&imgsize=full&advImgDetails=show&hidetb=1&editor_plain_text_paste_warning=2'),(21,1,'wp_user-settings-time','1539157892'),(22,1,'nav_menu_recently_edited','2'),(23,1,'managenav-menuscolumnshidden','a:5:{i:0;s:11:\"link-target\";i:1;s:11:\"css-classes\";i:2;s:3:\"xfn\";i:3;s:11:\"description\";i:4;s:15:\"title-attribute\";}'),(24,1,'metaboxhidden_nav-menus','a:2:{i:0;s:12:\"add-post_tag\";i:1;s:15:\"add-post_format\";}'),(25,1,'closedpostboxes_page','a:0:{}'),(26,1,'metaboxhidden_page','a:6:{i:0;s:10:\"postcustom\";i:1;s:16:\"commentstatusdiv\";i:2;s:11:\"commentsdiv\";i:3;s:7:\"slugdiv\";i:4;s:9:\"authordiv\";i:5;s:29:\"wp_statistics_editor_meta_box\";}'),(27,1,'session_tokens','a:5:{s:64:\"e3eec2524867fa5bc55d5a2a7e9ebb63f7972801a60ee6294d6691e8d4f1ff2c\";a:4:{s:10:\"expiration\";i:1539223376;s:2:\"ip\";s:12:\"131.228.2.21\";s:2:\"ua\";s:68:\"Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko\";s:5:\"login\";i:1539050576;}s:64:\"b16d23d69d4db9e9ccd2c2fe203bddd6db8058854c09639e14e0c6d893570eb9\";a:4:{s:10:\"expiration\";i:1539250392;s:2:\"ip\";s:12:\"131.228.2.20\";s:2:\"ua\";s:109:\"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36\";s:5:\"login\";i:1539077592;}s:64:\"52820a73528244551d332ce3d9672408fa35f3fefe083bae47e9ada728d4468c\";a:4:{s:10:\"expiration\";i:1539307922;s:2:\"ip\";s:12:\"221.12.3.195\";s:2:\"ua\";s:109:\"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36\";s:5:\"login\";i:1539135122;}s:64:\"a8ea64dd3945dd8e0968f11028b1998f24ab0e3688952d2b5f0f511fab5fca6a\";a:4:{s:10:\"expiration\";i:1539323287;s:2:\"ip\";s:12:\"221.12.3.195\";s:2:\"ua\";s:109:\"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36\";s:5:\"login\";i:1539150487;}s:64:\"1873c521362301a4585bcdc80b2987962a8a887942d47b62023d61436bc6c35d\";a:4:{s:10:\"expiration\";i:1539328927;s:2:\"ip\";s:12:\"221.12.3.195\";s:2:\"ua\";s:109:\"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36\";s:5:\"login\";i:1539156127;}}'),(28,1,'wp_media_library_mode','grid'),(29,1,'wp_statistics','a:2:{s:13:\"dashboard_set\";s:6:\"12.4.3\";s:10:\"editor_set\";s:6:\"12.4.3\";}'),(30,1,'metaboxhidden_dashboard','a:12:{i:0;s:29:\"wp-statistics-browsers-widget\";i:1;s:30:\"wp-statistics-countries-widget\";i:2;s:28:\"wp-statistics-hitsmap-widget\";i:3;s:25:\"wp-statistics-hits-widget\";i:4;s:26:\"wp-statistics-pages-widget\";i:5;s:27:\"wp-statistics-recent-widget\";i:6;s:30:\"wp-statistics-referring-widget\";i:7;s:27:\"wp-statistics-search-widget\";i:8;s:28:\"wp-statistics-summary-widget\";i:9;s:26:\"wp-statistics-words-widget\";i:10;s:33:\"wp-statistics-top-visitors-widget\";i:11;s:37:\"wp-statistics-searched-phrases-widget\";}'),(31,1,'closedpostboxes_toplevel_page_wps_overview_page','a:0:{}'),(32,1,'metaboxhidden_toplevel_page_wps_overview_page','a:0:{}'),(33,1,'metaboxhidden_post','a:1:{i:0;s:29:\"wp_statistics_editor_meta_box\";}'),(34,1,'closedpostboxes_post','a:0:{}'),(35,1,'wp_managetoplevel_page_snippetscolumnshidden','a:1:{i:0;s:2:\"id\";}');
/*!40000 ALTER TABLE `wp_usermeta` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_users`
--

DROP TABLE IF EXISTS `wp_users`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_users` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `user_login` varchar(60) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `user_pass` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `user_nicename` varchar(50) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `user_email` varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `user_url` varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `user_registered` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `user_activation_key` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `user_status` int(11) NOT NULL DEFAULT '0',
  `display_name` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  PRIMARY KEY (`ID`),
  KEY `user_login_key` (`user_login`),
  KEY `user_nicename` (`user_nicename`),
  KEY `user_email` (`user_email`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_users`
--

LOCK TABLES `wp_users` WRITE;
/*!40000 ALTER TABLE `wp_users` DISABLE KEYS */;
INSERT INTO `wp_users` VALUES (1,'wordpress','$P$BN.H2zcne2YF0iD8MK7CU0kRi38OPh/','wordpress','bxp0805@163.com','','2018-10-08 06:57:17','',0,'wordpress');
/*!40000 ALTER TABLE `wp_users` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2018-10-10  8:43:18
